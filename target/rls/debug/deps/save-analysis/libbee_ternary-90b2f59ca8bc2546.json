{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha","program":"/Users/julia/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","bee_ternary","--edition=2018","/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"serde\"","--cfg","feature=\"serde1\"","-C","metadata=90b2f59ca8bc2546","-C","extra-filename=-90b2f59ca8bc2546","--out-dir","/Users/julia/ruhackathon/target/rls/debug/deps","-L","dependency=/Users/julia/ruhackathon/target/rls/debug/deps","--extern","num_traits=/Users/julia/ruhackathon/target/rls/debug/deps/libnum_traits-23226743ad4a5c17.rmeta","--extern","serde=/Users/julia/ruhackathon/target/rls/debug/deps/libserde-7a9d98297ad05faf.rmeta","--cap-lints","allow","--cfg","has_i128","--cfg","has_u128","--error-format=json","--sysroot","/Users/julia/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/julia/ruhackathon/target/rls/debug/deps/libbee_ternary-90b2f59ca8bc2546.rmeta"},"prelude":{"crate_id":{"name":"bee_ternary","disambiguator":[4764740156191787918,2988193664899713553]},"crate_root":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src","external_crates":[{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14497711731351875891,7574154950596153320]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17161976177339802527,9637120080719870273]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12784072134307519025,4657485898025748013]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8860544973196061204,9932137894390183628]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15484098214765895148,4360652648143560453]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13802683045354889200,17279120461159080731]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13733846401634403672,16568137600355934567]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5926527291982439463,7261863668131194074]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2147386378482378397,1448349958257004752]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8504510625746843556,11549570195915831773]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[1145582961014725186,16562354883654090131]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6582153069738696943,14519107576634371424]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15498041504304623936,9266600846380482125]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[12608136573466536856,1503974727608604885]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[16755883997827362908,2889333423780235391]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[3009561993154964965,13259943199418826037]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/convert.rs","num":17,"id":{"name":"num_traits","disambiguator":[13091826814117835981,7718734604099906687]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/serde.rs","num":18,"id":{"name":"serde","disambiguator":[16680636934981297129,6890593759358445311]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/serde.rs","num":19,"id":{"name":"serde_derive","disambiguator":[2110390725466229322,3416891245191794241]}}],"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":77,"byte_end":33726,"line_start":4,"line_end":947,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1290},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":69439,"byte_end":69444,"line_start":14,"line_end":14,"column_start":26,"column_end":31},"alias_span":null,"name":"Btrit","value":"","parent":{"krate":0,"index":429}},{"kind":"Use","ref_id":{"krate":0,"index":1318},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":69458,"byte_end":69463,"line_start":14,"line_end":14,"column_start":45,"column_end":50},"alias_span":null,"name":"Utrit","value":"","parent":{"krate":0,"index":429}},{"kind":"Use","ref_id":{"krate":0,"index":1259},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":3867,"byte_end":3874,"line_start":95,"line_end":95,"column_start":12,"column_end":19},"alias_span":null,"name":"T1B1Buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":170},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":3876,"byte_end":3880,"line_start":95,"line_end":95,"column_start":21,"column_end":25},"alias_span":null,"name":"T1B1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1266},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":3894,"byte_end":3901,"line_start":96,"line_end":96,"column_start":12,"column_end":19},"alias_span":null,"name":"T2B1Buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":235},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":3903,"byte_end":3907,"line_start":96,"line_end":96,"column_start":21,"column_end":25},"alias_span":null,"name":"T2B1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1272},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":3921,"byte_end":3928,"line_start":97,"line_end":97,"column_start":12,"column_end":19},"alias_span":null,"name":"T3B1Buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":289},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":3930,"byte_end":3934,"line_start":97,"line_end":97,"column_start":21,"column_end":25},"alias_span":null,"name":"T3B1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1278},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":3948,"byte_end":3955,"line_start":98,"line_end":98,"column_start":12,"column_end":19},"alias_span":null,"name":"T4B1Buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":343},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":3957,"byte_end":3961,"line_start":98,"line_end":98,"column_start":21,"column_end":25},"alias_span":null,"name":"T4B1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1284},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":3975,"byte_end":3982,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"alias_span":null,"name":"T5B1Buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":397},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":3984,"byte_end":3988,"line_start":99,"line_end":99,"column_start":21,"column_end":25},"alias_span":null,"name":"T5B1","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1290},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":4002,"byte_end":4007,"line_start":100,"line_end":100,"column_start":12,"column_end":17},"alias_span":null,"name":"Btrit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":587},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":4009,"byte_end":4021,"line_start":100,"line_end":100,"column_start":19,"column_end":31},"alias_span":null,"name":"ShiftTernary","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":580},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":4023,"byte_end":4027,"line_start":100,"line_end":100,"column_start":33,"column_end":37},"alias_span":null,"name":"Trit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1318},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":4029,"byte_end":4034,"line_start":100,"line_end":100,"column_start":39,"column_end":44},"alias_span":null,"name":"Utrit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1346},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":4049,"byte_end":4054,"line_start":101,"line_end":101,"column_start":13,"column_end":18},"alias_span":null,"name":"Tryte","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1440},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":4056,"byte_end":4064,"line_start":101,"line_end":101,"column_start":20,"column_end":28},"alias_span":null,"name":"TryteBuf","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":77,"byte_end":33726,"line_start":4,"line_end":947,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":38},{"krate":0,"index":104},{"krate":0,"index":140},{"krate":0,"index":213},{"krate":0,"index":267},{"krate":0,"index":321},{"krate":0,"index":375},{"krate":0,"index":429},{"krate":0,"index":590},{"krate":0,"index":675},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":830},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":841},{"krate":0,"index":844},{"krate":0,"index":847},{"krate":0,"index":850},{"krate":0,"index":853},{"krate":0,"index":856},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":869},{"krate":0,"index":872},{"krate":0,"index":875},{"krate":0,"index":878},{"krate":0,"index":881},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":887},{"krate":0,"index":890},{"krate":0,"index":893},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":915},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":929},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":936},{"krate":0,"index":939},{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":949},{"krate":0,"index":1444},{"krate":0,"index":1447},{"krate":0,"index":952},{"krate":0,"index":954},{"krate":0,"index":1449},{"krate":0,"index":1453},{"krate":0,"index":955},{"krate":0,"index":985},{"krate":0,"index":991},{"krate":0,"index":1001},{"krate":0,"index":1005},{"krate":0,"index":1009},{"krate":0,"index":1013},{"krate":0,"index":1017},{"krate":0,"index":1020},{"krate":0,"index":1025},{"krate":0,"index":1027},{"krate":0,"index":1031},{"krate":0,"index":1035},{"krate":0,"index":1039},{"krate":0,"index":1043},{"krate":0,"index":1046},{"krate":0,"index":1050},{"krate":0,"index":1053},{"krate":0,"index":1057},{"krate":0,"index":1060},{"krate":0,"index":1064},{"krate":0,"index":1067},{"krate":0,"index":1071},{"krate":0,"index":1074},{"krate":0,"index":1078},{"krate":0,"index":1081},{"krate":0,"index":1085},{"krate":0,"index":1457},{"krate":0,"index":1461},{"krate":0,"index":1088},{"krate":0,"index":1102},{"krate":0,"index":1105},{"krate":0,"index":1109},{"krate":0,"index":1113},{"krate":0,"index":1117},{"krate":0,"index":1120},{"krate":0,"index":1123},{"krate":0,"index":1127},{"krate":0,"index":1129},{"krate":0,"index":1133},{"krate":0,"index":1136},{"krate":0,"index":1140},{"krate":0,"index":1144},{"krate":0,"index":1147},{"krate":0,"index":1150},{"krate":0,"index":1153},{"krate":0,"index":1156}],"decl_id":null,"docs":" A general-purpose ternary manipulation, translation and encoding crate.","sig":null,"attributes":[{"value":"/ A general-purpose ternary manipulation, translation and encoding crate.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":77,"byte_end":152,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":153,"byte_end":156,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":157,"byte_end":171,"line_start":6,"line_end":6,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":172,"byte_end":175,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ - Creation of trit and tryte buffers with multiple encodings","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":176,"byte_end":240,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/ - Safe encoding API that allows the efficient manipulation and sharing of trit and tryte buffers and slices","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":241,"byte_end":352,"line_start":9,"line_end":9,"column_start":1,"column_end":112}},{"value":"/ - Mutation of trit buffers and slices","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":353,"byte_end":394,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/ - Ternary BigInt implementation","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":395,"byte_end":430,"line_start":11,"line_end":11,"column_start":1,"column_end":36}},{"value":"/ - Balanced and unbalanced ternary","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":431,"byte_end":468,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/ - `serde` support","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":469,"byte_end":490,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":491,"byte_end":494,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Encodings","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":495,"byte_end":510,"line_start":15,"line_end":15,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":511,"byte_end":514,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate includes support for many different trit encodings. Encodings allow the trading off","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":515,"byte_end":613,"line_start":17,"line_end":17,"column_start":1,"column_end":99}},{"value":"/ of different features against each other.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":614,"byte_end":659,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":660,"byte_end":663,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`T1B1`] is the canonical default encoding and represents every trit with a single byte of","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":664,"byte_end":758,"line_start":20,"line_end":20,"column_start":1,"column_end":95}},{"value":"/ memory. It is the fastest encoding to manipulate since no bitwise operations are necessary to","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":759,"byte_end":856,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"/ pack and unpack it from memory during manipulation. As a result of this, it also permits","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":857,"byte_end":949,"line_start":22,"line_end":22,"column_start":1,"column_end":93}},{"value":"/ certain extra features like mutable chunking and accessing its contents through ordinary","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":950,"byte_end":1042,"line_start":23,"line_end":23,"column_start":1,"column_end":93}},{"value":"/ slices.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":1043,"byte_end":1054,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":1055,"byte_end":1058,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`T3B1`] is also commonly used. It provides good compression and has the advantage that it has","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":1059,"byte_end":1157,"line_start":26,"line_end":26,"column_start":1,"column_end":99}},{"value":"/ an identical bit representation as a [`Tryte`] slice. For this reason, it is the only encoding","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":1158,"byte_end":1256,"line_start":27,"line_end":27,"column_start":1,"column_end":99}},{"value":"/ that can be converted to a tryte slice with no overhead.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":1257,"byte_end":1317,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":1318,"byte_end":1321,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`T5B1`] is the most compressed encoding. It provides very high storage densities (almost","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":1322,"byte_end":1415,"line_start":30,"line_end":30,"column_start":1,"column_end":94}},{"value":"/ optimal, in fact) and is the densest encoding supported by this crate.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":1416,"byte_end":1490,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":1491,"byte_end":1494,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ It is likely that one of the 3 encodings above will suit your requirements. In addition, this","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":1495,"byte_end":1592,"line_start":33,"line_end":33,"column_start":1,"column_end":98}},{"value":"/ crate also supports [`T2B1`] and [`T4B1`] for completeness.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":1593,"byte_end":1656,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":1657,"byte_end":1660,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Byte Alignment","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":1661,"byte_end":1681,"line_start":36,"line_end":36,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":1682,"byte_end":1685,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This crate supports creating sub-slices of trit slices. To enable this, it stores extra","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":1686,"byte_end":1777,"line_start":38,"line_end":38,"column_start":1,"column_end":92}},{"value":"/ metadata along with a trit slice in order to correct identify the index of a buffer it starts","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":1778,"byte_end":1875,"line_start":39,"line_end":39,"column_start":1,"column_end":98}},{"value":"/ on. With compressed encodings, such as [`T3B1`], that starting index (and, indeed, the end","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":1876,"byte_end":1970,"line_start":40,"line_end":40,"column_start":1,"column_end":95}},{"value":"/ index) may not fall exactly on a byte boundary.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":1971,"byte_end":2022,"line_start":41,"line_end":41,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":2023,"byte_end":2026,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This crate makes a best attempt at avoiding the negative ramifications of this fact, but sadly","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":2027,"byte_end":2125,"line_start":43,"line_end":43,"column_start":1,"column_end":99}},{"value":"/ some still leak through into the API. For example, some methods may panic if a slice does not","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":2126,"byte_end":2223,"line_start":44,"line_end":44,"column_start":1,"column_end":98}},{"value":"/ have a byte-aligned starting index or otherwise does not fulfil certain invariants. However,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":2224,"byte_end":2320,"line_start":45,"line_end":45,"column_start":1,"column_end":97}},{"value":"/ all panicking behaviours are documented on each method such that you can easily avoid","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":2321,"byte_end":2410,"line_start":46,"line_end":46,"column_start":1,"column_end":90}},{"value":"/ circumstances like this.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":2411,"byte_end":2439,"line_start":47,"line_end":47,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":2440,"byte_end":2443,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ When the documentation refers to 'byte alignment', it is referring specifically to whether the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":2444,"byte_end":2542,"line_start":49,"line_end":49,"column_start":1,"column_end":99}},{"value":"/ starting index is a multiple of the compression factor. For example a byte-aligned [`T3B1`]","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":2543,"byte_end":2638,"line_start":50,"line_end":50,"column_start":1,"column_end":96}},{"value":"/ buffer will always start on an index of the *original* buffer that is a multiple of 3.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":2639,"byte_end":2729,"line_start":51,"line_end":51,"column_start":1,"column_end":91}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":2731,"byte_end":2753,"line_start":53,"line_end":53,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/b1t6.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"b1t6","qualname":"::b1t6","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/b1t6.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":1160},{"krate":0,"index":1165},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":37}],"decl_id":null,"docs":" Utility functions for encoding and decoding B1T6 encoding.\n","sig":null,"attributes":[{"value":"/ Utility functions for encoding and decoding B1T6 encoding.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":2772,"byte_end":2834,"line_start":57,"line_end":57,"column_start":1,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1161},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/b1t6.rs","byte_start":34138,"byte_end":34151,"line_start":15,"line_end":15,"column_start":5,"column_end":18},"name":"InvalidTrytes","qualname":"::b1t6::DecodeError::InvalidTrytes","value":"DecodeError::InvalidTrytes([Tryte; ])","parent":{"krate":0,"index":1160},"children":[],"decl_id":null,"docs":" Two trits had an invalid B1T6 representation.\n","sig":null,"attributes":[{"value":"/ Two trits had an invalid B1T6 representation.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/b1t6.rs","byte_start":34084,"byte_end":34133,"line_start":14,"line_end":14,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/b1t6.rs","byte_start":34066,"byte_end":34077,"line_start":13,"line_end":13,"column_start":10,"column_end":21},"name":"DecodeError","qualname":"::b1t6::DecodeError","value":"pub enum DecodeError { InvalidTrytes([Tryte; ]), }","parent":null,"children":[{"krate":0,"index":1161}],"decl_id":null,"docs":" An error that may be emitted when decoding a B1T6 trit slice.\n","sig":null,"attributes":[{"value":"/ An error that may be emitted when decoding a B1T6 trit slice.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/b1t6.rs","byte_start":33974,"byte_end":34039,"line_start":11,"line_end":11,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":31},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/b1t6.rs","byte_start":34216,"byte_end":34222,"line_start":19,"line_end":19,"column_start":8,"column_end":14},"name":"decode","qualname":"::b1t6::decode","value":"pub fn decode(&Trits) -> Result<Vec<u8>, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Decode a series of trits into bytes.\n","sig":null,"attributes":[{"value":"/ Decode a series of trits into bytes.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/b1t6.rs","byte_start":34168,"byte_end":34208,"line_start":18,"line_end":18,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":34},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/b1t6.rs","byte_start":34698,"byte_end":34704,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"encode","qualname":"::b1t6::encode","value":"pub fn encode<T: RawEncodingBuf>(&[u8]) -> TritBuf<T> where\nT::Slice: RawEncoding<Trit = Btrit>","parent":null,"children":[],"decl_id":null,"docs":" Encode a series of bytes into trits.\n","sig":null,"attributes":[{"value":"/ Encode a series of bytes into trits.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/b1t6.rs","byte_start":34650,"byte_end":34690,"line_start":32,"line_end":32,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":38},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/convert.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"convert","qualname":"::convert","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/convert.rs","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":1167},{"krate":0,"index":1174},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1179},{"krate":0,"index":1184},{"krate":0,"index":1187},{"krate":0,"index":1192},{"krate":0,"index":1195},{"krate":0,"index":1200},{"krate":0,"index":1203},{"krate":0,"index":1208},{"krate":0,"index":1211},{"krate":0,"index":1216},{"krate":0,"index":1219},{"krate":0,"index":1224},{"krate":0,"index":1227},{"krate":0,"index":1232},{"krate":0,"index":1235},{"krate":0,"index":1240},{"krate":0,"index":1243},{"krate":0,"index":1248},{"krate":0,"index":1251},{"krate":0,"index":1256},{"krate":0,"index":89},{"krate":0,"index":94},{"krate":0,"index":99}],"decl_id":null,"docs":" Conversions between to and from standard types.\n","sig":null,"attributes":[{"value":"/ Conversions between to and from standard types.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":2849,"byte_end":2900,"line_start":59,"line_end":59,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1168},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/convert.rs","byte_start":35822,"byte_end":35827,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"Empty","qualname":"::convert::Error::Empty","value":"Error::Empty","parent":{"krate":0,"index":1167},"children":[],"decl_id":null,"docs":" The trit slice didn't contain enough trits to be considered a numeric value.\n","sig":null,"attributes":[{"value":"/ The trit slice didn't contain enough trits to be considered a numeric value.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/convert.rs","byte_start":35737,"byte_end":35817,"line_start":11,"line_end":11,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/convert.rs","byte_start":35890,"byte_end":35898,"line_start":14,"line_end":14,"column_start":5,"column_end":13},"name":"Overflow","qualname":"::convert::Error::Overflow","value":"Error::Overflow","parent":{"krate":0,"index":1167},"children":[],"decl_id":null,"docs":" An overflow occurred during a numeric operation.\n","sig":null,"attributes":[{"value":"/ An overflow occurred during a numeric operation.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/convert.rs","byte_start":35833,"byte_end":35885,"line_start":13,"line_end":13,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/convert.rs","byte_start":35962,"byte_end":35971,"line_start":16,"line_end":16,"column_start":5,"column_end":14},"name":"Underflow","qualname":"::convert::Error::Underflow","value":"Error::Underflow","parent":{"krate":0,"index":1167},"children":[],"decl_id":null,"docs":" An underflow occurred during a numeric operation.\n","sig":null,"attributes":[{"value":"/ An underflow occurred during a numeric operation.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/convert.rs","byte_start":35904,"byte_end":35957,"line_start":15,"line_end":15,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/convert.rs","byte_start":35725,"byte_end":35730,"line_start":10,"line_end":10,"column_start":10,"column_end":15},"name":"Error","qualname":"::convert::Error","value":"pub enum Error { Empty, Overflow, Underflow, }","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1170},{"krate":0,"index":1172}],"decl_id":null,"docs":" An error that may be produced during numeric conversion.\n","sig":null,"attributes":[{"value":"/ An error that may be produced during numeric conversion.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/convert.rs","byte_start":35627,"byte_end":35687,"line_start":8,"line_end":8,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":89},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/convert.rs","byte_start":38349,"byte_end":38361,"line_start":93,"line_end":93,"column_start":8,"column_end":20},"name":"trits_to_int","qualname":"::convert::trits_to_int","value":"pub fn trits_to_int<I, T: RawEncoding + ?Sized>(&Trits<T>) -> Result<I, Error>\nwhere I: Clone + CheckedAdd + CheckedSub + PartialOrd + Num","parent":null,"children":[],"decl_id":null,"docs":" Attempt to convert the given trit slice into a number. If the numeric representation of the\n trit slice is too large or small to fit the numeric type, or does not contain any trits, an\n error will be returned.\n","sig":null,"attributes":[{"value":"/ Attempt to convert the given trit slice into a number. If the numeric representation of the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/convert.rs","byte_start":38122,"byte_end":38217,"line_start":90,"line_end":90,"column_start":1,"column_end":96}},{"value":"/ trit slice is too large or small to fit the numeric type, or does not contain any trits, an","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/convert.rs","byte_start":38218,"byte_end":38313,"line_start":91,"line_end":91,"column_start":1,"column_end":96}},{"value":"/ error will be returned.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/convert.rs","byte_start":38314,"byte_end":38341,"line_start":92,"line_end":92,"column_start":1,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":94},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/convert.rs","byte_start":39177,"byte_end":39193,"line_start":122,"line_end":122,"column_start":8,"column_end":24},"name":"signed_int_trits","qualname":"::convert::signed_int_trits","value":"pub fn signed_int_trits<I>(I) -> /*impl Trait*/ where I: Clone +\nAsPrimitive<i8> + FromPrimitive + Signed","parent":null,"children":[],"decl_id":null,"docs":" Produce an iterator over the [`Btrit`]s that make up a given integer.\n","sig":null,"attributes":[{"value":"/ Produce an iterator over the [`Btrit`]s that make up a given integer.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/convert.rs","byte_start":39096,"byte_end":39169,"line_start":121,"line_end":121,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":99},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/convert.rs","byte_start":39997,"byte_end":40015,"line_start":148,"line_end":148,"column_start":8,"column_end":26},"name":"unsigned_int_trits","qualname":"::convert::unsigned_int_trits","value":"pub fn unsigned_int_trits<I>(I) -> /*impl Trait*/ where I: Clone +\nAsPrimitive<u8> + FromPrimitive + Num","parent":null,"children":[],"decl_id":null,"docs":" Produce an iterator over the [`Utrit`]s that make up a given integer.\n","sig":null,"attributes":[{"value":"/ Produce an iterator over the [`Utrit`]s that make up a given integer.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/convert.rs","byte_start":39916,"byte_end":39989,"line_start":147,"line_end":147,"column_start":1,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":104},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"raw","qualname":"::raw","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":129}],"decl_id":null,"docs":" Types and traits that allow the implementation of new encoding formats.\n","sig":null,"attributes":[{"value":"/ Types and traits that allow the implementation of new encoding formats.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":2918,"byte_end":2993,"line_start":61,"line_end":61,"column_start":1,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":115},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":40802,"byte_end":40813,"line_start":10,"line_end":10,"column_start":11,"column_end":22},"name":"RawEncoding","qualname":"::raw::RawEncoding","value":"RawEncoding","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128}],"decl_id":null,"docs":" A trait to be implemented by alternative trit encoding scheme slices.\n","sig":null,"attributes":[{"value":"/ A trait to be implemented by alternative trit encoding scheme slices.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":40642,"byte_end":40715,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"allow(clippy :: len_without_is_empty)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":40716,"byte_end":40754,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"allow(clippy :: missing_safety_doc)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":40755,"byte_end":40791,"line_start":9,"line_end":9,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":116},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":40886,"byte_end":40890,"line_start":12,"line_end":12,"column_start":10,"column_end":14},"name":"Trit","qualname":"::raw::RawEncoding::Trit","value":"type Trit: Trit;","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" The type of trit associated with this trit encoding.\n","sig":null,"attributes":[{"value":"/ The type of trit associated with this trit encoding.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":40820,"byte_end":40876,"line_start":11,"line_end":11,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":117},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":40983,"byte_end":40986,"line_start":15,"line_end":15,"column_start":10,"column_end":13},"name":"Buf","qualname":"::raw::RawEncoding::Buf","value":"type Buf: RawEncodingBuf<Slice = Self>;","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" The trit buffer encoding associated with this trit slice encoding.\n","sig":null,"attributes":[{"value":"/ The trit buffer encoding associated with this trit slice encoding.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":40903,"byte_end":40973,"line_start":14,"line_end":14,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":41070,"byte_end":41075,"line_start":18,"line_end":18,"column_start":8,"column_end":13},"name":"empty","qualname":"::raw::RawEncoding::empty","value":"pub fn empty() -> &'static Self","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" Get an empty slice of this encoding\n","sig":null,"attributes":[{"value":"/ Get an empty slice of this encoding","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":41023,"byte_end":41062,"line_start":17,"line_end":17,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":41151,"byte_end":41154,"line_start":21,"line_end":21,"column_start":8,"column_end":11},"name":"len","qualname":"::raw::RawEncoding::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" Get the number of trits in this buffer\n","sig":null,"attributes":[{"value":"/ Get the number of trits in this buffer","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":41101,"byte_end":41143,"line_start":20,"line_end":20,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":41250,"byte_end":41261,"line_start":24,"line_end":24,"column_start":8,"column_end":19},"name":"as_i8_slice","qualname":"::raw::RawEncoding::as_i8_slice","value":"pub fn as_i8_slice(&Self) -> &[i8]","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" Interpret the raw data of this encoding as a slice of [`i8`].\n","sig":null,"attributes":[{"value":"/ Interpret the raw data of this encoding as a slice of [`i8`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":41177,"byte_end":41242,"line_start":23,"line_end":23,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":41372,"byte_end":41387,"line_start":27,"line_end":27,"column_start":15,"column_end":30},"name":"as_i8_slice_mut","qualname":"::raw::RawEncoding::as_i8_slice_mut","value":"pub unsafe fn as_i8_slice_mut(&mut Self) -> &mut [i8]","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" Interpret the raw data of this encoding as a mutable slice of [`i8`].\n","sig":null,"attributes":[{"value":"/ Interpret the raw data of this encoding as a mutable slice of [`i8`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":41284,"byte_end":41357,"line_start":26,"line_end":26,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":41468,"byte_end":41481,"line_start":30,"line_end":30,"column_start":15,"column_end":28},"name":"get_unchecked","qualname":"::raw::RawEncoding::get_unchecked","value":"pub unsafe fn get_unchecked(&Self, usize) -> Self::Trit","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" Get the trit at the given index\n","sig":null,"attributes":[{"value":"/ Get the trit at the given index","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":41418,"byte_end":41453,"line_start":29,"line_end":29,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":41573,"byte_end":41586,"line_start":33,"line_end":33,"column_start":15,"column_end":28},"name":"set_unchecked","qualname":"::raw::RawEncoding::set_unchecked","value":"pub unsafe fn set_unchecked(&mut Self, usize, Self::Trit)","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" Set the trit at the given index\n","sig":null,"attributes":[{"value":"/ Set the trit at the given index","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":41523,"byte_end":41558,"line_start":32,"line_end":32,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":41680,"byte_end":41695,"line_start":36,"line_end":36,"column_start":15,"column_end":30},"name":"slice_unchecked","qualname":"::raw::RawEncoding::slice_unchecked","value":"pub unsafe fn slice_unchecked(&Self, Range<usize>) -> &Self","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" Get a slice of this slice\n","sig":null,"attributes":[{"value":"/ Get a slice of this slice","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":41636,"byte_end":41665,"line_start":35,"line_end":35,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":41791,"byte_end":41810,"line_start":39,"line_end":39,"column_start":15,"column_end":34},"name":"slice_unchecked_mut","qualname":"::raw::RawEncoding::slice_unchecked_mut","value":"pub unsafe fn slice_unchecked_mut(&mut Self, Range<usize>) -> &mut Self","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" Get a mutable slice of this slice\n","sig":null,"attributes":[{"value":"/ Get a mutable slice of this slice","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":41739,"byte_end":41776,"line_start":38,"line_end":38,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":41939,"byte_end":41947,"line_start":42,"line_end":42,"column_start":8,"column_end":16},"name":"is_valid","qualname":"::raw::RawEncoding::is_valid","value":"pub fn is_valid(i8) -> bool","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" Decide whether a byte is a valid series of trits in this encoding\n","sig":null,"attributes":[{"value":"/ Decide whether a byte is a valid series of trits in this encoding","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":41862,"byte_end":41931,"line_start":41,"line_end":41,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":42042,"byte_end":42060,"line_start":45,"line_end":45,"column_start":15,"column_end":33},"name":"from_raw_unchecked","qualname":"::raw::RawEncoding::from_raw_unchecked","value":"pub unsafe fn from_raw_unchecked(&[i8], usize) -> &Self","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" Unsafely reinterpret a slice of bytes as trit slice\n","sig":null,"attributes":[{"value":"/ Unsafely reinterpret a slice of bytes as trit slice","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":41972,"byte_end":42027,"line_start":44,"line_end":44,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":42174,"byte_end":42196,"line_start":48,"line_end":48,"column_start":15,"column_end":37},"name":"from_raw_unchecked_mut","qualname":"::raw::RawEncoding::from_raw_unchecked_mut","value":"pub unsafe fn from_raw_unchecked_mut(&mut [i8], usize) -> &mut Self","parent":{"krate":0,"index":115},"children":[],"decl_id":null,"docs":" Unsafely reinterpret a slice of bytes as trit slice\n","sig":null,"attributes":[{"value":"/ Unsafely reinterpret a slice of bytes as trit slice","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":42104,"byte_end":42159,"line_start":47,"line_end":47,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":129},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":42331,"byte_end":42345,"line_start":52,"line_end":52,"column_start":11,"column_end":25},"name":"RawEncodingBuf","qualname":"::raw::RawEncodingBuf","value":"RawEncodingBuf","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138}],"decl_id":null,"docs":" A trait to be implemented by alternative trit encoding scheme buffers.\n","sig":null,"attributes":[{"value":"/ A trait to be implemented by alternative trit encoding scheme buffers.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":42246,"byte_end":42320,"line_start":51,"line_end":51,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":130},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":42432,"byte_end":42437,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Slice","qualname":"::raw::RawEncodingBuf::Slice","value":"type Slice: RawEncoding + ?Sized;","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":" The trit slice encoding associated with this trit buffer encoding.\n","sig":null,"attributes":[{"value":"/ The trit slice encoding associated with this trit buffer encoding.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":42352,"byte_end":42422,"line_start":53,"line_end":53,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":42504,"byte_end":42507,"line_start":57,"line_end":57,"column_start":8,"column_end":11},"name":"new","qualname":"::raw::RawEncodingBuf::new","value":"pub fn new() -> Self where Self: Sized","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":" Create a new empty buffer.\n","sig":null,"attributes":[{"value":"/ Create a new empty buffer.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":42466,"byte_end":42496,"line_start":56,"line_end":56,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":42614,"byte_end":42627,"line_start":62,"line_end":62,"column_start":8,"column_end":21},"name":"with_capacity","qualname":"::raw::RawEncodingBuf::with_capacity","value":"pub fn with_capacity(usize) -> Self where Self: Sized","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":" Create a new empty buffer with a given capacity.\n","sig":null,"attributes":[{"value":"/ Create a new empty buffer with a given capacity.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":42554,"byte_end":42606,"line_start":61,"line_end":61,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":42743,"byte_end":42753,"line_start":67,"line_end":67,"column_start":8,"column_end":18},"name":"from_trits","qualname":"::raw::RawEncodingBuf::from_trits","value":"pub fn from_trits(&[<Self::Slice as RawEncoding>::Trit]) -> Self where\nSelf: Sized","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":" Create a new buffer containing the given trits.\n","sig":null,"attributes":[{"value":"/ Create a new buffer containing the given trits.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":42684,"byte_end":42735,"line_start":66,"line_end":66,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":43024,"byte_end":43028,"line_start":79,"line_end":79,"column_start":8,"column_end":12},"name":"push","qualname":"::raw::RawEncodingBuf::push","value":"pub fn push(&mut Self, <Self::Slice as RawEncoding>::Trit)","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":" Push a trit to the back of this buffer.\n","sig":null,"attributes":[{"value":"/ Push a trit to the back of this buffer.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":42973,"byte_end":43016,"line_start":78,"line_end":78,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":43140,"byte_end":43143,"line_start":82,"line_end":82,"column_start":8,"column_end":11},"name":"pop","qualname":"::raw::RawEncodingBuf::pop","value":"pub fn pop(&mut Self) -> Option<<Self::Slice as RawEncoding>::Trit>","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":" Pop a trit from the back of this buffer.\n","sig":null,"attributes":[{"value":"/ Pop a trit from the back of this buffer.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":43088,"byte_end":43132,"line_start":81,"line_end":81,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":43260,"byte_end":43268,"line_start":85,"line_end":85,"column_start":8,"column_end":16},"name":"as_slice","qualname":"::raw::RawEncodingBuf::as_slice","value":"pub fn as_slice(&Self) -> &Self::Slice","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":" View the trits in this buffer as a slice.\n","sig":null,"attributes":[{"value":"/ View the trits in this buffer as a slice.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":43207,"byte_end":43252,"line_start":84,"line_end":84,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":43359,"byte_end":43371,"line_start":88,"line_end":88,"column_start":8,"column_end":20},"name":"as_slice_mut","qualname":"::raw::RawEncodingBuf::as_slice_mut","value":"pub fn as_slice_mut(&mut Self) -> &mut Self::Slice","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":" View the trits in this buffer as a mutable slice.\n","sig":null,"attributes":[{"value":"/ View the trits in this buffer as a mutable slice.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":43298,"byte_end":43351,"line_start":87,"line_end":87,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":43546,"byte_end":43559,"line_start":93,"line_end":93,"column_start":8,"column_end":21},"name":"into_encoding","qualname":"::raw::RawEncodingBuf::into_encoding","value":"pub fn into_encoding<T: RawEncodingBuf>(TritBuf<Self>) -> TritBuf<T> where\nSelf: Sized, T: RawEncodingBuf, T::Slice: RawEncoding<Trit =\n<Self::Slice as RawEncoding>::Trit>","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":" Convert this encoding into another encoding.\n TODO: Rename this `reencode`\n","sig":null,"attributes":[{"value":"/ Convert this encoding into another encoding.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":43409,"byte_end":43457,"line_start":90,"line_end":90,"column_start":5,"column_end":53}},{"value":"/ TODO: Rename this `reencode`","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":43462,"byte_end":43494,"line_start":91,"line_end":91,"column_start":5,"column_end":37}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/raw.rs","byte_start":43499,"byte_end":43538,"line_start":92,"line_end":92,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":140},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t1b1.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"t1b1","qualname":"::t1b1","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t1b1.rs","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":174},{"krate":0,"index":180},{"krate":0,"index":184},{"krate":0,"index":1259},{"krate":0,"index":1263},{"krate":0,"index":199},{"krate":0,"index":204}],"decl_id":null,"docs":" The [`T1B1`] and [`T1B1Buf`] encodings.\n","sig":null,"attributes":[{"value":"/ The [`T1B1`] and [`T1B1Buf`] encodings.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":3007,"byte_end":3050,"line_start":63,"line_end":63,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":170},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t1b1.rs","byte_start":44263,"byte_end":44267,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"T1B1","qualname":"::t1b1::T1B1","value":"T1B1 {  }","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173}],"decl_id":null,"docs":" An encoding scheme slice that uses a single byte to represent one trit.\n","sig":null,"attributes":[{"value":"/ An encoding scheme slice that uses a single byte to represent one trit.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t1b1.rs","byte_start":44155,"byte_end":44230,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"repr(transparent)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t1b1.rs","byte_start":44231,"byte_end":44251,"line_start":8,"line_end":8,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1259},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t1b1.rs","byte_start":46657,"byte_end":46664,"line_start":94,"line_end":94,"column_start":12,"column_end":19},"name":"T1B1Buf","qualname":"::t1b1::T1B1Buf","value":"T1B1Buf {  }","parent":null,"children":[{"krate":0,"index":1261},{"krate":0,"index":1262}],"decl_id":null,"docs":" An encoding scheme buffer that uses a single byte to represent one trit.\n","sig":null,"attributes":[{"value":"/ An encoding scheme buffer that uses a single byte to represent one trit.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t1b1.rs","byte_start":46552,"byte_end":46628,"line_start":92,"line_end":92,"column_start":1,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":213},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t2b1.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"t2b1","qualname":"::t2b1","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t2b1.rs","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":1266},{"krate":0,"index":1270},{"krate":0,"index":258}],"decl_id":null,"docs":" The [`T2B1`] and [`T2B1Buf`] encodings.\n","sig":null,"attributes":[{"value":"/ The [`T2B1`] and [`T2B1Buf`] encodings.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":3065,"byte_end":3108,"line_start":65,"line_end":65,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":235},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t2b1.rs","byte_start":49319,"byte_end":49323,"line_start":14,"line_end":14,"column_start":12,"column_end":16},"name":"T2B1","qualname":"::t2b1::T2B1","value":"","parent":null,"children":[],"decl_id":null,"docs":" An encoding scheme slice that uses a single byte to represent two trits.\n","sig":null,"attributes":[{"value":"/ An encoding scheme slice that uses a single byte to represent two trits.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t2b1.rs","byte_start":49210,"byte_end":49286,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"repr(transparent)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t2b1.rs","byte_start":49287,"byte_end":49307,"line_start":13,"line_end":13,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1266},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t2b1.rs","byte_start":52532,"byte_end":52539,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"T2B1Buf","qualname":"::t2b1::T2B1Buf","value":"","parent":null,"children":[],"decl_id":null,"docs":" An encoding scheme buffer that uses a single byte to represent two trits.\n","sig":null,"attributes":[{"value":"/ An encoding scheme buffer that uses a single byte to represent two trits.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t2b1.rs","byte_start":52426,"byte_end":52503,"line_start":117,"line_end":117,"column_start":1,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":267},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t3b1.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"t3b1","qualname":"::t3b1","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t3b1.rs","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":292},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":1272},{"krate":0,"index":1276},{"krate":0,"index":312}],"decl_id":null,"docs":" The [`T3B1`] and [`T3B1Buf`] encodings.\n","sig":null,"attributes":[{"value":"/ The [`T3B1`] and [`T3B1Buf`] encodings.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":3123,"byte_end":3166,"line_start":67,"line_end":67,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":289},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t3b1.rs","byte_start":54295,"byte_end":54299,"line_start":14,"line_end":14,"column_start":12,"column_end":16},"name":"T3B1","qualname":"::t3b1::T3B1","value":"","parent":null,"children":[],"decl_id":null,"docs":" An encoding scheme slice that uses a single byte to represent three trits.\n","sig":null,"attributes":[{"value":"/ An encoding scheme slice that uses a single byte to represent three trits.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t3b1.rs","byte_start":54184,"byte_end":54262,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"repr(transparent)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t3b1.rs","byte_start":54263,"byte_end":54283,"line_start":13,"line_end":13,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1272},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t3b1.rs","byte_start":57615,"byte_end":57622,"line_start":121,"line_end":121,"column_start":12,"column_end":19},"name":"T3B1Buf","qualname":"::t3b1::T3B1Buf","value":"","parent":null,"children":[],"decl_id":null,"docs":" An encoding scheme buffer that uses a single byte to represent three trits.\n","sig":null,"attributes":[{"value":"/ An encoding scheme buffer that uses a single byte to represent three trits.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t3b1.rs","byte_start":57507,"byte_end":57586,"line_start":119,"line_end":119,"column_start":1,"column_end":80}}]},{"kind":"Mod","id":{"krate":0,"index":321},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t4b1.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"t4b1","qualname":"::t4b1","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t4b1.rs","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":346},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":1278},{"krate":0,"index":1282},{"krate":0,"index":366}],"decl_id":null,"docs":" The [`T4B1`] and [`T4B1Buf`] encodings.\n","sig":null,"attributes":[{"value":"/ The [`T4B1`] and [`T4B1Buf`] encodings.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":3181,"byte_end":3224,"line_start":69,"line_end":69,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":343},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t4b1.rs","byte_start":59528,"byte_end":59532,"line_start":14,"line_end":14,"column_start":12,"column_end":16},"name":"T4B1","qualname":"::t4b1::T4B1","value":"","parent":null,"children":[],"decl_id":null,"docs":" An encoding scheme slice that uses a single byte to represent four trits.\n","sig":null,"attributes":[{"value":"/ An encoding scheme slice that uses a single byte to represent four trits.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t4b1.rs","byte_start":59418,"byte_end":59495,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"repr(transparent)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t4b1.rs","byte_start":59496,"byte_end":59516,"line_start":13,"line_end":13,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1278},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t4b1.rs","byte_start":62742,"byte_end":62749,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"T4B1Buf","qualname":"::t4b1::T4B1Buf","value":"","parent":null,"children":[],"decl_id":null,"docs":" An encoding scheme buffer that uses a single byte to represent four trits.\n","sig":null,"attributes":[{"value":"/ An encoding scheme buffer that uses a single byte to represent four trits.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t4b1.rs","byte_start":62635,"byte_end":62713,"line_start":117,"line_end":117,"column_start":1,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":375},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t5b1.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"t5b1","qualname":"::t5b1","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t5b1.rs","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":1284},{"krate":0,"index":1288},{"krate":0,"index":420}],"decl_id":null,"docs":" The [`T5B1`] and [`T5B1Buf`] encodings.\n","sig":null,"attributes":[{"value":"/ The [`T5B1`] and [`T5B1Buf`] encodings.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":3239,"byte_end":3282,"line_start":71,"line_end":71,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":397},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t5b1.rs","byte_start":64519,"byte_end":64523,"line_start":14,"line_end":14,"column_start":12,"column_end":16},"name":"T5B1","qualname":"::t5b1::T5B1","value":"","parent":null,"children":[],"decl_id":null,"docs":" An encoding scheme slice that uses a single byte to represent five trits.\n","sig":null,"attributes":[{"value":"/ An encoding scheme slice that uses a single byte to represent five trits.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t5b1.rs","byte_start":64409,"byte_end":64486,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"repr(transparent)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t5b1.rs","byte_start":64487,"byte_end":64507,"line_start":13,"line_end":13,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1284},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t5b1.rs","byte_start":67781,"byte_end":67788,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"T5B1Buf","qualname":"::t5b1::T5B1Buf","value":"","parent":null,"children":[],"decl_id":null,"docs":" An encoding scheme buffer that uses a single byte to represent five trits.\n","sig":null,"attributes":[{"value":"/ An encoding scheme buffer that uses a single byte to represent five trits.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t5b1.rs","byte_start":67674,"byte_end":67752,"line_start":117,"line_end":117,"column_start":1,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":429},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"trit","qualname":"::trit","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":515},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":587}],"decl_id":null,"docs":" Types and traits used to represent trits, both balanced and unbalanced.\n","sig":null,"attributes":[{"value":"/ Types and traits used to represent trits, both balanced and unbalanced.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":3297,"byte_end":3372,"line_start":73,"line_end":73,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":453},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/balanced.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"balanced","qualname":"::trit::balanced","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/balanced.rs","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":471},{"krate":0,"index":474},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":1290},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1303},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1308},{"krate":0,"index":1311},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1316},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":495},{"krate":0,"index":499},{"krate":0,"index":509},{"krate":0,"index":512}],"decl_id":null,"docs":" Balanced trits.\n","sig":null,"attributes":[{"value":"/ Balanced trits.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":69320,"byte_end":69339,"line_start":8,"line_end":8,"column_start":1,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/balanced.rs","byte_start":70964,"byte_end":70970,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"NegOne","qualname":"::trit::balanced::Btrit::NegOne","value":"Btrit::NegOne","parent":{"krate":0,"index":1290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1294},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/balanced.rs","byte_start":70981,"byte_end":70985,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Zero","qualname":"::trit::balanced::Btrit::Zero","value":"Btrit::Zero","parent":{"krate":0,"index":1290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1297},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/balanced.rs","byte_start":70995,"byte_end":71002,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"name":"PlusOne","qualname":"::trit::balanced::Btrit::PlusOne","value":"Btrit::PlusOne","parent":{"krate":0,"index":1290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1290},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/balanced.rs","byte_start":70952,"byte_end":70957,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Btrit","qualname":"::trit::balanced::Btrit","value":"pub enum Btrit { NegOne = , Zero = , PlusOne = , }","parent":null,"children":[{"krate":0,"index":1291},{"krate":0,"index":1294},{"krate":0,"index":1297}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(i8)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/balanced.rs","byte_start":70908,"byte_end":70919,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/balanced.rs","byte_start":70920,"byte_end":70942,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":515},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/unbalanced.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unbalanced","qualname":"::trit::unbalanced","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/unbalanced.rs","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":536},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":1318},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1331},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1336},{"krate":0,"index":1339},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1344},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":570}],"decl_id":null,"docs":" Unbalanced trits.\n","sig":null,"attributes":[{"value":"/ Unbalanced trits.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":69358,"byte_end":69379,"line_start":10,"line_end":10,"column_start":1,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1319},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/unbalanced.rs","byte_start":73646,"byte_end":73650,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Zero","qualname":"::trit::unbalanced::Utrit::Zero","value":"Utrit::Zero","parent":{"krate":0,"index":1318},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1322},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/unbalanced.rs","byte_start":73660,"byte_end":73663,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"One","qualname":"::trit::unbalanced::Utrit::One","value":"Utrit::One","parent":{"krate":0,"index":1318},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1325},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/unbalanced.rs","byte_start":73673,"byte_end":73676,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"Two","qualname":"::trit::unbalanced::Utrit::Two","value":"Utrit::Two","parent":{"krate":0,"index":1318},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1318},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/unbalanced.rs","byte_start":73634,"byte_end":73639,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Utrit","qualname":"::trit::unbalanced::Utrit","value":"pub enum Utrit { Zero = , One = , Two = , }","parent":null,"children":[{"krate":0,"index":1319},{"krate":0,"index":1322},{"krate":0,"index":1325}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(i8)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/unbalanced.rs","byte_start":73590,"byte_end":73601,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/unbalanced.rs","byte_start":73602,"byte_end":73624,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":580},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":69564,"byte_end":69568,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"name":"Trit","qualname":"::trit::Trit","value":"Trit: Copy + Sized + fmt::Debug + hash::Hash + Into<i8> + Ord + PartialEq +\nShiftTernary + TryFrom<i8> + fmt::Display","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":585}],"decl_id":null,"docs":" A trait implemented by both balanced ([`Btrit`]) and unbalanced ([`Utrit`]) trits.\n","sig":null,"attributes":[{"value":"/ A trait implemented by both balanced ([`Btrit`]) and unbalanced ([`Utrit`]) trits.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":69467,"byte_end":69553,"line_start":16,"line_end":16,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":69792,"byte_end":69809,"line_start":21,"line_end":21,"column_start":8,"column_end":25},"name":"checked_increment","qualname":"::trit::Trit::checked_increment","value":"pub fn checked_increment(Self) -> Option<Self>","parent":{"krate":0,"index":580},"children":[],"decl_id":null,"docs":" Attempt to increment the value of this trit, returning [`None`] if an overflow occurred.\n","sig":null,"attributes":[{"value":"/ Attempt to increment the value of this trit, returning [`None`] if an overflow occurred.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":69692,"byte_end":69784,"line_start":20,"line_end":20,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":69878,"byte_end":69882,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"zero","qualname":"::trit::Trit::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":580},"children":[],"decl_id":null,"docs":" The zero value of this trit.\n","sig":null,"attributes":[{"value":"/ The zero value of this trit.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":69838,"byte_end":69870,"line_start":23,"line_end":23,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":70075,"byte_end":70091,"line_start":29,"line_end":29,"column_start":8,"column_end":24},"name":"as_arbitrary_ref","qualname":"::trit::Trit::as_arbitrary_ref","value":"pub fn as_arbitrary_ref<'a>(&Self) -> &'a Self","parent":{"krate":0,"index":580},"children":[],"decl_id":null,"docs":" Turn this trit reference into one with an arbitrary lifetime.","sig":null,"attributes":[{"value":"/ Turn this trit reference into one with an arbitrary lifetime.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":69899,"byte_end":69964,"line_start":26,"line_end":26,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":69969,"byte_end":69972,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Note that this is largely an implementation detail and is rarely useful for API users.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":69977,"byte_end":70067,"line_start":28,"line_end":28,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":70177,"byte_end":70187,"line_start":32,"line_end":32,"column_start":8,"column_end":18},"name":"add_to_num","qualname":"::trit::Trit::add_to_num","value":"pub fn add_to_num<I: Num + CheckedAdd + CheckedSub>(&Self, I)\n-> Result<I, convert::Error>","parent":{"krate":0,"index":580},"children":[],"decl_id":null,"docs":" Attempt to add this trit to a numeric value.\n","sig":null,"attributes":[{"value":"/ Attempt to add this trit to a numeric value.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":70121,"byte_end":70169,"line_start":31,"line_end":31,"column_start":5,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":587},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":70385,"byte_end":70397,"line_start":37,"line_end":37,"column_start":11,"column_end":23},"name":"ShiftTernary","qualname":"::trit::ShiftTernary","value":"ShiftTernary: Sized","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589}],"decl_id":null,"docs":" A trait implemented by trits that can be shifted between balance domains.\n","sig":null,"attributes":[{"value":"/ A trait implemented by trits that can be shifted between balance domains.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":70268,"byte_end":70345,"line_start":35,"line_end":35,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":588},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":70476,"byte_end":70482,"line_start":39,"line_end":39,"column_start":10,"column_end":16},"name":"Target","qualname":"::trit::ShiftTernary::Target","value":"type Target: ShiftTernary<Target = Self>;","parent":{"krate":0,"index":587},"children":[],"decl_id":null,"docs":" The trit type that results from shifting this trit.\n","sig":null,"attributes":[{"value":"/ The trit type that results from shifting this trit.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":70411,"byte_end":70466,"line_start":38,"line_end":38,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":70579,"byte_end":70584,"line_start":42,"line_end":42,"column_start":8,"column_end":13},"name":"shift","qualname":"::trit::ShiftTernary::shift","value":"pub fn shift(Self) -> Self::Target","parent":{"krate":0,"index":587},"children":[],"decl_id":null,"docs":" Shift this trit into the opposite balance domain.\n","sig":null,"attributes":[{"value":"/ Shift this trit into the opposite balance domain.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":70518,"byte_end":70571,"line_start":41,"line_end":41,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":590},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tryte","qualname":"::tryte","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":595},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":608},{"krate":0,"index":611},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":621},{"krate":0,"index":1346},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1431},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":624},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":637},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":644},{"krate":0,"index":1440},{"krate":0,"index":1442},{"krate":0,"index":647},{"krate":0,"index":657},{"krate":0,"index":660},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":671},{"krate":0,"index":673}],"decl_id":null,"docs":" Types and traits used to represent trytes and buffers of trytes.\n","sig":null,"attributes":[{"value":"/ Types and traits used to represent trytes and buffers of trytes.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":3387,"byte_end":3455,"line_start":75,"line_end":75,"column_start":1,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1347},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76394,"byte_end":76395,"line_start":18,"line_end":18,"column_start":5,"column_end":6},"name":"N","qualname":"::tryte::Tryte::N","value":"Tryte::N","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1350},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76407,"byte_end":76408,"line_start":19,"line_end":19,"column_start":5,"column_end":6},"name":"O","qualname":"::tryte::Tryte::O","value":"Tryte::O","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1353},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76420,"byte_end":76421,"line_start":20,"line_end":20,"column_start":5,"column_end":6},"name":"P","qualname":"::tryte::Tryte::P","value":"Tryte::P","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1356},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76433,"byte_end":76434,"line_start":21,"line_end":21,"column_start":5,"column_end":6},"name":"Q","qualname":"::tryte::Tryte::Q","value":"Tryte::Q","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1359},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76446,"byte_end":76447,"line_start":22,"line_end":22,"column_start":5,"column_end":6},"name":"R","qualname":"::tryte::Tryte::R","value":"Tryte::R","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1362},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76458,"byte_end":76459,"line_start":23,"line_end":23,"column_start":5,"column_end":6},"name":"S","qualname":"::tryte::Tryte::S","value":"Tryte::S","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1365},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76470,"byte_end":76471,"line_start":24,"line_end":24,"column_start":5,"column_end":6},"name":"T","qualname":"::tryte::Tryte::T","value":"Tryte::T","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1368},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76482,"byte_end":76483,"line_start":25,"line_end":25,"column_start":5,"column_end":6},"name":"U","qualname":"::tryte::Tryte::U","value":"Tryte::U","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1371},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76494,"byte_end":76495,"line_start":26,"line_end":26,"column_start":5,"column_end":6},"name":"V","qualname":"::tryte::Tryte::V","value":"Tryte::V","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1374},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76506,"byte_end":76507,"line_start":27,"line_end":27,"column_start":5,"column_end":6},"name":"W","qualname":"::tryte::Tryte::W","value":"Tryte::W","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1377},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76518,"byte_end":76519,"line_start":28,"line_end":28,"column_start":5,"column_end":6},"name":"X","qualname":"::tryte::Tryte::X","value":"Tryte::X","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1380},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76530,"byte_end":76531,"line_start":29,"line_end":29,"column_start":5,"column_end":6},"name":"Y","qualname":"::tryte::Tryte::Y","value":"Tryte::Y","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1383},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76542,"byte_end":76543,"line_start":30,"line_end":30,"column_start":5,"column_end":6},"name":"Z","qualname":"::tryte::Tryte::Z","value":"Tryte::Z","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1386},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76554,"byte_end":76558,"line_start":31,"line_end":31,"column_start":5,"column_end":9},"name":"Nine","qualname":"::tryte::Tryte::Nine","value":"Tryte::Nine","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1389},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76568,"byte_end":76569,"line_start":32,"line_end":32,"column_start":5,"column_end":6},"name":"A","qualname":"::tryte::Tryte::A","value":"Tryte::A","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1392},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76579,"byte_end":76580,"line_start":33,"line_end":33,"column_start":5,"column_end":6},"name":"B","qualname":"::tryte::Tryte::B","value":"Tryte::B","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1395},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76590,"byte_end":76591,"line_start":34,"line_end":34,"column_start":5,"column_end":6},"name":"C","qualname":"::tryte::Tryte::C","value":"Tryte::C","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1398},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76601,"byte_end":76602,"line_start":35,"line_end":35,"column_start":5,"column_end":6},"name":"D","qualname":"::tryte::Tryte::D","value":"Tryte::D","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1401},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76612,"byte_end":76613,"line_start":36,"line_end":36,"column_start":5,"column_end":6},"name":"E","qualname":"::tryte::Tryte::E","value":"Tryte::E","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1404},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76623,"byte_end":76624,"line_start":37,"line_end":37,"column_start":5,"column_end":6},"name":"F","qualname":"::tryte::Tryte::F","value":"Tryte::F","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1407},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76634,"byte_end":76635,"line_start":38,"line_end":38,"column_start":5,"column_end":6},"name":"G","qualname":"::tryte::Tryte::G","value":"Tryte::G","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1410},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76645,"byte_end":76646,"line_start":39,"line_end":39,"column_start":5,"column_end":6},"name":"H","qualname":"::tryte::Tryte::H","value":"Tryte::H","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1413},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76656,"byte_end":76657,"line_start":40,"line_end":40,"column_start":5,"column_end":6},"name":"I","qualname":"::tryte::Tryte::I","value":"Tryte::I","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1416},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76667,"byte_end":76668,"line_start":41,"line_end":41,"column_start":5,"column_end":6},"name":"J","qualname":"::tryte::Tryte::J","value":"Tryte::J","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1419},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76679,"byte_end":76680,"line_start":42,"line_end":42,"column_start":5,"column_end":6},"name":"K","qualname":"::tryte::Tryte::K","value":"Tryte::K","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1422},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76691,"byte_end":76692,"line_start":43,"line_end":43,"column_start":5,"column_end":6},"name":"L","qualname":"::tryte::Tryte::L","value":"Tryte::L","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1425},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76703,"byte_end":76704,"line_start":44,"line_end":44,"column_start":5,"column_end":6},"name":"M","qualname":"::tryte::Tryte::M","value":"Tryte::M","parent":{"krate":0,"index":1346},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1346},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76382,"byte_end":76387,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Tryte","qualname":"::tryte::Tryte","value":"pub enum Tryte {\n    N = ,\n    O = ,\n    P = ,\n    Q = ,\n    R = ,\n    S = ,\n    T = ,\n    U = ,\n    V = ,\n    W = ,\n    X = ,\n    Y = ,\n    Z = ,\n    Nine = ,\n    A = ,\n    B = ,\n    C = ,\n    D = ,\n    E = ,\n    F = ,\n    G = ,\n    H = ,\n    I = ,\n    J = ,\n    K = ,\n    L = ,\n    M = ,\n}","parent":null,"children":[{"krate":0,"index":1347},{"krate":0,"index":1350},{"krate":0,"index":1353},{"krate":0,"index":1356},{"krate":0,"index":1359},{"krate":0,"index":1362},{"krate":0,"index":1365},{"krate":0,"index":1368},{"krate":0,"index":1371},{"krate":0,"index":1374},{"krate":0,"index":1377},{"krate":0,"index":1380},{"krate":0,"index":1383},{"krate":0,"index":1386},{"krate":0,"index":1389},{"krate":0,"index":1392},{"krate":0,"index":1395},{"krate":0,"index":1398},{"krate":0,"index":1401},{"krate":0,"index":1404},{"krate":0,"index":1407},{"krate":0,"index":1410},{"krate":0,"index":1413},{"krate":0,"index":1416},{"krate":0,"index":1419},{"krate":0,"index":1422},{"krate":0,"index":1425}],"decl_id":null,"docs":" A ternary tryte. Equivalent to 3 trits.\n","sig":null,"attributes":[{"value":"/ A ternary tryte. Equivalent to 3 trits.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76250,"byte_end":76293,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"repr(i8)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76338,"byte_end":76349,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76350,"byte_end":76372,"line_start":16,"line_end":16,"column_start":1,"column_end":23}}]},{"kind":"Const","id":{"krate":0,"index":625},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76797,"byte_end":76806,"line_start":49,"line_end":49,"column_start":15,"column_end":24},"name":"MIN_VALUE","qualname":"::tryte::Tryte::MIN_VALUE","value":"Self","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" The minimum value that this [`Tryte`] can hold.\n","sig":null,"attributes":[{"value":"/ The minimum value that this [`Tryte`] can hold.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76731,"byte_end":76782,"line_start":48,"line_end":48,"column_start":5,"column_end":56}}]},{"kind":"Const","id":{"krate":0,"index":626},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76896,"byte_end":76905,"line_start":52,"line_end":52,"column_start":15,"column_end":24},"name":"MAX_VALUE","qualname":"::tryte::Tryte::MAX_VALUE","value":"Self","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":" The maximum value that this [`Tryte`] can hold.\n","sig":null,"attributes":[{"value":"/ The maximum value that this [`Tryte`] can hold.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76830,"byte_end":76881,"line_start":51,"line_end":51,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76996,"byte_end":77006,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"from_trits","qualname":"<Tryte>::from_trits","value":"pub fn from_trits([Btrit; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turn an array of three [`Btrit`]s into a [`Tryte`].\n","sig":null,"attributes":[{"value":"/ Turn an array of three [`Btrit`]s into a [`Tryte`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76929,"byte_end":76984,"line_start":54,"line_end":54,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":77255,"byte_end":77263,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"as_trits","qualname":"<Tryte>::as_trits","value":"pub fn as_trits(&Self) -> &Trits<T3B1>","parent":null,"children":[],"decl_id":null,"docs":" Interpret this tryte as a [`T3B1`] trit slice with exactly 3 elements.\n","sig":null,"attributes":[{"value":"/ Interpret this tryte as a [`T3B1`] trit slice with exactly 3 elements.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":77169,"byte_end":77243,"line_start":60,"line_end":60,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":77476,"byte_end":77488,"line_start":66,"line_end":66,"column_start":12,"column_end":24},"name":"as_trits_mut","qualname":"<Tryte>::as_trits_mut","value":"pub fn as_trits_mut(&mut Self) -> &mut Trits<T3B1>","parent":null,"children":[],"decl_id":null,"docs":" Interpret this tryte as a mutable [`T3B1`] trit slice with exactly 3 elements.\n","sig":null,"attributes":[{"value":"/ Interpret this tryte as a mutable [`T3B1`] trit slice with exactly 3 elements.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":77382,"byte_end":77464,"line_start":65,"line_end":65,"column_start":5,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":1440},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":79092,"byte_end":79100,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"TryteBuf","qualname":"::tryte::TryteBuf","value":"TryteBuf {  }","parent":null,"children":[{"krate":0,"index":1441}],"decl_id":null,"docs":" A buffer of [`Tryte`]s. Analagous to [`Vec`].\n","sig":null,"attributes":[{"value":"/ A buffer of [`Tryte`]s. Analagous to [`Vec`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":79012,"byte_end":79061,"line_start":124,"line_end":124,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":79191,"byte_end":79194,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"name":"new","qualname":"<TryteBuf>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty buffer.\n","sig":null,"attributes":[{"value":"/ Create a new empty buffer.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":79149,"byte_end":79179,"line_start":131,"line_end":131,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":79311,"byte_end":79324,"line_start":137,"line_end":137,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<TryteBuf>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty buffer with room for `cap` trytes.\n","sig":null,"attributes":[{"value":"/ Create a new empty buffer with room for `cap` trytes.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":79242,"byte_end":79299,"line_start":136,"line_end":136,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":79489,"byte_end":79501,"line_start":144,"line_end":144,"column_start":12,"column_end":24},"name":"try_from_str","qualname":"<TryteBuf>::try_from_str","value":"pub fn try_from_str(&str) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to parse a string into a tryte buffer.\n","sig":null,"attributes":[{"value":"/ Attempt to parse a string into a tryte buffer.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":79427,"byte_end":79477,"line_start":143,"line_end":143,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":79650,"byte_end":79658,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<TryteBuf>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the buffer is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the buffer is empty.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":79596,"byte_end":79638,"line_start":148,"line_end":148,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":79770,"byte_end":79773,"line_start":154,"line_end":154,"column_start":12,"column_end":15},"name":"len","qualname":"<TryteBuf>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of trytes in the buffer.\n","sig":null,"attributes":[{"value":"/ Returns the number of trytes in the buffer.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":79711,"byte_end":79758,"line_start":153,"line_end":153,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":79886,"byte_end":79890,"line_start":159,"line_end":159,"column_start":12,"column_end":16},"name":"push","qualname":"<TryteBuf>::push","value":"pub fn push(&mut Self, Tryte)","parent":null,"children":[],"decl_id":null,"docs":" Push a new tryte to the end of the buffer.\n","sig":null,"attributes":[{"value":"/ Push a new tryte to the end of the buffer.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":79828,"byte_end":79874,"line_start":158,"line_end":158,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":80027,"byte_end":80030,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"pop","qualname":"<TryteBuf>::pop","value":"pub fn pop(&mut Self) -> Option<Tryte>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to pop a tryte from the end of the buffer.\n","sig":null,"attributes":[{"value":"/ Attempt to pop a tryte from the end of the buffer.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":79961,"byte_end":80015,"line_start":163,"line_end":163,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":80173,"byte_end":80181,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"as_trits","qualname":"<TryteBuf>::as_trits","value":"pub fn as_trits(&Self) -> &Trits<T3B1>","parent":null,"children":[],"decl_id":null,"docs":" Safely interpret this tryte buffer as a [`T3B1`] trit slice.\n","sig":null,"attributes":[{"value":"/ Safely interpret this tryte buffer as a [`T3B1`] trit slice.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":80097,"byte_end":80161,"line_start":168,"line_end":168,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":80394,"byte_end":80406,"line_start":174,"line_end":174,"column_start":12,"column_end":24},"name":"as_trits_mut","qualname":"<TryteBuf>::as_trits_mut","value":"pub fn as_trits_mut(&mut Self) -> &mut Trits<T3B1>","parent":null,"children":[],"decl_id":null,"docs":" Safely interpret this tryte buffer as a mutable [`T3B1`] trit slice.\n","sig":null,"attributes":[{"value":"/ Safely interpret this tryte buffer as a mutable [`T3B1`] trit slice.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":80310,"byte_end":80382,"line_start":173,"line_end":173,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1445},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":4268,"byte_end":4279,"line_start":108,"line_end":108,"column_start":5,"column_end":16},"name":"InvalidRepr","qualname":"::Error::InvalidRepr","value":"Error::InvalidRepr","parent":{"krate":0,"index":1444},"children":[],"decl_id":null,"docs":" A value that does not represent a valid ternary representation was encountered.\n","sig":null,"attributes":[{"value":"/ A value that does not represent a valid ternary representation was encountered.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":4180,"byte_end":4263,"line_start":107,"line_end":107,"column_start":5,"column_end":88}}]},{"kind":"Enum","id":{"krate":0,"index":1444},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":4168,"byte_end":4173,"line_start":106,"line_end":106,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"pub enum Error { InvalidRepr, }","parent":null,"children":[{"krate":0,"index":1445}],"decl_id":null,"docs":" An error that may be produced as a result of fallible conversions.\n","sig":null,"attributes":[{"value":"/ An error that may be produced as a result of fallible conversions.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":4071,"byte_end":4141,"line_start":104,"line_end":104,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":1449},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":4861,"byte_end":4866,"line_start":128,"line_end":128,"column_start":12,"column_end":17},"name":"Trits","qualname":"::Trits","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type that represents a buffer of trits of unknown length.","sig":null,"attributes":[{"value":"/ A type that represents a buffer of trits of unknown length.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":4516,"byte_end":4579,"line_start":121,"line_end":121,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":4580,"byte_end":4583,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ This type is roughly analogous to `[T]` or [`str`]. It is an unsized type and hence is rarely","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":4584,"byte_end":4681,"line_start":123,"line_end":123,"column_start":1,"column_end":98}},{"value":"/ used directly. Instead, it's more common to see it used from behind a reference (in a similar","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":4682,"byte_end":4779,"line_start":124,"line_end":124,"column_start":1,"column_end":98}},{"value":"/ manner to `&[T]` and `&str`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":4780,"byte_end":4812,"line_start":125,"line_end":125,"column_start":1,"column_end":33}},{"value":"repr(transparent)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":4829,"byte_end":4849,"line_start":127,"line_end":127,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":5012,"byte_end":5017,"line_start":135,"line_end":135,"column_start":12,"column_end":17},"name":"empty","qualname":"<Trits<T>>::empty","value":"pub fn empty() -> &'static Self","parent":null,"children":[],"decl_id":null,"docs":" Create an empty trit slice.\n","sig":null,"attributes":[{"value":"/ Create an empty trit slice.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":4969,"byte_end":5000,"line_start":134,"line_end":134,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":6071,"byte_end":6089,"line_start":155,"line_end":155,"column_start":19,"column_end":37},"name":"from_raw_unchecked","qualname":"<Trits<T>>::from_raw_unchecked","value":"pub unsafe fn from_raw_unchecked(&[i8], usize) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Interpret an (`std::i8`) slice as a trit slice with the given encoding without first\n checking that the slice is valid in the given encoding. The `num_trits` parameter is used\n to specify the exact length, in trits, that the slice should be taken to have. Providing a\n slice that is not valid for this encoding is undefined behaviour.","sig":null,"attributes":[{"value":"/ Interpret an (`std::i8`) slice as a trit slice with the given encoding without first","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":5111,"byte_end":5199,"line_start":139,"line_end":139,"column_start":5,"column_end":93}},{"value":"/ checking that the slice is valid in the given encoding. The `num_trits` parameter is used","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":5204,"byte_end":5297,"line_start":140,"line_end":140,"column_start":5,"column_end":98}},{"value":"/ to specify the exact length, in trits, that the slice should be taken to have. Providing a","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":5302,"byte_end":5396,"line_start":141,"line_end":141,"column_start":5,"column_end":99}},{"value":"/ slice that is not valid for this encoding is undefined behaviour.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":5401,"byte_end":5470,"line_start":142,"line_end":142,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":5475,"byte_end":5478,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":5483,"byte_end":5495,"line_start":144,"line_end":144,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":5500,"byte_end":5503,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `num_trits` is more than can be represented with the slice in","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":5508,"byte_end":5601,"line_start":146,"line_end":146,"column_start":5,"column_end":98}},{"value":"/ the given encoding.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":5606,"byte_end":5629,"line_start":147,"line_end":147,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":5634,"byte_end":5637,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":5642,"byte_end":5654,"line_start":149,"line_end":149,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":5659,"byte_end":5662,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ This function must only be called with an [`i8`] slice that is valid for this trit encoding","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":5667,"byte_end":5762,"line_start":151,"line_end":151,"column_start":5,"column_end":100}},{"value":"/ given the specified `num_trits` length. Right now, this validity is not well-defined and so","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":5767,"byte_end":5862,"line_start":152,"line_end":152,"column_start":5,"column_end":100}},{"value":"/ it is suggested that only [`i8`] slices created from existing trit slices or trit buffers","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":5867,"byte_end":5960,"line_start":153,"line_end":153,"column_start":5,"column_end":98}},{"value":"/ be used. Calling this function with an invalid [`i8`] slice is undefined behaviour.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":5965,"byte_end":6052,"line_start":154,"line_end":154,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":7332,"byte_end":7354,"line_start":179,"line_end":179,"column_start":19,"column_end":41},"name":"from_raw_unchecked_mut","qualname":"<Trits<T>>::from_raw_unchecked_mut","value":"pub unsafe fn from_raw_unchecked_mut(&mut [i8], usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Interpret a mutable (`std::i8`) slice as a mutable trit slice with the given encoding\n without first checking that the slice is valid in the given encoding. The `num_trits`\n parameter is used to specify the exact length, in trits, that the slice should be taken to\n have. Providing a slice that is not valid for this encoding is undefined behaviour.","sig":null,"attributes":[{"value":"/ Interpret a mutable (`std::i8`) slice as a mutable trit slice with the given encoding","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":6357,"byte_end":6446,"line_start":163,"line_end":163,"column_start":5,"column_end":94}},{"value":"/ without first checking that the slice is valid in the given encoding. The `num_trits`","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":6451,"byte_end":6540,"line_start":164,"line_end":164,"column_start":5,"column_end":94}},{"value":"/ parameter is used to specify the exact length, in trits, that the slice should be taken to","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":6545,"byte_end":6639,"line_start":165,"line_end":165,"column_start":5,"column_end":99}},{"value":"/ have. Providing a slice that is not valid for this encoding is undefined behaviour.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":6644,"byte_end":6731,"line_start":166,"line_end":166,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":6736,"byte_end":6739,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":6744,"byte_end":6756,"line_start":168,"line_end":168,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":6761,"byte_end":6764,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `num_trits` is more than can be represented with the slice in","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":6769,"byte_end":6862,"line_start":170,"line_end":170,"column_start":5,"column_end":98}},{"value":"/ the given encoding.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":6867,"byte_end":6890,"line_start":171,"line_end":171,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":6895,"byte_end":6898,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":6903,"byte_end":6915,"line_start":173,"line_end":173,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":6920,"byte_end":6923,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ This function must only be called with an [`i8`] slice that is valid for this trit encoding","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":6928,"byte_end":7023,"line_start":175,"line_end":175,"column_start":5,"column_end":100}},{"value":"/ given the specified `num_trits` length. Right now, this validity is not well-defined and so","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":7028,"byte_end":7123,"line_start":176,"line_end":176,"column_start":5,"column_end":100}},{"value":"/ it is suggested that only [`i8`] slices created from existing trit slices or trit buffers","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":7128,"byte_end":7221,"line_start":177,"line_end":177,"column_start":5,"column_end":98}},{"value":"/ be used. Calling this function with an invalid [`i8`] slice is undefined behaviour.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":7226,"byte_end":7313,"line_start":178,"line_end":178,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":8075,"byte_end":8087,"line_start":195,"line_end":195,"column_start":12,"column_end":24},"name":"try_from_raw","qualname":"<Trits<T>>::try_from_raw","value":"pub fn try_from_raw(&[i8], usize) -> Result<&Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Interpret an (`std::i8`) slice as a trit slice with the given encoding, checking to ensure\n that the slice is valid in the given encoding. The `num_trits` parameter is used to specify\n the exact length, in trits, that the slice should be taken to have.","sig":null,"attributes":[{"value":"/ Interpret an (`std::i8`) slice as a trit slice with the given encoding, checking to ensure","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":7634,"byte_end":7728,"line_start":187,"line_end":187,"column_start":5,"column_end":99}},{"value":"/ that the slice is valid in the given encoding. The `num_trits` parameter is used to specify","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":7733,"byte_end":7828,"line_start":188,"line_end":188,"column_start":5,"column_end":100}},{"value":"/ the exact length, in trits, that the slice should be taken to have.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":7833,"byte_end":7904,"line_start":189,"line_end":189,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":7909,"byte_end":7912,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":7917,"byte_end":7929,"line_start":191,"line_end":191,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":7934,"byte_end":7937,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `num_trits` is more than can be represented with the slice in","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":7942,"byte_end":8035,"line_start":193,"line_end":193,"column_start":5,"column_end":98}},{"value":"/ the given encoding.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":8040,"byte_end":8063,"line_start":194,"line_end":194,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":8792,"byte_end":8808,"line_start":211,"line_end":211,"column_start":12,"column_end":28},"name":"try_from_raw_mut","qualname":"<Trits<T>>::try_from_raw_mut","value":"pub fn try_from_raw_mut(&mut [i8], usize) -> Result<&mut Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Interpret a mutable (`std::i8`) slice as a mutable trit slice with the given encoding,\n checking to ensure that the slice is valid in the given encoding. The `num_trits` parameter\n is used to specify the exact length, in trits, that the slice should be taken to have.","sig":null,"attributes":[{"value":"/ Interpret a mutable (`std::i8`) slice as a mutable trit slice with the given encoding,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":8336,"byte_end":8426,"line_start":203,"line_end":203,"column_start":5,"column_end":95}},{"value":"/ checking to ensure that the slice is valid in the given encoding. The `num_trits` parameter","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":8431,"byte_end":8526,"line_start":204,"line_end":204,"column_start":5,"column_end":100}},{"value":"/ is used to specify the exact length, in trits, that the slice should be taken to have.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":8531,"byte_end":8621,"line_start":205,"line_end":205,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":8626,"byte_end":8629,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":8634,"byte_end":8646,"line_start":207,"line_end":207,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":8651,"byte_end":8654,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `num_trits` is more than can be represented with the slice in","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":8659,"byte_end":8752,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ the given encoding.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":8757,"byte_end":8780,"line_start":210,"line_end":210,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":9127,"byte_end":9135,"line_start":220,"line_end":220,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Trits<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the trit slice is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the trit slice is empty.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":9069,"byte_end":9115,"line_start":219,"line_end":219,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":9251,"byte_end":9254,"line_start":225,"line_end":225,"column_start":12,"column_end":15},"name":"len","qualname":"<Trits<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of trits in this trit slice.\n","sig":null,"attributes":[{"value":"/ Returns the number of trits in this trit slice.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":9188,"byte_end":9239,"line_start":224,"line_end":224,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":9466,"byte_end":9477,"line_start":234,"line_end":234,"column_start":12,"column_end":23},"name":"as_i8_slice","qualname":"<Trits<T>>::as_i8_slice","value":"pub fn as_i8_slice(&Self) -> &[i8]","parent":null,"children":[],"decl_id":null,"docs":" Interpret this slice as an (`std::i8`) slice.","sig":null,"attributes":[{"value":"/ Interpret this slice as an (`std::i8`) slice.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":9305,"byte_end":9354,"line_start":229,"line_end":229,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":9359,"byte_end":9362,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":9367,"byte_end":9379,"line_start":231,"line_end":231,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":9384,"byte_end":9387,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This function will panic if the slice is not byte-aligned.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":9392,"byte_end":9454,"line_start":233,"line_end":233,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":9904,"byte_end":9919,"line_start":248,"line_end":248,"column_start":19,"column_end":34},"name":"as_i8_slice_mut","qualname":"<Trits<T>>::as_i8_slice_mut","value":"pub unsafe fn as_i8_slice_mut(&mut Self) -> &mut [i8]","parent":null,"children":[],"decl_id":null,"docs":" Interpret this slice as a mutable (`std::i8`) slice.","sig":null,"attributes":[{"value":"/ Interpret this slice as a mutable (`std::i8`) slice.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":9536,"byte_end":9592,"line_start":238,"line_end":238,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":9597,"byte_end":9600,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":9605,"byte_end":9617,"line_start":240,"line_end":240,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":9622,"byte_end":9625,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This function will panic if the slice is not byte-aligned.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":9630,"byte_end":9692,"line_start":242,"line_end":242,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":9697,"byte_end":9700,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":9705,"byte_end":9717,"line_start":244,"line_end":244,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":9722,"byte_end":9725,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ This function is marked `unsafe` because modification of the trit slice in a manner that is","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":9730,"byte_end":9825,"line_start":246,"line_end":246,"column_start":5,"column_end":100}},{"value":"/ not valid for this encoding is undefined behaviour.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":9830,"byte_end":9885,"line_start":247,"line_end":247,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":10680,"byte_end":10693,"line_start":264,"line_end":264,"column_start":19,"column_end":32},"name":"get_unchecked","qualname":"<Trits<T>>::get_unchecked","value":"pub unsafe fn get_unchecked(&Self, usize) -> T::Trit","parent":null,"children":[],"decl_id":null,"docs":" Fetch the trit at the given index of this trit slice without first checking whether the\n index is in bounds. Providing an index that is not less than the length of this slice is\n undefined behaviour.","sig":null,"attributes":[{"value":"/ Fetch the trit at the given index of this trit slice without first checking whether the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":9990,"byte_end":10081,"line_start":252,"line_end":252,"column_start":5,"column_end":96}},{"value":"/ index is in bounds. Providing an index that is not less than the length of this slice is","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":10086,"byte_end":10178,"line_start":253,"line_end":253,"column_start":5,"column_end":97}},{"value":"/ undefined behaviour.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":10183,"byte_end":10207,"line_start":254,"line_end":254,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":10212,"byte_end":10215,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ This is perhaps the 'least bad' `unsafe` function in this crate: not because any form of","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":10220,"byte_end":10312,"line_start":256,"line_end":256,"column_start":5,"column_end":97}},{"value":"/ undefined behaviour is better or worse than another (after all, the point of undefined","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":10317,"byte_end":10407,"line_start":257,"line_end":257,"column_start":5,"column_end":95}},{"value":"/ behaviour is that it is undefined) but because it's the easiest to use correctly.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":10412,"byte_end":10497,"line_start":258,"line_end":258,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":10502,"byte_end":10505,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":10510,"byte_end":10522,"line_start":260,"line_end":260,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":10527,"byte_end":10530,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ An index with a value less then the result of [`Trits::len`] must be used. Any other value","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":10535,"byte_end":10629,"line_start":262,"line_end":262,"column_start":5,"column_end":99}},{"value":"/ is undefined behaviour.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":10634,"byte_end":10661,"line_start":263,"line_end":263,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":11648,"byte_end":11661,"line_start":286,"line_end":286,"column_start":19,"column_end":32},"name":"set_unchecked","qualname":"<Trits<T>>::set_unchecked","value":"pub unsafe fn set_unchecked(&mut Self, usize, T::Trit)","parent":null,"children":[],"decl_id":null,"docs":" Set the trit at the given index of this trit slice without first checking whether the\n index is in bounds. Providing an index that is not less than the length of this slice is\n undefined behaviour.","sig":null,"attributes":[{"value":"/ Set the trit at the given index of this trit slice without first checking whether the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":10960,"byte_end":11049,"line_start":274,"line_end":274,"column_start":5,"column_end":94}},{"value":"/ index is in bounds. Providing an index that is not less than the length of this slice is","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":11054,"byte_end":11146,"line_start":275,"line_end":275,"column_start":5,"column_end":97}},{"value":"/ undefined behaviour.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":11151,"byte_end":11175,"line_start":276,"line_end":276,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":11180,"byte_end":11183,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ This is perhaps the 'least bad' `unsafe` function in this crate: not because any form of","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":11188,"byte_end":11280,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/ undefined behaviour is better or worse than another (after all, the point of undefined","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":11285,"byte_end":11375,"line_start":279,"line_end":279,"column_start":5,"column_end":95}},{"value":"/ behaviour is that it is undefined) but because it's the easiest to use correctly.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":11380,"byte_end":11465,"line_start":280,"line_end":280,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":11470,"byte_end":11473,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":11478,"byte_end":11490,"line_start":282,"line_end":282,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":11495,"byte_end":11498,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ An index with a value less then the result of [`Trits::len`] must be used. Any other value","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":11503,"byte_end":11597,"line_start":284,"line_end":284,"column_start":5,"column_end":99}},{"value":"/ is undefined behaviour.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":11602,"byte_end":11629,"line_start":285,"line_end":285,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":12035,"byte_end":12038,"line_start":297,"line_end":297,"column_start":12,"column_end":15},"name":"get","qualname":"<Trits<T>>::get","value":"pub fn get(&Self, usize) -> Option<T::Trit>","parent":null,"children":[],"decl_id":null,"docs":" Fetch the trit at the given index of this trit slice, if the index is valid.\n","sig":null,"attributes":[{"value":"/ Fetch the trit at the given index of this trit slice, if the index is valid.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":11943,"byte_end":12023,"line_start":296,"line_end":296,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":12497,"byte_end":12500,"line_start":311,"line_end":311,"column_start":12,"column_end":15},"name":"set","qualname":"<Trits<T>>::set","value":"pub fn set(&mut Self, usize, T::Trit)","parent":null,"children":[],"decl_id":null,"docs":" Set the trit at the given index of this mutable trit slice, if the index is valid.","sig":null,"attributes":[{"value":"/ Set the trit at the given index of this mutable trit slice, if the index is valid.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":12225,"byte_end":12311,"line_start":305,"line_end":305,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":12316,"byte_end":12319,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":12324,"byte_end":12336,"line_start":307,"line_end":307,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":12341,"byte_end":12344,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This function will panic if the index is not less than the length of this slice.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":12349,"byte_end":12433,"line_start":309,"line_end":309,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":12991,"byte_end":12995,"line_start":325,"line_end":325,"column_start":12,"column_end":16},"name":"iter","qualname":"<Trits<T>>::iter","value":"pub fn iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the trits in this slice.","sig":null,"attributes":[{"value":"/ Returns an iterator over the trits in this slice.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":12785,"byte_end":12838,"line_start":321,"line_end":321,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":12843,"byte_end":12846,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Using this function is significantly faster than calling [`Trits::get`] in a loop and","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":12851,"byte_end":12940,"line_start":323,"line_end":323,"column_start":5,"column_end":94}},{"value":"/ should be used where possible.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":12945,"byte_end":12979,"line_start":324,"line_end":324,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":13449,"byte_end":13457,"line_start":335,"line_end":335,"column_start":12,"column_end":20},"name":"subslice","qualname":"<Trits<T>>::subslice","value":"pub fn subslice(&Self, Range<usize>) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a subslice of this slice with the given range of trits.","sig":null,"attributes":[{"value":"/ Returns a subslice of this slice with the given range of trits.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":13180,"byte_end":13247,"line_start":329,"line_end":329,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":13252,"byte_end":13255,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":13260,"byte_end":13272,"line_start":331,"line_end":331,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":13277,"byte_end":13280,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called with a range that contains indices outside this slice,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":13285,"byte_end":13378,"line_start":333,"line_end":333,"column_start":5,"column_end":98}},{"value":"/ or the start of the range is greater than its end.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":13383,"byte_end":13437,"line_start":334,"line_end":334,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":14048,"byte_end":14060,"line_start":349,"line_end":349,"column_start":12,"column_end":24},"name":"subslice_mut","qualname":"<Trits<T>>::subslice_mut","value":"pub fn subslice_mut(&mut Self, Range<usize>) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable subslice of this mutable slice with the given range of trits.","sig":null,"attributes":[{"value":"/ Returns a mutable subslice of this mutable slice with the given range of trits.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":13763,"byte_end":13846,"line_start":343,"line_end":343,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":13851,"byte_end":13854,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":13859,"byte_end":13871,"line_start":345,"line_end":345,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":13876,"byte_end":13879,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ This function will panic if called with a range that contains indices outside this slice,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":13884,"byte_end":13977,"line_start":347,"line_end":347,"column_start":5,"column_end":98}},{"value":"/ or the start of the range is greater than its end.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":13982,"byte_end":14036,"line_start":348,"line_end":348,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":975},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":14611,"byte_end":14620,"line_start":363,"line_end":363,"column_start":12,"column_end":21},"name":"copy_from","qualname":"<Trits<T>>::copy_from","value":"pub fn copy_from<U: RawEncoding<Trit = T::Trit> +\n                 ?Sized>(&mut Self, &Trits<U>)","parent":null,"children":[],"decl_id":null,"docs":" Copy the trits from a trit slice into this mutable trit slice (the encoding need not be\n equivalent).","sig":null,"attributes":[{"value":"/ Copy the trits from a trit slice into this mutable trit slice (the encoding need not be","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":14378,"byte_end":14469,"line_start":357,"line_end":357,"column_start":5,"column_end":96}},{"value":"/ equivalent).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":14474,"byte_end":14490,"line_start":358,"line_end":358,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":14495,"byte_end":14498,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":14503,"byte_end":14515,"line_start":360,"line_end":360,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":14520,"byte_end":14523,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ This function will panic if the length of the slices are different.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":14528,"byte_end":14599,"line_start":362,"line_end":362,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":15054,"byte_end":15058,"line_start":376,"line_end":376,"column_start":12,"column_end":16},"name":"fill","qualname":"<Trits<T>>::fill","value":"pub fn fill(&mut Self, T::Trit)","parent":null,"children":[],"decl_id":null,"docs":" Fill this mutable trit slice with copied of the given trit.\n","sig":null,"attributes":[{"value":"/ Fill this mutable trit slice with copied of the given trit.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":14979,"byte_end":15042,"line_start":375,"line_end":375,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":15406,"byte_end":15412,"line_start":386,"line_end":386,"column_start":12,"column_end":18},"name":"to_buf","qualname":"<Trits<T>>::to_buf","value":"pub fn to_buf<U: RawEncodingBuf<Slice = T>>(&Self) -> TritBuf<U>","parent":null,"children":[],"decl_id":null,"docs":" Copy the contents of this trit slice into a new [`TritBuf`] with the same encoding. This\n function is analogous to `to_vec` method implemented on ordinary slices.\n","sig":null,"attributes":[{"value":"/ Copy the contents of this trit slice into a new [`TritBuf`] with the same encoding. This","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":15221,"byte_end":15313,"line_start":384,"line_end":384,"column_start":5,"column_end":97}},{"value":"/ function is analogous to `to_vec` method implemented on ordinary slices.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":15318,"byte_end":15394,"line_start":385,"line_end":385,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":15942,"byte_end":15948,"line_start":398,"line_end":398,"column_start":12,"column_end":18},"name":"chunks","qualname":"<Trits<T>>::chunks","value":"pub fn chunks(&Self, usize) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over distinct, non-overlapping subslices of this trit slice, each with\n the given chunk length. If the length of the trit slice is not a multiple of the given\n chunk length, the last slice provided by the iterator will be smaller to compensate.","sig":null,"attributes":[{"value":"/ Return an iterator over distinct, non-overlapping subslices of this trit slice, each with","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":15549,"byte_end":15642,"line_start":391,"line_end":391,"column_start":5,"column_end":98}},{"value":"/ the given chunk length. If the length of the trit slice is not a multiple of the given","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":15647,"byte_end":15737,"line_start":392,"line_end":392,"column_start":5,"column_end":95}},{"value":"/ chunk length, the last slice provided by the iterator will be smaller to compensate.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":15742,"byte_end":15830,"line_start":393,"line_end":393,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":15835,"byte_end":15838,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":15843,"byte_end":15855,"line_start":395,"line_end":395,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":15860,"byte_end":15863,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ This function will panic if the given chunk length is `0`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":15868,"byte_end":15930,"line_start":397,"line_end":397,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":16379,"byte_end":16385,"line_start":409,"line_end":409,"column_start":12,"column_end":18},"name":"encode","qualname":"<Trits<T>>::encode","value":"pub fn encode<U>(&Self) -> TritBuf<U> where U: RawEncodingBuf,\nU::Slice: RawEncoding<Trit = T::Trit>","parent":null,"children":[],"decl_id":null,"docs":" Encode the contents of this trit slice into a `TritBuf` with a different encoding.\n","sig":null,"attributes":[{"value":"/ Encode the contents of this trit slice into a `TritBuf` with a different encoding.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":16281,"byte_end":16367,"line_start":408,"line_end":408,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":16867,"byte_end":16878,"line_start":426,"line_end":426,"column_start":12,"column_end":23},"name":"iter_trytes","qualname":"<Trits<T>>::iter_trytes","value":"pub fn iter_trytes(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the trytes represented within this slice.","sig":null,"attributes":[{"value":"/ Returns an iterator over the trytes represented within this slice.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":16611,"byte_end":16681,"line_start":422,"line_end":422,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":16686,"byte_end":16689,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ For encodings that are representation-compatible with trytes, such as [`T3B1`], use","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":16694,"byte_end":16781,"line_start":424,"line_end":424,"column_start":5,"column_end":92}},{"value":"/ [`Trits::as_trytes`] instead since it is faster and more capable.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":16786,"byte_end":16855,"line_start":425,"line_end":425,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":17352,"byte_end":17358,"line_start":435,"line_end":435,"column_start":12,"column_end":18},"name":"negate","qualname":"<Trits<T>>::negate","value":"pub fn negate(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Negate each trit in this buffer.","sig":null,"attributes":[{"value":"/ Negate each trit in this buffer.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":17201,"byte_end":17237,"line_start":432,"line_end":432,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":17242,"byte_end":17245,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ This has the effect of making the trit buffer negative when expressed in numeric form.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":17250,"byte_end":17340,"line_start":434,"line_end":434,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":18035,"byte_end":18047,"line_start":453,"line_end":453,"column_start":12,"column_end":24},"name":"as_raw_slice","qualname":"<Trits<T1B1<T>>>::as_raw_slice","value":"pub fn as_raw_slice(&Self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" View this trit slice as an ordinary slice of trits.\n","sig":null,"attributes":[{"value":"/ View this trit slice as an ordinary slice of trits.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":17968,"byte_end":18023,"line_start":452,"line_end":452,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":18189,"byte_end":18205,"line_start":458,"line_end":458,"column_start":12,"column_end":28},"name":"as_raw_slice_mut","qualname":"<Trits<T1B1<T>>>::as_raw_slice_mut","value":"pub fn as_raw_slice_mut(&mut Self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" View this mutable trit slice as an ordinary slice of mutable trits.\n","sig":null,"attributes":[{"value":"/ View this mutable trit slice as an ordinary slice of mutable trits.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":18106,"byte_end":18177,"line_start":457,"line_end":457,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":18816,"byte_end":18826,"line_start":471,"line_end":471,"column_start":12,"column_end":22},"name":"chunks_mut","qualname":"<Trits<T1B1<T>>>::chunks_mut","value":"pub fn chunks_mut(&mut Self, usize) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over distinct, non-overlapping mutable subslices of this mutable trit\n slice, each with the given chunk length. If the length of the trit slice is not a multiple\n of the given chunk length, the last slice provided by the iterator will be smaller to compensate.","sig":null,"attributes":[{"value":"/ Return an iterator over distinct, non-overlapping mutable subslices of this mutable trit","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":18276,"byte_end":18368,"line_start":462,"line_end":462,"column_start":5,"column_end":97}},{"value":"/ slice, each with the given chunk length. If the length of the trit slice is not a multiple","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":18373,"byte_end":18467,"line_start":463,"line_end":463,"column_start":5,"column_end":99}},{"value":"/ of the given chunk length, the last slice provided by the iterator will be smaller to compensate.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":18472,"byte_end":18573,"line_start":464,"line_end":464,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":18578,"byte_end":18581,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":18586,"byte_end":18598,"line_start":466,"line_end":466,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":18603,"byte_end":18606,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ This function will panic if the given chunk length is `0`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":18611,"byte_end":18673,"line_start":468,"line_end":468,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":20065,"byte_end":20073,"line_start":499,"line_end":499,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Trits<T1B1<T>>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> slice::IterMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable iterator over the trits in this slice.","sig":null,"attributes":[{"value":"/ Returns a mutable iterator over the trits in this slice.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":19852,"byte_end":19912,"line_start":495,"line_end":495,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":19917,"byte_end":19920,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Using this function is significantly faster than calling [`Trits::set`] in a loop and","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":19925,"byte_end":20014,"line_start":497,"line_end":497,"column_start":5,"column_end":94}},{"value":"/ should be used where possible.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":20019,"byte_end":20053,"line_start":498,"line_end":498,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":21399,"byte_end":21408,"line_start":538,"line_end":538,"column_start":12,"column_end":21},"name":"as_trytes","qualname":"<Trits<T3B1>>::as_trytes","value":"pub fn as_trytes(&Self) -> &[Tryte]","parent":null,"children":[],"decl_id":null,"docs":" Interpret this trit slice as a [`Tryte`] slice.","sig":null,"attributes":[{"value":"/ Interpret this trit slice as a [`Tryte`] slice.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":21172,"byte_end":21223,"line_start":532,"line_end":532,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":21228,"byte_end":21231,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":21236,"byte_end":21248,"line_start":534,"line_end":534,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":21253,"byte_end":21256,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ This function will panic if the length of the slice is not a multiple of `3`, or if the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":21261,"byte_end":21352,"line_start":536,"line_end":536,"column_start":5,"column_end":96}},{"value":"/ slice is not byte-aligned.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":21357,"byte_end":21387,"line_start":537,"line_end":537,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":21833,"byte_end":21846,"line_start":549,"line_end":549,"column_start":12,"column_end":25},"name":"as_trytes_mut","qualname":"<Trits<T3B1>>::as_trytes_mut","value":"pub fn as_trytes_mut(&mut Self) -> &mut [Tryte]","parent":null,"children":[],"decl_id":null,"docs":" Interpret this mutable trit slice as a mutable [`Tryte`] slice.","sig":null,"attributes":[{"value":"/ Interpret this mutable trit slice as a mutable [`Tryte`] slice.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":21590,"byte_end":21657,"line_start":543,"line_end":543,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":21662,"byte_end":21665,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":21670,"byte_end":21682,"line_start":545,"line_end":545,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":21687,"byte_end":21690,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ This function will panic if the length of the slice is not a multiple of `3`, or if the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":21695,"byte_end":21786,"line_start":547,"line_end":547,"column_start":5,"column_end":96}},{"value":"/ slice is not byte-aligned.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":21791,"byte_end":21821,"line_start":548,"line_end":548,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1457},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":26746,"byte_end":26753,"line_start":722,"line_end":722,"column_start":12,"column_end":19},"name":"TritBuf","qualname":"::TritBuf","value":"","parent":null,"children":[],"decl_id":null,"docs":" A buffer containing trits.","sig":null,"attributes":[{"value":"/ A buffer containing trits.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":26463,"byte_end":26493,"line_start":716,"line_end":716,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":26494,"byte_end":26497,"line_start":717,"line_end":717,"column_start":1,"column_end":4}},{"value":"/ This type is roughly analogous to [`Vec`] or [`String`]. It supports pushing and popping trits","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":26498,"byte_end":26596,"line_start":718,"line_end":718,"column_start":1,"column_end":99}},{"value":"/ and dereferences to [`Trits`]. It may be borrowed as a trit slice, either mutably or immutably.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":26597,"byte_end":26696,"line_start":719,"line_end":719,"column_start":1,"column_end":100}},{"value":"repr(transparent)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":26714,"byte_end":26734,"line_start":721,"line_end":721,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":26883,"byte_end":26886,"line_start":726,"line_end":726,"column_start":12,"column_end":15},"name":"new","qualname":"<TritBuf<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty [`TritBuf`].\n","sig":null,"attributes":[{"value":"/ Create a new empty [`TritBuf`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":26836,"byte_end":26871,"line_start":725,"line_end":725,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":27149,"byte_end":27162,"line_start":733,"line_end":733,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<TritBuf<T>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty [`TritBuf`], backed by the given capacity, `cap`. The resulting\n [`TritBuf`] will contain at least enough space to contain `cap` trits without needing to\n reallocate.\n","sig":null,"attributes":[{"value":"/ Create a new empty [`TritBuf`], backed by the given capacity, `cap`. The resulting","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":26934,"byte_end":27020,"line_start":730,"line_end":730,"column_start":5,"column_end":91}},{"value":"/ [`TritBuf`] will contain at least enough space to contain `cap` trits without needing to","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":27025,"byte_end":27117,"line_start":731,"line_end":731,"column_start":5,"column_end":97}},{"value":"/ reallocate.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":27122,"byte_end":27137,"line_start":732,"line_end":732,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":27334,"byte_end":27340,"line_start":738,"line_end":738,"column_start":12,"column_end":18},"name":"filled","qualname":"<TritBuf<T>>::filled","value":"pub fn filled(usize, <T::Slice as RawEncoding>::Trit) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`TritBuf`] of the given length, filled with copies of the provided trit.\n","sig":null,"attributes":[{"value":"/ Create a new [`TritBuf`] of the given length, filled with copies of the provided trit.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":27232,"byte_end":27322,"line_start":737,"line_end":737,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":27624,"byte_end":27629,"line_start":747,"line_end":747,"column_start":12,"column_end":17},"name":"zeros","qualname":"<TritBuf<T>>::zeros","value":"pub fn zeros(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`TritBuf`] of the given length, filled with zero trit.\n","sig":null,"attributes":[{"value":"/ Create a new [`TritBuf`] of the given length, filled with zero trit.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":27540,"byte_end":27612,"line_start":746,"line_end":746,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":27822,"byte_end":27832,"line_start":752,"line_end":752,"column_start":12,"column_end":22},"name":"from_trits","qualname":"<TritBuf<T>>::from_trits","value":"pub fn from_trits(&[<T::Slice as RawEncoding>::Trit]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`TritBuf`] containing the trits from the given slice of trits.\n","sig":null,"attributes":[{"value":"/ Create a new [`TritBuf`] containing the trits from the given slice of trits.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":27730,"byte_end":27810,"line_start":751,"line_end":751,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":27992,"byte_end":27996,"line_start":757,"line_end":757,"column_start":12,"column_end":16},"name":"push","qualname":"<TritBuf<T>>::push","value":"pub fn push(&mut Self, <T::Slice as RawEncoding>::Trit)","parent":null,"children":[],"decl_id":null,"docs":" Push a trit to the back of this [`TritBuf`].\n","sig":null,"attributes":[{"value":"/ Push a trit to the back of this [`TritBuf`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":27932,"byte_end":27980,"line_start":756,"line_end":756,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":28176,"byte_end":28179,"line_start":762,"line_end":762,"column_start":12,"column_end":15},"name":"pop","qualname":"<TritBuf<T>>::pop","value":"pub fn pop(&mut Self) -> Option<<T::Slice as RawEncoding>::Trit>","parent":null,"children":[],"decl_id":null,"docs":" Pop a trit from the back of this [`TritBuf`], returning it if successful.\n","sig":null,"attributes":[{"value":"/ Pop a trit from the back of this [`TritBuf`], returning it if successful.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":28087,"byte_end":28164,"line_start":761,"line_end":761,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":28335,"byte_end":28341,"line_start":767,"line_end":767,"column_start":12,"column_end":18},"name":"append","qualname":"<TritBuf<T>>::append","value":"pub fn append<U: RawEncoding<Trit = <T::Slice as RawEncoding>::Trit> +\n              ?Sized>(&mut Self, &Trits<U>)","parent":null,"children":[],"decl_id":null,"docs":" Append a trit slice to the end of this [`TritBuf`].\n","sig":null,"attributes":[{"value":"/ Append a trit slice to the end of this [`TritBuf`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":28268,"byte_end":28323,"line_start":766,"line_end":766,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":28812,"byte_end":28820,"line_start":776,"line_end":776,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<TritBuf<T>>::as_slice","value":"pub fn as_slice(&Self) -> &Trits<T::Slice>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a trit slice containing the data within this buffer.","sig":null,"attributes":[{"value":"/ Extracts a trit slice containing the data within this buffer.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":28498,"byte_end":28563,"line_start":771,"line_end":771,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":28568,"byte_end":28571,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ Note that [`TritBuf`] dereferences to `Trits` anyway, so it's usually sufficient to take","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":28576,"byte_end":28668,"line_start":773,"line_end":773,"column_start":5,"column_end":97}},{"value":"/ a reference to [`TritBuf`] or to just call `&Trits` methods on it rather than explicitly","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":28673,"byte_end":28765,"line_start":774,"line_end":774,"column_start":5,"column_end":97}},{"value":"/ calling this method first.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":28770,"byte_end":28800,"line_start":775,"line_end":775,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":29268,"byte_end":29280,"line_start":785,"line_end":785,"column_start":12,"column_end":24},"name":"as_slice_mut","qualname":"<TritBuf<T>>::as_slice_mut","value":"pub fn as_slice_mut(&mut Self) -> &mut Trits<T::Slice>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a mutable trit slice containing the data within this buffer.","sig":null,"attributes":[{"value":"/ Extracts a mutable trit slice containing the data within this buffer.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":28947,"byte_end":29020,"line_start":780,"line_end":780,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":29025,"byte_end":29028,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ Note that [`TritBuf`] dereferences to `Trits` anyway, so it's usually sufficient to take","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":29033,"byte_end":29125,"line_start":782,"line_end":782,"column_start":5,"column_end":97}},{"value":"/ a reference to [`TritBuf`] or to just call `&mut Trits` methods on it rather","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":29130,"byte_end":29210,"line_start":783,"line_end":783,"column_start":5,"column_end":85}},{"value":"/ explicitly calling this method first.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":29215,"byte_end":29256,"line_start":784,"line_end":784,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":29632,"byte_end":29641,"line_start":794,"line_end":794,"column_start":12,"column_end":21},"name":"pad_zeros","qualname":"<TritBuf<T3B1Buf>>::pad_zeros","value":"pub fn pad_zeros(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Pad the trit buffer with [`Btrit::Zero`] until the buffer's length is a multiple of 3.","sig":null,"attributes":[{"value":"/ Pad the trit buffer with [`Btrit::Zero`] until the buffer's length is a multiple of 3.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":29445,"byte_end":29535,"line_start":791,"line_end":791,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":29540,"byte_end":29543,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This method is often used in conjunction with [`Trites::as_trytes`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":29548,"byte_end":29620,"line_start":793,"line_end":793,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":29935,"byte_end":29947,"line_start":803,"line_end":803,"column_start":12,"column_end":24},"name":"padded_zeros","qualname":"<TritBuf<T3B1Buf>>::padded_zeros","value":"pub fn padded_zeros(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Pad the trit buffer with [`Btrit::Zero`] until the buffer's length is a multiple of 3.","sig":null,"attributes":[{"value":"/ Pad the trit buffer with [`Btrit::Zero`] until the buffer's length is a multiple of 3.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":29748,"byte_end":29838,"line_start":800,"line_end":800,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":29843,"byte_end":29846,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ This method is often used in conjunction with [`Trites::as_trytes`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":29851,"byte_end":29923,"line_start":802,"line_end":802,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":30385,"byte_end":30393,"line_start":826,"line_end":826,"column_start":12,"column_end":20},"name":"from_i8s","qualname":"<TritBuf<T>>::from_i8s","value":"pub fn from_i8s(&[i8]) -> Result<Self, <Btrit as TryFrom<i8>>::Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`TritBuf`] containing the trits given by the slice of i8s.\n","sig":null,"attributes":[{"value":"/ Create a new [`TritBuf`] containing the trits given by the slice of i8s.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":30297,"byte_end":30373,"line_start":825,"line_end":825,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":30702,"byte_end":30710,"line_start":836,"line_end":836,"column_start":12,"column_end":20},"name":"from_u8s","qualname":"<TritBuf<T>>::from_u8s","value":"pub fn from_u8s(&[u8]) -> Result<Self, <Btrit as TryFrom<u8>>::Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`TritBuf`] containing the trits given by the slice of u8s.\n","sig":null,"attributes":[{"value":"/ Create a new [`TritBuf`] containing the trits given by the slice of u8s.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":30614,"byte_end":30690,"line_start":835,"line_end":835,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":31220,"byte_end":31232,"line_start":854,"line_end":854,"column_start":12,"column_end":24},"name":"into_shifted","qualname":"<TritBuf<T1B1Buf<T>>>::into_shifted","value":"pub fn into_shifted(Self) -> TritBuf<T1B1Buf<<T as ShiftTernary>::Target>>","parent":null,"children":[],"decl_id":null,"docs":" Transform this [`TritBuf`] into a shifted representation. If the buffer contains\n balanced trits ([`Btrit`]), the returned buffer will contain unbalanced trits ([`Utrit`]).\n","sig":null,"attributes":[{"value":"/ Transform this [`TritBuf`] into a shifted representation. If the buffer contains","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":31025,"byte_end":31109,"line_start":852,"line_end":852,"column_start":5,"column_end":89}},{"value":"/ balanced trits ([`Btrit`]), the returned buffer will contain unbalanced trits ([`Utrit`]).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":31114,"byte_end":31208,"line_start":853,"line_end":853,"column_start":5,"column_end":99}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t1b1.rs","byte_start":44351,"byte_end":44355,"line_start":14,"line_end":14,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t1b1.rs","byte_start":44914,"byte_end":44918,"line_start":32,"line_end":32,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t1b1.rs","byte_start":45051,"byte_end":45055,"line_start":38,"line_end":38,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t1b1.rs","byte_start":46744,"byte_end":46751,"line_start":99,"line_end":99,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t1b1.rs","byte_start":48060,"byte_end":48067,"line_start":136,"line_end":136,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t2b1.rs","byte_start":49337,"byte_end":49341,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t2b1.rs","byte_start":50445,"byte_end":50449,"line_start":53,"line_end":53,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t2b1.rs","byte_start":52582,"byte_end":52589,"line_start":121,"line_end":121,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t3b1.rs","byte_start":54313,"byte_end":54317,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t3b1.rs","byte_start":55526,"byte_end":55530,"line_start":55,"line_end":55,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t3b1.rs","byte_start":57665,"byte_end":57672,"line_start":123,"line_end":123,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t4b1.rs","byte_start":59546,"byte_end":59550,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t4b1.rs","byte_start":60654,"byte_end":60658,"line_start":53,"line_end":53,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t4b1.rs","byte_start":62792,"byte_end":62799,"line_start":121,"line_end":121,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t5b1.rs","byte_start":64537,"byte_end":64541,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t5b1.rs","byte_start":65693,"byte_end":65697,"line_start":53,"line_end":53,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t5b1.rs","byte_start":67831,"byte_end":67838,"line_start":121,"line_end":121,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":427},{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/balanced.rs","byte_start":71033,"byte_end":71038,"line_start":18,"line_end":18,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/balanced.rs","byte_start":71259,"byte_end":71264,"line_start":30,"line_end":30,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/balanced.rs","byte_start":71528,"byte_end":71533,"line_start":43,"line_end":43,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/balanced.rs","byte_start":71752,"byte_end":71757,"line_start":56,"line_end":56,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/balanced.rs","byte_start":72737,"byte_end":72742,"line_start":90,"line_end":90,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/balanced.rs","byte_start":73047,"byte_end":73052,"line_start":104,"line_end":104,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/unbalanced.rs","byte_start":73722,"byte_end":73727,"line_start":20,"line_end":20,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/unbalanced.rs","byte_start":73948,"byte_end":73953,"line_start":32,"line_end":32,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/unbalanced.rs","byte_start":74196,"byte_end":74201,"line_start":44,"line_end":44,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/unbalanced.rs","byte_start":75091,"byte_end":75096,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/unbalanced.rs","byte_start":75476,"byte_end":75481,"line_start":97,"line_end":97,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/unbalanced.rs","byte_start":75757,"byte_end":75762,"line_start":111,"line_end":111,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76719,"byte_end":76724,"line_start":47,"line_end":47,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":629},{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":77984,"byte_end":77989,"line_start":82,"line_end":82,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":78094,"byte_end":78099,"line_start":88,"line_end":88,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":78237,"byte_end":78242,"line_start":94,"line_end":94,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":78379,"byte_end":78384,"line_start":100,"line_end":100,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":78783,"byte_end":78788,"line_start":113,"line_end":113,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":79134,"byte_end":79142,"line_start":130,"line_end":130,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":80558,"byte_end":80566,"line_start":179,"line_end":179,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":80682,"byte_end":80690,"line_start":186,"line_end":186,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":80806,"byte_end":80814,"line_start":192,"line_end":192,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":81106,"byte_end":81114,"line_start":203,"line_end":203,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":81226,"byte_end":81234,"line_start":209,"line_end":209,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":81373,"byte_end":81381,"line_start":217,"line_end":217,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":81512,"byte_end":81520,"line_start":223,"line_end":223,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/serde.rs","byte_start":82072,"byte_end":82077,"line_start":14,"line_end":14,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/serde.rs","byte_start":82239,"byte_end":82244,"line_start":20,"line_end":20,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/serde.rs","byte_start":82798,"byte_end":82805,"line_start":40,"line_end":40,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/serde.rs","byte_start":83198,"byte_end":83210,"line_start":57,"line_end":57,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":761},{"krate":0,"index":767},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/serde.rs","byte_start":84424,"byte_end":84429,"line_start":90,"line_end":90,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/serde.rs","byte_start":84626,"byte_end":84638,"line_start":98,"line_end":98,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":792},{"krate":0,"index":798},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/serde.rs","byte_start":85812,"byte_end":85817,"line_start":130,"line_end":130,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/serde.rs","byte_start":86054,"byte_end":86068,"line_start":138,"line_end":138,"column_start":47,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/serde.rs","byte_start":86613,"byte_end":86620,"line_start":159,"line_end":159,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":4306,"byte_end":4311,"line_start":111,"line_end":111,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":4506,"byte_end":4511,"line_start":119,"line_end":119,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":4919,"byte_end":4924,"line_start":130,"line_end":130,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":980},{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":16547,"byte_end":16552,"line_start":418,"line_end":418,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":17947,"byte_end":17952,"line_start":451,"line_end":451,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":998},{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":21154,"byte_end":21159,"line_start":531,"line_end":531,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":22073,"byte_end":22078,"line_start":555,"line_end":555,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":22321,"byte_end":22326,"line_start":565,"line_end":565,"column_start":16,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":22400,"byte_end":22405,"line_start":567,"line_end":567,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":23352,"byte_end":23357,"line_start":604,"line_end":604,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1037},{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":23587,"byte_end":23592,"line_start":613,"line_end":613,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":23776,"byte_end":23781,"line_start":619,"line_end":619,"column_start":58,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":23967,"byte_end":23972,"line_start":627,"line_end":627,"column_start":59,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1048},{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":24182,"byte_end":24187,"line_start":633,"line_end":633,"column_start":62,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":24387,"byte_end":24392,"line_start":641,"line_end":641,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1055},{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":24555,"byte_end":24560,"line_start":647,"line_end":647,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":24731,"byte_end":24736,"line_start":655,"line_end":655,"column_start":64,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":24965,"byte_end":24970,"line_start":661,"line_end":661,"column_start":67,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":25190,"byte_end":25195,"line_start":669,"line_end":669,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1069},{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":25390,"byte_end":25395,"line_start":675,"line_end":675,"column_start":60,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":25598,"byte_end":25603,"line_start":683,"line_end":683,"column_start":66,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":25820,"byte_end":25825,"line_start":689,"line_end":689,"column_start":69,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":26009,"byte_end":26014,"line_start":695,"line_end":695,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":26173,"byte_end":26178,"line_start":703,"line_end":703,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":26819,"byte_end":26826,"line_start":724,"line_end":724,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1100},{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":29422,"byte_end":29429,"line_start":790,"line_end":790,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":30048,"byte_end":30055,"line_start":809,"line_end":809,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1107},{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":30233,"byte_end":30240,"line_start":821,"line_end":821,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":30550,"byte_end":30557,"line_start":831,"line_end":831,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":30879,"byte_end":30886,"line_start":841,"line_end":841,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":30959,"byte_end":30966,"line_start":847,"line_end":847,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":31407,"byte_end":31414,"line_start":859,"line_end":859,"column_start":70,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":31651,"byte_end":31658,"line_start":869,"line_end":869,"column_start":32,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":31728,"byte_end":31735,"line_start":871,"line_end":871,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1131},{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":31886,"byte_end":31893,"line_start":879,"line_end":879,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":32061,"byte_end":32068,"line_start":885,"line_end":885,"column_start":75,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":32379,"byte_end":32386,"line_start":896,"line_end":896,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":32579,"byte_end":32586,"line_start":906,"line_end":906,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":32955,"byte_end":32962,"line_start":919,"line_end":919,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":33129,"byte_end":33136,"line_start":925,"line_end":925,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":33273,"byte_end":33280,"line_start":931,"line_end":931,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":33416,"byte_end":33423,"line_start":937,"line_end":937,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":2843,"byte_end":2847,"line_start":58,"line_end":58,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":2909,"byte_end":2916,"line_start":60,"line_end":60,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":38}},{"kind":"Mod","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":3002,"byte_end":3005,"line_start":62,"line_end":62,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":104}},{"kind":"Mod","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":3059,"byte_end":3063,"line_start":64,"line_end":64,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":140}},{"kind":"Mod","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":3117,"byte_end":3121,"line_start":66,"line_end":66,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":213}},{"kind":"Mod","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":3175,"byte_end":3179,"line_start":68,"line_end":68,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":267}},{"kind":"Mod","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":3233,"byte_end":3237,"line_start":70,"line_end":70,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":321}},{"kind":"Mod","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":3291,"byte_end":3295,"line_start":72,"line_end":72,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":375}},{"kind":"Mod","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":3381,"byte_end":3385,"line_start":74,"line_end":74,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":429}},{"kind":"Mod","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":69348,"byte_end":69356,"line_start":9,"line_end":9,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":453}},{"kind":"Mod","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":69388,"byte_end":69398,"line_start":11,"line_end":11,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":515}},{"kind":"Mod","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":3464,"byte_end":3469,"line_start":76,"line_end":76,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":590}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t1b1.rs","byte_start":44351,"byte_end":44355,"line_start":14,"line_end":14,"column_start":15,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t1b1.rs","byte_start":44914,"byte_end":44918,"line_start":32,"line_end":32,"column_start":30,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":170},"to":{"krate":2,"index":9011}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t1b1.rs","byte_start":45051,"byte_end":45055,"line_start":38,"line_end":38,"column_start":25,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":170},"to":{"krate":0,"index":115}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t1b1.rs","byte_start":46744,"byte_end":46751,"line_start":99,"line_end":99,"column_start":9,"column_end":16},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t1b1.rs","byte_start":48060,"byte_end":48067,"line_start":136,"line_end":136,"column_start":28,"column_end":35},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1259},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t2b1.rs","byte_start":49337,"byte_end":49341,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t2b1.rs","byte_start":50445,"byte_end":50449,"line_start":53,"line_end":53,"column_start":22,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":235},"to":{"krate":0,"index":115}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t2b1.rs","byte_start":52582,"byte_end":52589,"line_start":121,"line_end":121,"column_start":25,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1266},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t3b1.rs","byte_start":54313,"byte_end":54317,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t3b1.rs","byte_start":55526,"byte_end":55530,"line_start":55,"line_end":55,"column_start":22,"column_end":26},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":289},"to":{"krate":0,"index":115}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t3b1.rs","byte_start":57665,"byte_end":57672,"line_start":123,"line_end":123,"column_start":25,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1272},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t4b1.rs","byte_start":59546,"byte_end":59550,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t4b1.rs","byte_start":60654,"byte_end":60658,"line_start":53,"line_end":53,"column_start":22,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":343},"to":{"krate":0,"index":115}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t4b1.rs","byte_start":62792,"byte_end":62799,"line_start":121,"line_end":121,"column_start":25,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1278},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t5b1.rs","byte_start":64537,"byte_end":64541,"line_start":16,"line_end":16,"column_start":6,"column_end":10},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t5b1.rs","byte_start":65693,"byte_end":65697,"line_start":53,"line_end":53,"column_start":22,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":397},"to":{"krate":0,"index":115}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/t5b1.rs","byte_start":67831,"byte_end":67838,"line_start":121,"line_end":121,"column_start":25,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1284},"to":{"krate":0,"index":129}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/balanced.rs","byte_start":71033,"byte_end":71038,"line_start":18,"line_end":18,"column_start":23,"column_end":28},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1290},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/balanced.rs","byte_start":71259,"byte_end":71264,"line_start":30,"line_end":30,"column_start":23,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1290},"to":{"krate":0,"index":587}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/balanced.rs","byte_start":71528,"byte_end":71533,"line_start":43,"line_end":43,"column_start":14,"column_end":19},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1290},"to":{"krate":2,"index":2926}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/balanced.rs","byte_start":71752,"byte_end":71757,"line_start":56,"line_end":56,"column_start":15,"column_end":20},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1290},"to":{"krate":0,"index":580}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/balanced.rs","byte_start":72737,"byte_end":72742,"line_start":90,"line_end":90,"column_start":22,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1290},"to":{"krate":2,"index":2745}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/balanced.rs","byte_start":73047,"byte_end":73052,"line_start":104,"line_end":104,"column_start":22,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1290},"to":{"krate":2,"index":2745}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/unbalanced.rs","byte_start":73722,"byte_end":73727,"line_start":20,"line_end":20,"column_start":23,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1318},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/unbalanced.rs","byte_start":73948,"byte_end":73953,"line_start":32,"line_end":32,"column_start":23,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1318},"to":{"krate":0,"index":587}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/unbalanced.rs","byte_start":74196,"byte_end":74201,"line_start":44,"line_end":44,"column_start":15,"column_end":20},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1318},"to":{"krate":0,"index":580}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/unbalanced.rs","byte_start":75091,"byte_end":75096,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/unbalanced.rs","byte_start":75476,"byte_end":75481,"line_start":97,"line_end":97,"column_start":22,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1318},"to":{"krate":2,"index":2745}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/unbalanced.rs","byte_start":75757,"byte_end":75762,"line_start":111,"line_end":111,"column_start":22,"column_end":27},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1318},"to":{"krate":2,"index":2745}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":69574,"byte_end":69578,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":2842},"to":{"krate":0,"index":580}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":69581,"byte_end":69586,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":580}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":69594,"byte_end":69599,"line_start":18,"line_end":18,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":8805},"to":{"krate":0,"index":580}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":69608,"byte_end":69612,"line_start":18,"line_end":18,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":9011},"to":{"krate":0,"index":580}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":69615,"byte_end":69619,"line_start":18,"line_end":18,"column_start":46,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":2735},"to":{"krate":0,"index":580}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":69626,"byte_end":69629,"line_start":18,"line_end":18,"column_start":57,"column_end":60},"kind":"SuperTrait","from":{"krate":2,"index":2519},"to":{"krate":0,"index":580}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":69632,"byte_end":69641,"line_start":18,"line_end":18,"column_start":63,"column_end":72},"kind":"SuperTrait","from":{"krate":2,"index":2487},"to":{"krate":0,"index":580}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":69644,"byte_end":69656,"line_start":18,"line_end":18,"column_start":75,"column_end":87},"kind":"SuperTrait","from":{"krate":0,"index":587},"to":{"krate":0,"index":580}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":69659,"byte_end":69666,"line_start":18,"line_end":18,"column_start":90,"column_end":97},"kind":"SuperTrait","from":{"krate":2,"index":2745},"to":{"krate":0,"index":580}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":69678,"byte_end":69685,"line_start":18,"line_end":18,"column_start":109,"column_end":116},"kind":"SuperTrait","from":{"krate":2,"index":8812},"to":{"krate":0,"index":580}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/trit/mod.rs","byte_start":70399,"byte_end":70404,"line_start":37,"line_end":37,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":587}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":76719,"byte_end":76724,"line_start":47,"line_end":47,"column_start":6,"column_end":11},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":77984,"byte_end":77989,"line_start":82,"line_end":82,"column_start":27,"column_end":32},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":78094,"byte_end":78099,"line_start":88,"line_end":88,"column_start":21,"column_end":26},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":78237,"byte_end":78242,"line_start":94,"line_end":94,"column_start":23,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":78379,"byte_end":78384,"line_start":100,"line_end":100,"column_start":24,"column_end":29},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":2745}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":78783,"byte_end":78788,"line_start":113,"line_end":113,"column_start":22,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1346},"to":{"krate":2,"index":2745}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":79134,"byte_end":79142,"line_start":130,"line_end":130,"column_start":6,"column_end":14},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":80558,"byte_end":80566,"line_start":179,"line_end":179,"column_start":16,"column_end":24},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1440},"to":{"krate":2,"index":3054}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":80682,"byte_end":80690,"line_start":186,"line_end":186,"column_start":19,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1440},"to":{"krate":2,"index":3067}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":80806,"byte_end":80814,"line_start":192,"line_end":192,"column_start":30,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1440},"to":{"krate":2,"index":7066}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":81106,"byte_end":81114,"line_start":203,"line_end":203,"column_start":32,"column_end":40},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1440},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":81226,"byte_end":81234,"line_start":209,"line_end":209,"column_start":18,"column_end":26},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1440},"to":{"krate":2,"index":11288}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":81373,"byte_end":81381,"line_start":217,"line_end":217,"column_start":21,"column_end":29},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1440},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/tryte.rs","byte_start":81512,"byte_end":81520,"line_start":223,"line_end":223,"column_start":23,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1440},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/serde.rs","byte_start":82072,"byte_end":82077,"line_start":14,"line_end":14,"column_start":20,"column_end":25},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1290},"to":{"krate":18,"index":2075}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/serde.rs","byte_start":82239,"byte_end":82244,"line_start":20,"line_end":20,"column_start":20,"column_end":25},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1318},"to":{"krate":18,"index":2075}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/serde.rs","byte_start":82798,"byte_end":82805,"line_start":40,"line_end":40,"column_start":39,"column_end":46},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1457},"to":{"krate":18,"index":2075}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/serde.rs","byte_start":83198,"byte_end":83210,"line_start":57,"line_end":57,"column_start":28,"column_end":40},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":749},"to":{"krate":18,"index":1620}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/serde.rs","byte_start":84424,"byte_end":84429,"line_start":90,"line_end":90,"column_start":32,"column_end":37},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1290},"to":{"krate":18,"index":1536}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/serde.rs","byte_start":84626,"byte_end":84638,"line_start":98,"line_end":98,"column_start":28,"column_end":40},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":780},"to":{"krate":18,"index":1620}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/serde.rs","byte_start":85812,"byte_end":85817,"line_start":130,"line_end":130,"column_start":32,"column_end":37},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1318},"to":{"krate":18,"index":1536}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/serde.rs","byte_start":86054,"byte_end":86068,"line_start":138,"line_end":138,"column_start":47,"column_end":61},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":810},"to":{"krate":18,"index":1620}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/serde.rs","byte_start":86613,"byte_end":86620,"line_start":159,"line_end":159,"column_start":51,"column_end":58},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1457},"to":{"krate":18,"index":1536}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":4306,"byte_end":4311,"line_start":111,"line_end":111,"column_start":23,"column_end":28},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1444},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":4506,"byte_end":4511,"line_start":119,"line_end":119,"column_start":23,"column_end":28},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1444},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":4919,"byte_end":4924,"line_start":130,"line_end":130,"column_start":9,"column_end":14},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":16547,"byte_end":16552,"line_start":418,"line_end":418,"column_start":9,"column_end":14},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":17947,"byte_end":17952,"line_start":451,"line_end":451,"column_start":15,"column_end":20},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":21154,"byte_end":21159,"line_start":531,"line_end":531,"column_start":6,"column_end":11},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":22073,"byte_end":22078,"line_start":555,"line_end":555,"column_start":36,"column_end":41},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":2487}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":22321,"byte_end":22326,"line_start":565,"line_end":565,"column_start":16,"column_end":21},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":2492}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":22400,"byte_end":22405,"line_start":567,"line_end":567,"column_start":37,"column_end":42},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":2530}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":23352,"byte_end":23357,"line_start":604,"line_end":604,"column_start":48,"column_end":53},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":3139}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":23587,"byte_end":23592,"line_start":613,"line_end":613,"column_start":55,"column_end":60},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":3139}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":23776,"byte_end":23781,"line_start":619,"line_end":619,"column_start":58,"column_end":63},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":3143}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":23967,"byte_end":23972,"line_start":627,"line_end":627,"column_start":59,"column_end":64},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":3139}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":24182,"byte_end":24187,"line_start":633,"line_end":633,"column_start":62,"column_end":67},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":3143}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":24387,"byte_end":24392,"line_start":641,"line_end":641,"column_start":52,"column_end":57},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":3139}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":24555,"byte_end":24560,"line_start":647,"line_end":647,"column_start":55,"column_end":60},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":3143}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":24731,"byte_end":24736,"line_start":655,"line_end":655,"column_start":64,"column_end":69},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":3139}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":24965,"byte_end":24970,"line_start":661,"line_end":661,"column_start":67,"column_end":72},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":3143}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":25190,"byte_end":25195,"line_start":669,"line_end":669,"column_start":57,"column_end":62},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":3139}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":25390,"byte_end":25395,"line_start":675,"line_end":675,"column_start":60,"column_end":65},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":3143}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":25598,"byte_end":25603,"line_start":683,"line_end":683,"column_start":66,"column_end":71},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":3139}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":25820,"byte_end":25825,"line_start":689,"line_end":689,"column_start":69,"column_end":74},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":3143}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":26009,"byte_end":26014,"line_start":695,"line_end":695,"column_start":43,"column_end":48},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1449},"to":{"krate":5,"index":534}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":26173,"byte_end":26178,"line_start":703,"line_end":703,"column_start":48,"column_end":53},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1449},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":26819,"byte_end":26826,"line_start":724,"line_end":724,"column_start":25,"column_end":32},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":29422,"byte_end":29429,"line_start":790,"line_end":790,"column_start":6,"column_end":13},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":30048,"byte_end":30055,"line_start":809,"line_end":809,"column_start":33,"column_end":40},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":2926}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":30233,"byte_end":30240,"line_start":821,"line_end":821,"column_start":25,"column_end":32},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":30550,"byte_end":30557,"line_start":831,"line_end":831,"column_start":25,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":30879,"byte_end":30886,"line_start":841,"line_end":841,"column_start":37,"column_end":44},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":2810}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":30959,"byte_end":30966,"line_start":847,"line_end":847,"column_start":9,"column_end":16},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":31407,"byte_end":31414,"line_start":859,"line_end":859,"column_start":70,"column_end":77},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":2487}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":31651,"byte_end":31658,"line_start":869,"line_end":869,"column_start":32,"column_end":39},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":2492}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":31728,"byte_end":31735,"line_start":871,"line_end":871,"column_start":35,"column_end":42},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":3054}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":31886,"byte_end":31893,"line_start":879,"line_end":879,"column_start":38,"column_end":45},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":3067}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":32061,"byte_end":32068,"line_start":885,"line_end":885,"column_start":75,"column_end":82},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":7066}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":32379,"byte_end":32386,"line_start":896,"line_end":896,"column_start":24,"column_end":31},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":9011}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":32579,"byte_end":32586,"line_start":906,"line_end":906,"column_start":40,"column_end":47},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":32955,"byte_end":32962,"line_start":919,"line_end":919,"column_start":42,"column_end":49},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":8812}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":33129,"byte_end":33136,"line_start":925,"line_end":925,"column_start":53,"column_end":60},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":2435}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":33273,"byte_end":33280,"line_start":931,"line_end":931,"column_start":56,"column_end":63},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":2438}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/bee-ternary-0.4.2-alpha/src/lib.rs","byte_start":33416,"byte_end":33423,"line_start":937,"line_end":937,"column_start":39,"column_end":46},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":2530}}]}