{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0","program":"/Users/julia/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","ff","--edition=2018","/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=9ff574acb68de976","-C","extra-filename=-9ff574acb68de976","--out-dir","/Users/julia/ruhackathon/target/rls/debug/deps","-L","dependency=/Users/julia/ruhackathon/target/rls/debug/deps","--extern","bitvec=/Users/julia/ruhackathon/target/rls/debug/deps/libbitvec-8bcb81f8cd20cb06.rmeta","--extern","rand_core=/Users/julia/ruhackathon/target/rls/debug/deps/librand_core-4070f354d6c9c31d.rmeta","--extern","subtle=/Users/julia/ruhackathon/target/rls/debug/deps/libsubtle-bf8d05422f1039df.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/julia/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/julia/ruhackathon/target/rls/debug/deps/libff-9ff574acb68de976.rmeta"},"prelude":{"crate_id":{"name":"ff","disambiguator":[2105630046445953287,12085405015627007269]},"crate_root":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src","external_crates":[{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[17161976177339802527,9637120080719870273]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[12784072134307519025,4657485898025748013]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[8860544973196061204,9932137894390183628]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":4,"id":{"name":"bitvec","disambiguator":[14851539261954789943,15604764097012981211]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":5,"id":{"name":"funty","disambiguator":[11994280634423852699,10648987090702083785]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":6,"id":{"name":"radium","disambiguator":[16917809150809643676,3878275019157653836]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":7,"id":{"name":"tap","disambiguator":[12632791922117082934,5412440633162020162]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":8,"id":{"name":"wyz","disambiguator":[14138619879403673573,1821794984299287805]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":9,"id":{"name":"rand_core","disambiguator":[11887644693504216196,7259550397967195635]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":10,"id":{"name":"std","disambiguator":[14497711731351875891,7574154950596153320]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":11,"id":{"name":"alloc","disambiguator":[15484098214765895148,4360652648143560453]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":12,"id":{"name":"libc","disambiguator":[13802683045354889200,17279120461159080731]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":13,"id":{"name":"unwind","disambiguator":[13733846401634403672,16568137600355934567]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":14,"id":{"name":"cfg_if","disambiguator":[5926527291982439463,7261863668131194074]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":15,"id":{"name":"hashbrown","disambiguator":[2147386378482378397,1448349958257004752]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":16,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8504510625746843556,11549570195915831773]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":17,"id":{"name":"rustc_demangle","disambiguator":[1145582961014725186,16562354883654090131]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":18,"id":{"name":"std_detect","disambiguator":[6582153069738696943,14519107576634371424]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":19,"id":{"name":"addr2line","disambiguator":[15498041504304623936,9266600846380482125]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":20,"id":{"name":"gimli","disambiguator":[12608136573466536856,1503974727608604885]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":21,"id":{"name":"object","disambiguator":[16755883997827362908,2889333423780235391]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":22,"id":{"name":"panic_unwind","disambiguator":[3009561993154964965,13259943199418826037]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":23,"id":{"name":"getrandom","disambiguator":[17488875655129187426,16701060034023178929]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":24,"id":{"name":"cfg_if","disambiguator":[6669231008839721604,5451692867657612098]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":25,"id":{"name":"libc","disambiguator":[12590972830871631501,16526445224950325690]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","num":26,"id":{"name":"subtle","disambiguator":[4522810956575255828,4910096643372407593]}}],"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":0,"byte_end":7695,"line_start":1,"line_end":258,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":3374},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":352,"byte_end":359,"line_start":16,"line_end":16,"column_start":23,"column_end":30},"alias_span":null,"name":"BitView","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":6641,"byte_end":6642,"line_start":223,"line_end":223,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":0,"byte_end":7695,"line_start":1,"line_end":258,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":82},{"krate":0,"index":97},{"krate":0,"index":98}],"decl_id":null,"docs":" This crate provides traits for working with finite fields.\n","sig":null,"attributes":[{"value":"/ This crate provides traits for working with finite fields.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":0,"byte_end":62,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"no_std","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":118,"byte_end":128,"line_start":4,"line_end":4,"column_start":1,"column_end":11}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":129,"byte_end":172,"line_start":5,"line_end":5,"column_start":1,"column_end":44}},{"value":"allow(unused_imports)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":173,"byte_end":198,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"forbid(unsafe_code)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":199,"byte_end":222,"line_start":7,"line_end":7,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":61},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":747,"byte_end":756,"line_start":29,"line_end":29,"column_start":10,"column_end":19},"name":"FieldBits","qualname":"::FieldBits","value":"BitArray<Lsb0, V>","parent":null,"children":[],"decl_id":null,"docs":" Bit representation of a field element.\n","sig":null,"attributes":[{"value":"/ Bit representation of a field element.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":695,"byte_end":737,"line_start":28,"line_end":28,"column_start":1,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":63},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":841,"byte_end":846,"line_start":32,"line_end":32,"column_start":11,"column_end":16},"name":"Field","qualname":"::Field","value":"Field: Sized + Eq + Copy + Clone + Default + Send + Sync + fmt::Debug + 'static +\nConditionallySelectable + Add<Output = Self> + Sub<Output = Self> + Mul<Output\n= Self> + Neg<Output = Self> + for<'a> Add<&'a Self, Output = Self> +\nfor<'a> Mul<&'a Self, Output = Self> + for<'a> Sub<&'a Self, Output = Self> +\nMulAssign + AddAssign + SubAssign + for<'a> MulAssign<&'a Self> +\nfor<'a> AddAssign<&'a Self> + for<'a> SubAssign<&'a Self>","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"decl_id":null,"docs":" This trait represents an element of a field.\n","sig":null,"attributes":[{"value":"/ This trait represents an element of a field.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":782,"byte_end":830,"line_start":31,"line_end":31,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1456,"byte_end":1462,"line_start":58,"line_end":58,"column_start":8,"column_end":14},"name":"random","qualname":"::Field::random","value":"pub fn random<impl RngCore: RngCore>(impl RngCore) -> Self","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Returns an element chosen uniformly at random using a user-provided RNG.\n","sig":null,"attributes":[{"value":"/ Returns an element chosen uniformly at random using a user-provided RNG.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1372,"byte_end":1448,"line_start":57,"line_end":57,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1569,"byte_end":1573,"line_start":61,"line_end":61,"column_start":8,"column_end":12},"name":"zero","qualname":"::Field::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Returns the zero element of the field, the additive identity.\n","sig":null,"attributes":[{"value":"/ Returns the zero element of the field, the additive identity.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1496,"byte_end":1561,"line_start":60,"line_end":60,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1668,"byte_end":1671,"line_start":64,"line_end":64,"column_start":8,"column_end":11},"name":"one","qualname":"::Field::one","value":"pub fn one() -> Self","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Returns the one element of the field, the multiplicative identity.\n","sig":null,"attributes":[{"value":"/ Returns the one element of the field, the multiplicative identity.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1590,"byte_end":1660,"line_start":63,"line_end":63,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1738,"byte_end":1745,"line_start":67,"line_end":67,"column_start":8,"column_end":15},"name":"is_zero","qualname":"::Field::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Returns true iff this element is zero.\n","sig":null,"attributes":[{"value":"/ Returns true iff this element is zero.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1688,"byte_end":1730,"line_start":66,"line_end":66,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1816,"byte_end":1822,"line_start":71,"line_end":71,"column_start":8,"column_end":14},"name":"square","qualname":"::Field::square","value":"pub fn square(&Self) -> Self","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Squares this element.\n","sig":null,"attributes":[{"value":"/ Squares this element.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1767,"byte_end":1792,"line_start":69,"line_end":69,"column_start":5,"column_end":30}},{"value":"must_use","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1797,"byte_end":1808,"line_start":70,"line_end":70,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1891,"byte_end":1895,"line_start":75,"line_end":75,"column_start":8,"column_end":12},"name":"cube","qualname":"::Field::cube","value":"pub fn cube(&Self) -> Self","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Cubes this element.\n","sig":null,"attributes":[{"value":"/ Cubes this element.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1844,"byte_end":1867,"line_start":73,"line_end":73,"column_start":5,"column_end":28}},{"value":"must_use","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1872,"byte_end":1883,"line_start":74,"line_end":74,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":2002,"byte_end":2008,"line_start":81,"line_end":81,"column_start":8,"column_end":14},"name":"double","qualname":"::Field::double","value":"pub fn double(&Self) -> Self","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Doubles this element.\n","sig":null,"attributes":[{"value":"/ Doubles this element.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1953,"byte_end":1978,"line_start":79,"line_end":79,"column_start":5,"column_end":30}},{"value":"must_use","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1983,"byte_end":1994,"line_start":80,"line_end":80,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":2134,"byte_end":2140,"line_start":85,"line_end":85,"column_start":8,"column_end":14},"name":"invert","qualname":"::Field::invert","value":"pub fn invert(&Self) -> CtOption<Self>","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Computes the multiplicative inverse of this element,\n failing if the element is zero.\n","sig":null,"attributes":[{"value":"/ Computes the multiplicative inverse of this element,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":2030,"byte_end":2086,"line_start":83,"line_end":83,"column_start":5,"column_end":61}},{"value":"/ failing if the element is zero.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":2091,"byte_end":2126,"line_start":84,"line_end":84,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":2265,"byte_end":2269,"line_start":89,"line_end":89,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::Field::sqrt","value":"pub fn sqrt(&Self) -> CtOption<Self>","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Returns the square root of the field element, if it is\n quadratic residue.\n","sig":null,"attributes":[{"value":"/ Returns the square root of the field element, if it is","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":2172,"byte_end":2230,"line_start":87,"line_end":87,"column_start":5,"column_end":63}},{"value":"/ quadratic residue.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":2235,"byte_end":2257,"line_start":88,"line_end":88,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":2567,"byte_end":2578,"line_start":96,"line_end":96,"column_start":8,"column_end":19},"name":"pow_vartime","qualname":"::Field::pow_vartime","value":"pub fn pow_vartime<S: AsRef<[u64]>>(&Self, S) -> Self","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Exponentiates `self` by `exp`, where `exp` is a little-endian order\n integer exponent.","sig":null,"attributes":[{"value":"/ Exponentiates `self` by `exp`, where `exp` is a little-endian order","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":2301,"byte_end":2372,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ integer exponent.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":2377,"byte_end":2398,"line_start":92,"line_end":92,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":2403,"byte_end":2406,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ **This operation is variable time with respect to the exponent.** If the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":2411,"byte_end":2487,"line_start":94,"line_end":94,"column_start":5,"column_end":81}},{"value":"/ exponent is fixed, this operation is effectively constant time.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":2492,"byte_end":2559,"line_start":95,"line_end":95,"column_start":5,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":82},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":2982,"byte_end":2992,"line_start":113,"line_end":113,"column_start":11,"column_end":21},"name":"PrimeField","qualname":"::PrimeField","value":"PrimeField: Field + From<u64>","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96}],"decl_id":null,"docs":" This represents an element of a prime field.\n","sig":null,"attributes":[{"value":"/ This represents an element of a prime field.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":2923,"byte_end":2971,"line_start":112,"line_end":112,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":83},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":3120,"byte_end":3124,"line_start":116,"line_end":116,"column_start":10,"column_end":14},"name":"Repr","qualname":"::PrimeField::Repr","value":"type Repr: Default + AsRef<[u8]> + AsMut<[u8]>;","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" The prime field can be converted back and forth into this binary\n representation.\n","sig":null,"attributes":[{"value":"/ The prime field can be converted back and forth into this binary","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":3018,"byte_end":3086,"line_start":114,"line_end":114,"column_start":5,"column_end":73}},{"value":"/ representation.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":3091,"byte_end":3110,"line_start":115,"line_end":115,"column_start":5,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":84},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":3250,"byte_end":3258,"line_start":119,"line_end":119,"column_start":10,"column_end":18},"name":"ReprBits","qualname":"::PrimeField::ReprBits","value":"type ReprBits: BitView + Send + Sync;","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" The backing store for a bit representation of a prime field element.\n","sig":null,"attributes":[{"value":"/ The backing store for a bit representation of a prime field element.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":3168,"byte_end":3240,"line_start":118,"line_end":118,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":3437,"byte_end":3445,"line_start":123,"line_end":123,"column_start":8,"column_end":16},"name":"from_str","qualname":"::PrimeField::from_str","value":"pub fn from_str(&str) -> Option<Self>","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Interpret a string of numbers as a (congruent) prime field element.\n Does not accept unnecessary leading zeroes or a blank string.\n","sig":null,"attributes":[{"value":"/ Interpret a string of numbers as a (congruent) prime field element.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":3288,"byte_end":3359,"line_start":121,"line_end":121,"column_start":5,"column_end":76}},{"value":"/ Does not accept unnecessary leading zeroes or a blank string.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":3364,"byte_end":3429,"line_start":122,"line_end":122,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":4615,"byte_end":4624,"line_start":167,"line_end":167,"column_start":8,"column_end":17},"name":"from_repr","qualname":"::PrimeField::from_repr","value":"pub fn from_repr(Self::Repr) -> Option<Self>","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Attempts to convert a byte representation of a field element into an element of\n this prime field, failing if the input is not canonical (is not smaller than the\n field's modulus).","sig":null,"attributes":[{"value":"/ Attempts to convert a byte representation of a field element into an element of","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":4272,"byte_end":4355,"line_start":161,"line_end":161,"column_start":5,"column_end":88}},{"value":"/ this prime field, failing if the input is not canonical (is not smaller than the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":4360,"byte_end":4444,"line_start":162,"line_end":162,"column_start":5,"column_end":89}},{"value":"/ field's modulus).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":4449,"byte_end":4470,"line_start":163,"line_end":163,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":4475,"byte_end":4478,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The byte representation is interpreted with the same endianness as elements","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":4483,"byte_end":4562,"line_start":165,"line_end":165,"column_start":5,"column_end":84}},{"value":"/ returned by [`PrimeField::to_repr`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":4567,"byte_end":4607,"line_start":166,"line_end":166,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":4933,"byte_end":4940,"line_start":174,"line_end":174,"column_start":8,"column_end":15},"name":"to_repr","qualname":"::PrimeField::to_repr","value":"pub fn to_repr(&Self) -> Self::Repr","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Converts an element of the prime field into the standard byte representation for\n this field.","sig":null,"attributes":[{"value":"/ Converts an element of the prime field into the standard byte representation for","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":4662,"byte_end":4746,"line_start":169,"line_end":169,"column_start":5,"column_end":89}},{"value":"/ this field.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":4751,"byte_end":4766,"line_start":170,"line_end":170,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":4771,"byte_end":4774,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ The endianness of the byte representation is implementation-specific. Generic","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":4779,"byte_end":4860,"line_start":172,"line_end":172,"column_start":5,"column_end":86}},{"value":"/ encodings of field elements should be treated as opaque.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":4865,"byte_end":4925,"line_start":173,"line_end":173,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":5057,"byte_end":5067,"line_start":177,"line_end":177,"column_start":8,"column_end":18},"name":"to_le_bits","qualname":"::PrimeField::to_le_bits","value":"pub fn to_le_bits(&Self) -> FieldBits<Self::ReprBits>","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Converts an element of the prime field into a little-endian sequence of bits.\n","sig":null,"attributes":[{"value":"/ Converts an element of the prime field into a little-endian sequence of bits.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":4968,"byte_end":5049,"line_start":176,"line_end":176,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":5159,"byte_end":5165,"line_start":180,"line_end":180,"column_start":8,"column_end":14},"name":"is_odd","qualname":"::PrimeField::is_odd","value":"pub fn is_odd(&Self) -> bool","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Returns true iff this element is odd.\n","sig":null,"attributes":[{"value":"/ Returns true iff this element is odd.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":5110,"byte_end":5151,"line_start":179,"line_end":179,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":5259,"byte_end":5266,"line_start":184,"line_end":184,"column_start":8,"column_end":15},"name":"is_even","qualname":"::PrimeField::is_even","value":"pub fn is_even(&Self) -> bool","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Returns true iff this element is even.\n","sig":null,"attributes":[{"value":"/ Returns true iff this element is even.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":5187,"byte_end":5229,"line_start":182,"line_end":182,"column_start":5,"column_end":47}},{"value":"inline(always)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":5234,"byte_end":5251,"line_start":183,"line_end":183,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":5412,"byte_end":5424,"line_start":189,"line_end":189,"column_start":8,"column_end":20},"name":"char_le_bits","qualname":"::PrimeField::char_le_bits","value":"pub fn char_le_bits() -> FieldBits<Self::ReprBits>","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Returns the bits of the field characteristic (the modulus) in little-endian order.\n","sig":null,"attributes":[{"value":"/ Returns the bits of the field characteristic (the modulus) in little-endian order.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":5318,"byte_end":5404,"line_start":188,"line_end":188,"column_start":5,"column_end":91}}]},{"kind":"Const","id":{"krate":0,"index":92},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":5540,"byte_end":5548,"line_start":192,"line_end":192,"column_start":11,"column_end":19},"name":"NUM_BITS","qualname":"::PrimeField::NUM_BITS","value":"u32","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" How many bits are needed to represent an element of this field.\n","sig":null,"attributes":[{"value":"/ How many bits are needed to represent an element of this field.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":5462,"byte_end":5529,"line_start":191,"line_end":191,"column_start":5,"column_end":72}}]},{"kind":"Const","id":{"krate":0,"index":93},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":5702,"byte_end":5710,"line_start":197,"line_end":197,"column_start":11,"column_end":19},"name":"CAPACITY","qualname":"::PrimeField::CAPACITY","value":"u32","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" How many bits of information can be reliably stored in the field element.","sig":null,"attributes":[{"value":"/ How many bits of information can be reliably stored in the field element.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":5560,"byte_end":5637,"line_start":194,"line_end":194,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":5642,"byte_end":5645,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This is usually `Self::NUM_BITS - 1`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":5650,"byte_end":5691,"line_start":196,"line_end":196,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":6134,"byte_end":6158,"line_start":208,"line_end":208,"column_start":8,"column_end":32},"name":"multiplicative_generator","qualname":"::PrimeField::multiplicative_generator","value":"pub fn multiplicative_generator() -> Self","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Returns a fixed multiplicative generator of `modulus - 1` order. This element must\n also be a quadratic nonresidue.","sig":null,"attributes":[{"value":"/ Returns a fixed multiplicative generator of `modulus - 1` order. This element must","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":5722,"byte_end":5808,"line_start":199,"line_end":199,"column_start":5,"column_end":91}},{"value":"/ also be a quadratic nonresidue.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":5813,"byte_end":5848,"line_start":200,"line_end":200,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":5853,"byte_end":5856,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ It can be calculated using [SageMath] as `GF(modulus).primitive_element()`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":5861,"byte_end":5940,"line_start":202,"line_end":202,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":5945,"byte_end":5948,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Implementations of this method MUST ensure that this is the generator used to","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":5953,"byte_end":6034,"line_start":204,"line_end":204,"column_start":5,"column_end":86}},{"value":"/ derive `Self::root_of_unity`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":6039,"byte_end":6072,"line_start":205,"line_end":205,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":6077,"byte_end":6080,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ [SageMath]: https://www.sagemath.org/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":6085,"byte_end":6126,"line_start":207,"line_end":207,"column_start":5,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":95},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":6388,"byte_end":6389,"line_start":214,"line_end":214,"column_start":11,"column_end":12},"name":"S","qualname":"::PrimeField::S","value":"u32","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" An integer `s` satisfying the equation `2^s * t = modulus - 1` with `t` odd.","sig":null,"attributes":[{"value":"/ An integer `s` satisfying the equation `2^s * t = modulus - 1` with `t` odd.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":6175,"byte_end":6255,"line_start":210,"line_end":210,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":6260,"byte_end":6263,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ This is the number of leading zero bits in the little-endian bit representation of","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":6268,"byte_end":6354,"line_start":212,"line_end":212,"column_start":5,"column_end":91}},{"value":"/ `modulus - 1`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":6359,"byte_end":6377,"line_start":213,"line_end":213,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":6587,"byte_end":6600,"line_start":220,"line_end":220,"column_start":8,"column_end":21},"name":"root_of_unity","qualname":"::PrimeField::root_of_unity","value":"pub fn root_of_unity() -> Self","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":" Returns the `2^s` root of unity.","sig":null,"attributes":[{"value":"/ Returns the `2^s` root of unity.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":6401,"byte_end":6437,"line_start":216,"line_end":216,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":6442,"byte_end":6445,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ It can be calculated by exponentiating `Self::multiplicative_generator` by `t`,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":6450,"byte_end":6533,"line_start":218,"line_end":218,"column_start":5,"column_end":88}},{"value":"/ where `t = (modulus - 1) >> Self::S`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":6538,"byte_end":6579,"line_start":219,"line_end":219,"column_start":5,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":99},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":6790,"byte_end":6793,"line_start":229,"line_end":229,"column_start":12,"column_end":15},"name":"sbb","qualname":"::arith_impl::sbb","value":"pub fn sbb(u64, u64, &mut u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Calculate a - b - borrow, returning the result and modifying\n the borrow value.\n","sig":null,"attributes":[{"value":"/ Calculate a - b - borrow, returning the result and modifying","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":6666,"byte_end":6730,"line_start":226,"line_end":226,"column_start":5,"column_end":69}},{"value":"/ the borrow value.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":6735,"byte_end":6756,"line_start":227,"line_end":227,"column_start":5,"column_end":26}},{"value":"inline(always)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":6761,"byte_end":6778,"line_start":228,"line_end":228,"column_start":5,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":100},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":7129,"byte_end":7132,"line_start":240,"line_end":240,"column_start":12,"column_end":15},"name":"adc","qualname":"::arith_impl::adc","value":"pub fn adc(u64, u64, &mut u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Calculate a + b + carry, returning the sum and modifying the\n carry value.\n","sig":null,"attributes":[{"value":"/ Calculate a + b + carry, returning the sum and modifying the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":7010,"byte_end":7074,"line_start":237,"line_end":237,"column_start":5,"column_end":69}},{"value":"/ carry value.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":7079,"byte_end":7095,"line_start":238,"line_end":238,"column_start":5,"column_end":21}},{"value":"inline(always)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":7100,"byte_end":7117,"line_start":239,"line_end":239,"column_start":5,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":101},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":7477,"byte_end":7491,"line_start":251,"line_end":251,"column_start":12,"column_end":26},"name":"mac_with_carry","qualname":"::arith_impl::mac_with_carry","value":"pub fn mac_with_carry(u64, u64, u64, &mut u64) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Calculate a + (b * c) + carry, returning the least significant digit\n and setting carry to the most significant digit.\n","sig":null,"attributes":[{"value":"/ Calculate a + (b * c) + carry, returning the least significant digit","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":7314,"byte_end":7386,"line_start":248,"line_end":248,"column_start":5,"column_end":77}},{"value":"/ and setting carry to the most significant digit.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":7391,"byte_end":7443,"line_start":249,"line_end":249,"column_start":5,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":7448,"byte_end":7465,"line_start":250,"line_end":250,"column_start":5,"column_end":22}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":852,"byte_end":857,"line_start":33,"line_end":33,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2837},"to":{"krate":0,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":864,"byte_end":866,"line_start":34,"line_end":34,"column_start":7,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":2492},"to":{"krate":0,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":873,"byte_end":877,"line_start":35,"line_end":35,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2842},"to":{"krate":0,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":884,"byte_end":889,"line_start":36,"line_end":36,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":2457},"to":{"krate":0,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":896,"byte_end":903,"line_start":37,"line_end":37,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":1,"index":2810},"to":{"krate":0,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":910,"byte_end":914,"line_start":38,"line_end":38,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2832},"to":{"krate":0,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":921,"byte_end":925,"line_start":39,"line_end":39,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2844},"to":{"krate":0,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":937,"byte_end":942,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":8805},"to":{"krate":0,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":963,"byte_end":986,"line_start":42,"line_end":42,"column_start":7,"column_end":30},"kind":"SuperTrait","from":{"krate":26,"index":66},"to":{"krate":0,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":993,"byte_end":996,"line_start":43,"line_end":43,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2899},"to":{"krate":0,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1018,"byte_end":1021,"line_start":44,"line_end":44,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2904},"to":{"krate":0,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1043,"byte_end":1046,"line_start":45,"line_end":45,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2909},"to":{"krate":0,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1068,"byte_end":1071,"line_start":46,"line_end":46,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2926},"to":{"krate":0,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1101,"byte_end":1104,"line_start":47,"line_end":47,"column_start":15,"column_end":18},"kind":"SuperTrait","from":{"krate":1,"index":2899},"to":{"krate":0,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1144,"byte_end":1147,"line_start":48,"line_end":48,"column_start":15,"column_end":18},"kind":"SuperTrait","from":{"krate":1,"index":2909},"to":{"krate":0,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1187,"byte_end":1190,"line_start":49,"line_end":49,"column_start":15,"column_end":18},"kind":"SuperTrait","from":{"krate":1,"index":2904},"to":{"krate":0,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1222,"byte_end":1231,"line_start":50,"line_end":50,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":1,"index":2938},"to":{"krate":0,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1238,"byte_end":1247,"line_start":51,"line_end":51,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":1,"index":2930},"to":{"krate":0,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1254,"byte_end":1263,"line_start":52,"line_end":52,"column_start":7,"column_end":16},"kind":"SuperTrait","from":{"krate":1,"index":2934},"to":{"krate":0,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1278,"byte_end":1287,"line_start":53,"line_end":53,"column_start":15,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":2938},"to":{"krate":0,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1312,"byte_end":1321,"line_start":54,"line_end":54,"column_start":15,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":2930},"to":{"krate":0,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":1346,"byte_end":1355,"line_start":55,"line_end":55,"column_start":15,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":2934},"to":{"krate":0,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":2994,"byte_end":2999,"line_start":113,"line_end":113,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":63},"to":{"krate":0,"index":82}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ff-0.9.0/src/lib.rs","byte_start":3002,"byte_end":3006,"line_start":113,"line_end":113,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":2738},"to":{"krate":0,"index":82}}]}