{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1","program":"/Users/julia/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","aead","--edition=2018","/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","-C","metadata=d73570c1b348f95a","-C","extra-filename=-d73570c1b348f95a","--out-dir","/Users/julia/ruhackathon/target/rls/debug/deps","-L","dependency=/Users/julia/ruhackathon/target/rls/debug/deps","--extern","generic_array=/Users/julia/ruhackathon/target/rls/debug/deps/libgeneric_array-b702d19f2d78d877.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/julia/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/julia/ruhackathon/target/rls/debug/deps/libaead-d73570c1b348f95a.rmeta"},"prelude":{"crate_id":{"name":"aead","disambiguator":[5798720082682073653,14686336780143974559]},"crate_root":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src","external_crates":[{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[17161976177339802527,9637120080719870273]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[12784072134307519025,4657485898025748013]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[8860544973196061204,9932137894390183628]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[15484098214765895148,4360652648143560453]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","num":5,"id":{"name":"generic_array","disambiguator":[7429325815917903621,4953779473884636296]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","num":6,"id":{"name":"typenum","disambiguator":[14509014512433398701,5747145694384200891]}}],"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":0,"byte_end":18125,"line_start":1,"line_end":525,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":5,"index":0},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":1531,"byte_end":1544,"line_start":40,"line_end":40,"column_start":9,"column_end":22},"alias_span":null,"name":"generic_array","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":6,"index":2758},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":1562,"byte_end":1568,"line_start":40,"line_end":40,"column_start":40,"column_end":46},"alias_span":null,"name":"consts","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":0,"byte_end":18125,"line_start":1,"line_end":525,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":40},{"krate":0,"index":44},{"krate":0,"index":53},{"krate":0,"index":63},{"krate":0,"index":68},{"krate":0,"index":75},{"krate":0,"index":85},{"krate":0,"index":95},{"krate":0,"index":103},{"krate":0,"index":108},{"krate":0,"index":112},{"krate":0,"index":117}],"decl_id":null,"docs":" [Authenticated Encryption with Associated Data] (AEAD) traits","sig":null,"attributes":[{"value":"/ [Authenticated Encryption with Associated Data] (AEAD) traits","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":0,"byte_end":65,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":66,"byte_end":69,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides an abstract interface for AEAD ciphers, which guarantee","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":70,"byte_end":149,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ both confidentiality and integrity, even from a powerful attacker who is","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":150,"byte_end":226,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ able to execute [chosen-ciphertext attacks]. The resulting security property,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":227,"byte_end":308,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ [ciphertext indistinguishability], is considered a basic requirement for","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":309,"byte_end":385,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ modern cryptographic implementations.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":386,"byte_end":427,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":428,"byte_end":431,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [RustCrypto/AEADs] for cipher implementations which use this trait.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":432,"byte_end":507,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":508,"byte_end":511,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [Authenticated Encryption with Associated Data]: https://en.wikipedia.org/wiki/Authenticated_encryption","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":512,"byte_end":619,"line_start":11,"line_end":11,"column_start":1,"column_end":108}},{"value":"/ [chosen-ciphertext attacks]: https://en.wikipedia.org/wiki/Chosen-ciphertext_attack","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":620,"byte_end":707,"line_start":12,"line_end":12,"column_start":1,"column_end":88}},{"value":"/ [ciphertext indistinguishability]: https://en.wikipedia.org/wiki/Ciphertext_indistinguishability","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":708,"byte_end":808,"line_start":13,"line_end":13,"column_start":1,"column_end":101}},{"value":"/ [RustCrypto/AEADs]: https://github.com/RustCrypto/AEADs","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":809,"byte_end":868,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"no_std","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":870,"byte_end":880,"line_start":16,"line_end":16,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code, clippy :: unwrap_used)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":920,"byte_end":964,"line_start":18,"line_end":18,"column_start":1,"column_end":45}},{"value":"warn(missing_docs, rust_2018_idioms)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":1212,"byte_end":1252,"line_start":24,"line_end":24,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":120},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":2025,"byte_end":2030,"line_start":59,"line_end":59,"column_start":12,"column_end":17},"name":"Error","qualname":"::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error type.","sig":null,"attributes":[{"value":"/ Error type.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":1819,"byte_end":1834,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":1835,"byte_end":1838,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This type is deliberately opaque as to avoid potential side-channel","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":1839,"byte_end":1910,"line_start":56,"line_end":56,"column_start":1,"column_end":72}},{"value":"/ leakage (e.g. padding oracle).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":1911,"byte_end":1945,"line_start":57,"line_end":57,"column_start":1,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":30},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":2335,"byte_end":2338,"line_start":72,"line_end":72,"column_start":10,"column_end":13},"name":"Key","qualname":"::Key","value":"GenericArray<u8, <A as NewAead>::KeySize>","parent":null,"children":[],"decl_id":null,"docs":" Key for a [`NewAead`] algorithm\n","sig":null,"attributes":[{"value":"/ Key for a [`NewAead`] algorithm","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":2231,"byte_end":2266,"line_start":70,"line_end":70,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":32},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":2461,"byte_end":2466,"line_start":75,"line_end":75,"column_start":10,"column_end":15},"name":"Nonce","qualname":"::Nonce","value":"GenericArray<u8, <A as AeadCore>::NonceSize>","parent":null,"children":[],"decl_id":null,"docs":" Nonce: single-use value for ensuring ciphertexts are unique\n","sig":null,"attributes":[{"value":"/ Nonce: single-use value for ensuring ciphertexts are unique","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":2388,"byte_end":2451,"line_start":74,"line_end":74,"column_start":1,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":34},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":2597,"byte_end":2600,"line_start":78,"line_end":78,"column_start":10,"column_end":13},"name":"Tag","qualname":"::Tag","value":"GenericArray<u8, <A as AeadCore>::TagSize>","parent":null,"children":[],"decl_id":null,"docs":" Tag: authentication code which ensures ciphertexts are authentic\n","sig":null,"attributes":[{"value":"/ Tag: authentication code which ensures ciphertexts are authentic","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":2519,"byte_end":2587,"line_start":77,"line_end":77,"column_start":1,"column_end":69}}]},{"kind":"Trait","id":{"krate":0,"index":36},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":2740,"byte_end":2747,"line_start":81,"line_end":81,"column_start":11,"column_end":18},"name":"NewAead","qualname":"::NewAead","value":"NewAead","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39}],"decl_id":null,"docs":" Instantiate either a stateless [`Aead`] or stateful [`AeadMut`] algorithm.\n","sig":null,"attributes":[{"value":"/ Instantiate either a stateless [`Aead`] or stateful [`AeadMut`] algorithm.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":2651,"byte_end":2729,"line_start":80,"line_end":80,"column_start":1,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":37},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":2821,"byte_end":2828,"line_start":83,"line_end":83,"column_start":10,"column_end":17},"name":"KeySize","qualname":"::NewAead::KeySize","value":"type KeySize: ArrayLength<u8>;","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" The size of the key array required by this algorithm.\n","sig":null,"attributes":[{"value":"/ The size of the key array required by this algorithm.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":2754,"byte_end":2811,"line_start":82,"line_end":82,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":2910,"byte_end":2913,"line_start":86,"line_end":86,"column_start":8,"column_end":11},"name":"new","qualname":"::NewAead::new","value":"pub fn new(&Key<Self>) -> Self","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Create a new AEAD instance with the given key.\n","sig":null,"attributes":[{"value":"/ Create a new AEAD instance with the given key.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":2852,"byte_end":2902,"line_start":85,"line_end":85,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":3107,"byte_end":3121,"line_start":91,"line_end":91,"column_start":8,"column_end":22},"name":"new_from_slice","qualname":"::NewAead::new_from_slice","value":"pub fn new_from_slice(&[u8]) -> Result<Self, Error> where Self: Sized","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" Create new AEAD instance from key given as a byte slice..","sig":null,"attributes":[{"value":"/ Create new AEAD instance from key given as a byte slice..","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":2945,"byte_end":3006,"line_start":88,"line_end":88,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":3011,"byte_end":3014,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Default implementation will accept only keys with length equal to `KeySize`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":3019,"byte_end":3099,"line_start":90,"line_end":90,"column_start":5,"column_end":85}}]},{"kind":"Trait","id":{"krate":0,"index":40},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":3891,"byte_end":3899,"line_start":116,"line_end":116,"column_start":11,"column_end":19},"name":"AeadCore","qualname":"::AeadCore","value":"AeadCore","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43}],"decl_id":null,"docs":" Authenticated Encryption with Associated Data (AEAD) algorithm core trait.","sig":null,"attributes":[{"value":"/ Authenticated Encryption with Associated Data (AEAD) algorithm core trait.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":3700,"byte_end":3778,"line_start":112,"line_end":112,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":3779,"byte_end":3782,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Defines nonce, tag, and overhead sizes that are consumed by various other","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":3783,"byte_end":3860,"line_start":114,"line_end":114,"column_start":1,"column_end":78}},{"value":"/ `Aead*` traits.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":3861,"byte_end":3880,"line_start":115,"line_end":115,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":41},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":3942,"byte_end":3951,"line_start":118,"line_end":118,"column_start":10,"column_end":19},"name":"NonceSize","qualname":"::AeadCore::NonceSize","value":"type NonceSize: ArrayLength<u8>;","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" The length of a nonce.\n","sig":null,"attributes":[{"value":"/ The length of a nonce.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":3906,"byte_end":3932,"line_start":117,"line_end":117,"column_start":5,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":42},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":4021,"byte_end":4028,"line_start":121,"line_end":121,"column_start":10,"column_end":17},"name":"TagSize","qualname":"::AeadCore::TagSize","value":"type TagSize: ArrayLength<u8>;","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" The maximum length of the nonce.\n","sig":null,"attributes":[{"value":"/ The maximum length of the nonce.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":3975,"byte_end":4011,"line_start":120,"line_end":120,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":43},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":4166,"byte_end":4184,"line_start":125,"line_end":125,"column_start":10,"column_end":28},"name":"CiphertextOverhead","qualname":"::AeadCore::CiphertextOverhead","value":"type CiphertextOverhead: ArrayLength<u8> + Unsigned;","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" The upper bound amount of additional space required to support a\n ciphertext vs. a plaintext.\n","sig":null,"attributes":[{"value":"/ The upper bound amount of additional space required to support a","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":4052,"byte_end":4120,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/ ciphertext vs. a plaintext.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":4125,"byte_end":4156,"line_start":124,"line_end":124,"column_start":5,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":44},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":4498,"byte_end":4502,"line_start":134,"line_end":134,"column_start":11,"column_end":15},"name":"Aead","qualname":"::Aead","value":"Aead: AeadCore","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":49}],"decl_id":null,"docs":" Authenticated Encryption with Associated Data (AEAD) algorithm.","sig":null,"attributes":[{"value":"/ Authenticated Encryption with Associated Data (AEAD) algorithm.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":4217,"byte_end":4284,"line_start":128,"line_end":128,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":4285,"byte_end":4288,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This trait is intended for use with stateless AEAD algorithms. The","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":4289,"byte_end":4359,"line_start":130,"line_end":130,"column_start":1,"column_end":71}},{"value":"/ [`AeadMut`] trait provides a stateful interface.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":4360,"byte_end":4412,"line_start":131,"line_end":131,"column_start":1,"column_end":53}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":4413,"byte_end":4438,"line_start":132,"line_end":132,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":5708,"byte_end":5715,"line_start":158,"line_end":158,"column_start":8,"column_end":15},"name":"encrypt","qualname":"::Aead::encrypt","value":"pub fn encrypt<'msg, 'aad,\n               impl Into<Payload<'msg, 'aad>>: Into<Payload>>(&Self,\n                                                              &Nonce<Self>,\n                                                              impl Into<Payload<'msg, 'aad>>)\n-> Result<Vec<u8>, Error>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Encrypt the given plaintext payload, and return the resulting\n ciphertext as a vector of bytes.","sig":null,"attributes":[{"value":"/ Encrypt the given plaintext payload, and return the resulting","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":4519,"byte_end":4584,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/ ciphertext as a vector of bytes.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":4589,"byte_end":4625,"line_start":136,"line_end":136,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":4630,"byte_end":4633,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ The [`Payload`] type can be used to provide Additional Associated Data","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":4638,"byte_end":4712,"line_start":138,"line_end":138,"column_start":5,"column_end":79}},{"value":"/ (AAD) along with the message: this is an optional bytestring which is","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":4717,"byte_end":4790,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ not encrypted, but *is* authenticated along with the message. Failure","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":4795,"byte_end":4868,"line_start":140,"line_end":140,"column_start":5,"column_end":78}},{"value":"/ to pass the same AAD that was used during encryption will cause","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":4873,"byte_end":4940,"line_start":141,"line_end":141,"column_start":5,"column_end":72}},{"value":"/ decryption to fail, which is useful if you would like to \"bind\" the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":4945,"byte_end":5016,"line_start":142,"line_end":142,"column_start":5,"column_end":76}},{"value":"/ ciphertext to some other identifier, like a digital signature key","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":5021,"byte_end":5090,"line_start":143,"line_end":143,"column_start":5,"column_end":74}},{"value":"/ or other identifier.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":5095,"byte_end":5119,"line_start":144,"line_end":144,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":5124,"byte_end":5127,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ If you don't care about AAD and just want to encrypt a plaintext","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":5132,"byte_end":5200,"line_start":146,"line_end":146,"column_start":5,"column_end":73}},{"value":"/ message, `&[u8]` will automatically be coerced into a `Payload`:","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":5205,"byte_end":5273,"line_start":147,"line_end":147,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":5278,"byte_end":5281,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```nobuild","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":5286,"byte_end":5300,"line_start":149,"line_end":149,"column_start":5,"column_end":19}},{"value":"/ let plaintext = b\"Top secret message, handle with care\";","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":5305,"byte_end":5365,"line_start":150,"line_end":150,"column_start":5,"column_end":65}},{"value":"/ let ciphertext = cipher.encrypt(nonce, plaintext);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":5370,"byte_end":5424,"line_start":151,"line_end":151,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":5429,"byte_end":5436,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":5441,"byte_end":5444,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ The default implementation assumes a postfix tag (ala AES-GCM,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":5449,"byte_end":5515,"line_start":154,"line_end":154,"column_start":5,"column_end":71}},{"value":"/ AES-GCM-SIV, ChaCha20Poly1305). [`Aead`] implementations which do not","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":5520,"byte_end":5593,"line_start":155,"line_end":155,"column_start":5,"column_end":78}},{"value":"/ use a postfix tag will need to override this to correctly assemble the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":5598,"byte_end":5672,"line_start":156,"line_end":156,"column_start":5,"column_end":79}},{"value":"/ ciphertext message.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":5677,"byte_end":5700,"line_start":157,"line_end":157,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":6561,"byte_end":6568,"line_start":181,"line_end":181,"column_start":8,"column_end":15},"name":"decrypt","qualname":"::Aead::decrypt","value":"pub fn decrypt<'msg, 'aad,\n               impl Into<Payload<'msg, 'aad>>: Into<Payload>>(&Self,\n                                                              &Nonce<Self>,\n                                                              impl Into<Payload<'msg, 'aad>>)\n-> Result<Vec<u8>, Error>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Decrypt the given ciphertext slice, and return the resulting plaintext\n as a vector of bytes.","sig":null,"attributes":[{"value":"/ Decrypt the given ciphertext slice, and return the resulting plaintext","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":5862,"byte_end":5936,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/ as a vector of bytes.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":5941,"byte_end":5966,"line_start":165,"line_end":165,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":5971,"byte_end":5974,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ See notes on [`Aead::encrypt()`] about allowable message payloads and","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":5979,"byte_end":6052,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/ Associated Additional Data (AAD).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":6057,"byte_end":6094,"line_start":168,"line_end":168,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":6099,"byte_end":6102,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If you have no AAD, you can call this as follows:","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":6107,"byte_end":6160,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":6165,"byte_end":6168,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```nobuild","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":6173,"byte_end":6187,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/ let ciphertext = b\"...\";","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":6192,"byte_end":6220,"line_start":173,"line_end":173,"column_start":5,"column_end":33}},{"value":"/ let plaintext = cipher.decrypt(nonce, ciphertext)?;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":6225,"byte_end":6280,"line_start":174,"line_end":174,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":6285,"byte_end":6292,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":6297,"byte_end":6300,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ The default implementation assumes a postfix tag (ala AES-GCM,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":6305,"byte_end":6371,"line_start":177,"line_end":177,"column_start":5,"column_end":71}},{"value":"/ AES-GCM-SIV, ChaCha20Poly1305). [`Aead`] implementations which do not","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":6376,"byte_end":6449,"line_start":178,"line_end":178,"column_start":5,"column_end":78}},{"value":"/ use a postfix tag will need to override this to correctly parse the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":6454,"byte_end":6525,"line_start":179,"line_end":179,"column_start":5,"column_end":76}},{"value":"/ ciphertext message.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":6530,"byte_end":6553,"line_start":180,"line_end":180,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":53},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":6869,"byte_end":6876,"line_start":191,"line_end":191,"column_start":11,"column_end":18},"name":"AeadMut","qualname":"::AeadMut","value":"AeadMut: AeadCore","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":58}],"decl_id":null,"docs":" Stateful Authenticated Encryption with Associated Data algorithm.\n","sig":null,"attributes":[{"value":"/ Stateful Authenticated Encryption with Associated Data algorithm.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":6714,"byte_end":6783,"line_start":188,"line_end":188,"column_start":1,"column_end":70}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":6784,"byte_end":6809,"line_start":189,"line_end":189,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":7133,"byte_end":7140,"line_start":197,"line_end":197,"column_start":8,"column_end":15},"name":"encrypt","qualname":"::AeadMut::encrypt","value":"pub fn encrypt<'msg, 'aad,\n               impl Into<Payload<'msg, 'aad>>: Into<Payload>>(&mut Self,\n                                                              &Nonce<Self>,\n                                                              impl Into<Payload<'msg, 'aad>>)\n-> Result<Vec<u8>, Error>","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Encrypt the given plaintext slice, and return the resulting ciphertext\n as a vector of bytes.","sig":null,"attributes":[{"value":"/ Encrypt the given plaintext slice, and return the resulting ciphertext","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":6893,"byte_end":6967,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ as a vector of bytes.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":6972,"byte_end":6997,"line_start":193,"line_end":193,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":7002,"byte_end":7005,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ See notes on [`Aead::encrypt()`] about allowable message payloads and","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":7010,"byte_end":7083,"line_start":195,"line_end":195,"column_start":5,"column_end":78}},{"value":"/ Associated Additional Data (AAD).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":7088,"byte_end":7125,"line_start":196,"line_end":196,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":7555,"byte_end":7562,"line_start":208,"line_end":208,"column_start":8,"column_end":15},"name":"decrypt","qualname":"::AeadMut::decrypt","value":"pub fn decrypt<'msg, 'aad,\n               impl Into<Payload<'msg, 'aad>>: Into<Payload>>(&mut Self,\n                                                              &Nonce<Self>,\n                                                              impl Into<Payload<'msg, 'aad>>)\n-> Result<Vec<u8>, Error>","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Decrypt the given ciphertext slice, and return the resulting plaintext\n as a vector of bytes.","sig":null,"attributes":[{"value":"/ Decrypt the given ciphertext slice, and return the resulting plaintext","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":7291,"byte_end":7365,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ as a vector of bytes.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":7370,"byte_end":7395,"line_start":204,"line_end":204,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":7400,"byte_end":7403,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ See notes on [`Aead::encrypt()`] and [`Aead::decrypt()`] about allowable","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":7408,"byte_end":7484,"line_start":206,"line_end":206,"column_start":5,"column_end":81}},{"value":"/ message payloads and Associated Additional Data (AAD).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":7489,"byte_end":7547,"line_start":207,"line_end":207,"column_start":5,"column_end":63}}]},{"kind":"Trait","id":{"krate":0,"index":63},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":8620,"byte_end":8631,"line_start":237,"line_end":237,"column_start":11,"column_end":22},"name":"AeadInPlace","qualname":"::AeadInPlace","value":"AeadInPlace: AeadCore","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67}],"decl_id":null,"docs":" In-place stateless AEAD trait.","sig":null,"attributes":[{"value":"/ In-place stateless AEAD trait.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":8491,"byte_end":8525,"line_start":234,"line_end":234,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":8526,"byte_end":8529,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ This trait is both object safe and has no dependencies on `alloc` or `std`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":8530,"byte_end":8609,"line_start":236,"line_end":236,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":9121,"byte_end":9137,"line_start":247,"line_end":247,"column_start":8,"column_end":24},"name":"encrypt_in_place","qualname":"::AeadInPlace::encrypt_in_place","value":"pub fn encrypt_in_place(&Self, &Nonce<Self>, &[u8], &mut dyn Buffer)\n-> Result<(), Error>","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Encrypt the given buffer containing a plaintext message in-place.","sig":null,"attributes":[{"value":"/ Encrypt the given buffer containing a plaintext message in-place.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":8648,"byte_end":8717,"line_start":238,"line_end":238,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":8722,"byte_end":8725,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ The buffer must have sufficient capacity to store the ciphertext","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":8730,"byte_end":8798,"line_start":240,"line_end":240,"column_start":5,"column_end":73}},{"value":"/ message, which will always be larger than the original plaintext.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":8803,"byte_end":8872,"line_start":241,"line_end":241,"column_start":5,"column_end":74}},{"value":"/ The exact size needed is cipher-dependent, but generally includes","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":8877,"byte_end":8946,"line_start":242,"line_end":242,"column_start":5,"column_end":74}},{"value":"/ the size of an authentication tag.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":8951,"byte_end":8989,"line_start":243,"line_end":243,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":8994,"byte_end":8997,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the buffer has insufficient capacity to store the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":9002,"byte_end":9075,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/ resulting ciphertext message.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":9080,"byte_end":9113,"line_start":246,"line_end":246,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":9517,"byte_end":9542,"line_start":259,"line_end":259,"column_start":8,"column_end":33},"name":"encrypt_in_place_detached","qualname":"::AeadInPlace::encrypt_in_place_detached","value":"pub fn encrypt_in_place_detached(&Self, &Nonce<Self>, &[u8], &mut [u8])\n-> Result<Tag<Self>, Error>","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Encrypt the data in-place, returning the authentication tag\n","sig":null,"attributes":[{"value":"/ Encrypt the data in-place, returning the authentication tag","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":9446,"byte_end":9509,"line_start":258,"line_end":258,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":9952,"byte_end":9968,"line_start":271,"line_end":271,"column_start":8,"column_end":24},"name":"decrypt_in_place","qualname":"::AeadInPlace::decrypt_in_place","value":"pub fn decrypt_in_place(&Self, &Nonce<Self>, &[u8], &mut dyn Buffer)\n-> Result<(), Error>","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Decrypt the message in-place, returning an error in the event the\n provided authentication tag does not match the given ciphertext.","sig":null,"attributes":[{"value":"/ Decrypt the message in-place, returning an error in the event the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":9687,"byte_end":9756,"line_start":266,"line_end":266,"column_start":5,"column_end":74}},{"value":"/ provided authentication tag does not match the given ciphertext.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":9761,"byte_end":9829,"line_start":267,"line_end":267,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":9834,"byte_end":9837,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ The buffer will be truncated to the length of the original plaintext","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":9842,"byte_end":9914,"line_start":269,"line_end":269,"column_start":5,"column_end":77}},{"value":"/ message upon success.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":9919,"byte_end":9944,"line_start":270,"line_end":270,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":10387,"byte_end":10412,"line_start":283,"line_end":283,"column_start":8,"column_end":33},"name":"decrypt_in_place_detached","qualname":"::AeadInPlace::decrypt_in_place_detached","value":"pub fn decrypt_in_place_detached(&Self, &Nonce<Self>, &[u8], &mut [u8],\n                                 &Tag<Self>) -> Result<(), Error>","parent":{"krate":0,"index":63},"children":[],"decl_id":null,"docs":" Decrypt the message in-place, returning an error in the event the provided\n authentication tag does not match the given ciphertext (i.e. ciphertext\n is modified/unauthentic)\n","sig":null,"attributes":[{"value":"/ Decrypt the message in-place, returning an error in the event the provided","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":10188,"byte_end":10266,"line_start":280,"line_end":280,"column_start":5,"column_end":83}},{"value":"/ authentication tag does not match the given ciphertext (i.e. ciphertext","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":10271,"byte_end":10346,"line_start":281,"line_end":281,"column_start":5,"column_end":80}},{"value":"/ is modified/unauthentic)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":10351,"byte_end":10379,"line_start":282,"line_end":282,"column_start":5,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":68},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":10701,"byte_end":10715,"line_start":295,"line_end":295,"column_start":11,"column_end":25},"name":"AeadMutInPlace","qualname":"::AeadMutInPlace","value":"AeadMutInPlace: AeadCore","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":74}],"decl_id":null,"docs":" In-place stateful AEAD trait.","sig":null,"attributes":[{"value":"/ In-place stateful AEAD trait.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":10573,"byte_end":10606,"line_start":292,"line_end":292,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":10607,"byte_end":10610,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ This trait is both object safe and has no dependencies on `alloc` or `std`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":10611,"byte_end":10690,"line_start":294,"line_end":294,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":11205,"byte_end":11221,"line_start":305,"line_end":305,"column_start":8,"column_end":24},"name":"encrypt_in_place","qualname":"::AeadMutInPlace::encrypt_in_place","value":"pub fn encrypt_in_place<impl Buffer: Buffer>(&mut Self, &Nonce<Self>, &[u8],\n                                             &mut impl Buffer)\n-> Result<(), Error>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Encrypt the given buffer containing a plaintext message in-place.","sig":null,"attributes":[{"value":"/ Encrypt the given buffer containing a plaintext message in-place.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":10732,"byte_end":10801,"line_start":296,"line_end":296,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":10806,"byte_end":10809,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ The buffer must have sufficient capacity to store the ciphertext","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":10814,"byte_end":10882,"line_start":298,"line_end":298,"column_start":5,"column_end":73}},{"value":"/ message, which will always be larger than the original plaintext.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":10887,"byte_end":10956,"line_start":299,"line_end":299,"column_start":5,"column_end":74}},{"value":"/ The exact size needed is cipher-dependent, but generally includes","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":10961,"byte_end":11030,"line_start":300,"line_end":300,"column_start":5,"column_end":74}},{"value":"/ the size of an authentication tag.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":11035,"byte_end":11073,"line_start":301,"line_end":301,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":11078,"byte_end":11081,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the buffer has insufficient capacity to store the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":11086,"byte_end":11159,"line_start":303,"line_end":303,"column_start":5,"column_end":78}},{"value":"/ resulting ciphertext message.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":11164,"byte_end":11197,"line_start":304,"line_end":304,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":11606,"byte_end":11631,"line_start":317,"line_end":317,"column_start":8,"column_end":33},"name":"encrypt_in_place_detached","qualname":"::AeadMutInPlace::encrypt_in_place_detached","value":"pub fn encrypt_in_place_detached(&mut Self, &Nonce<Self>, &[u8], &mut [u8])\n-> Result<Tag<Self>, Error>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Encrypt the data in-place, returning the authentication tag\n","sig":null,"attributes":[{"value":"/ Encrypt the data in-place, returning the authentication tag","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":11535,"byte_end":11598,"line_start":316,"line_end":316,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":12045,"byte_end":12061,"line_start":329,"line_end":329,"column_start":8,"column_end":24},"name":"decrypt_in_place","qualname":"::AeadMutInPlace::decrypt_in_place","value":"pub fn decrypt_in_place<impl Buffer: Buffer>(&mut Self, &Nonce<Self>, &[u8],\n                                             &mut impl Buffer)\n-> Result<(), Error>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Decrypt the message in-place, returning an error in the event the\n provided authentication tag does not match the given ciphertext.","sig":null,"attributes":[{"value":"/ Decrypt the message in-place, returning an error in the event the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":11780,"byte_end":11849,"line_start":324,"line_end":324,"column_start":5,"column_end":74}},{"value":"/ provided authentication tag does not match the given ciphertext.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":11854,"byte_end":11922,"line_start":325,"line_end":325,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":11927,"byte_end":11930,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ The buffer will be truncated to the length of the original plaintext","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":11935,"byte_end":12007,"line_start":327,"line_end":327,"column_start":5,"column_end":77}},{"value":"/ message upon success.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":12012,"byte_end":12037,"line_start":328,"line_end":328,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":12482,"byte_end":12507,"line_start":341,"line_end":341,"column_start":8,"column_end":33},"name":"decrypt_in_place_detached","qualname":"::AeadMutInPlace::decrypt_in_place_detached","value":"pub fn decrypt_in_place_detached(&mut Self, &Nonce<Self>, &[u8], &mut [u8],\n                                 &Tag<Self>) -> Result<(), Error>","parent":{"krate":0,"index":68},"children":[],"decl_id":null,"docs":" Decrypt the data in-place, returning an error in the event the provided\n authentication tag does not match the given ciphertext (i.e. ciphertext\n is modified/unauthentic)\n","sig":null,"attributes":[{"value":"/ Decrypt the data in-place, returning an error in the event the provided","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":12286,"byte_end":12361,"line_start":338,"line_end":338,"column_start":5,"column_end":80}},{"value":"/ authentication tag does not match the given ciphertext (i.e. ciphertext","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":12366,"byte_end":12441,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ is modified/unauthentic)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":12446,"byte_end":12474,"line_start":340,"line_end":340,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":103},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":15923,"byte_end":15930,"line_start":449,"line_end":449,"column_start":12,"column_end":19},"name":"Payload","qualname":"::Payload","value":"Payload { msg, aad }","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107}],"decl_id":null,"docs":" AEAD payloads are a combination of a message (plaintext or ciphertext)\n and \"additional associated data\" (AAD) to be authenticated (in cleartext)\n along with the message.","sig":null,"attributes":[{"value":"/ AEAD payloads are a combination of a message (plaintext or ciphertext)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":15503,"byte_end":15577,"line_start":441,"line_end":441,"column_start":1,"column_end":75}},{"value":"/ and \"additional associated data\" (AAD) to be authenticated (in cleartext)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":15578,"byte_end":15655,"line_start":442,"line_end":442,"column_start":1,"column_end":78}},{"value":"/ along with the message.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":15656,"byte_end":15683,"line_start":443,"line_end":443,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":15684,"byte_end":15687,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ If you don't care about AAD, you can pass a `&[u8]` as the payload to","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":15688,"byte_end":15761,"line_start":445,"line_end":445,"column_start":1,"column_end":74}},{"value":"/ `encrypt`/`decrypt` and it will automatically be coerced to this type.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":15762,"byte_end":15836,"line_start":446,"line_end":446,"column_start":1,"column_end":75}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":15837,"byte_end":15862,"line_start":447,"line_end":447,"column_start":1,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":106},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":15995,"byte_end":15998,"line_start":451,"line_end":451,"column_start":9,"column_end":12},"name":"msg","qualname":"::Payload::msg","value":"&'msg [u8]","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" Message to be encrypted/decrypted\n","sig":null,"attributes":[{"value":"/ Message to be encrypted/decrypted","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":15949,"byte_end":15986,"line_start":450,"line_end":450,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":107},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":16284,"byte_end":16287,"line_start":457,"line_end":457,"column_start":9,"column_end":12},"name":"aad","qualname":"::Payload::aad","value":"&'aad [u8]","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" Optional \"additional associated data\" to authenticate along with\n this message. If AAD is provided at the time the message is encrypted,\n the same AAD *MUST* be provided at the time the message is decrypted,\n or decryption will fail.\n","sig":null,"attributes":[{"value":"/ Optional \"additional associated data\" to authenticate along with","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":16017,"byte_end":16085,"line_start":453,"line_end":453,"column_start":5,"column_end":73}},{"value":"/ this message. If AAD is provided at the time the message is encrypted,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":16090,"byte_end":16164,"line_start":454,"line_end":454,"column_start":5,"column_end":79}},{"value":"/ the same AAD *MUST* be provided at the time the message is decrypted,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":16169,"byte_end":16242,"line_start":455,"line_end":455,"column_start":5,"column_end":78}},{"value":"/ or decryption will fail.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":16247,"byte_end":16275,"line_start":456,"line_end":456,"column_start":5,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":112},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":16643,"byte_end":16649,"line_start":471,"line_end":471,"column_start":11,"column_end":17},"name":"Buffer","qualname":"::Buffer","value":"Buffer: AsRef<[u8]> + AsMut<[u8]>","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116}],"decl_id":null,"docs":" In-place encryption/decryption byte buffers.","sig":null,"attributes":[{"value":"/ In-place encryption/decryption byte buffers.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":16469,"byte_end":16517,"line_start":467,"line_end":467,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":16518,"byte_end":16521,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ This trait defines the set of methods needed to support in-place operations","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":16522,"byte_end":16601,"line_start":469,"line_end":469,"column_start":1,"column_end":80}},{"value":"/ on a `Vec`-like data type.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":16602,"byte_end":16632,"line_start":470,"line_end":470,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":16723,"byte_end":16726,"line_start":473,"line_end":473,"column_start":8,"column_end":11},"name":"len","qualname":"::Buffer::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" Get the length of the buffer\n","sig":null,"attributes":[{"value":"/ Get the length of the buffer","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":16683,"byte_end":16715,"line_start":472,"line_end":472,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":16816,"byte_end":16824,"line_start":478,"line_end":478,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::Buffer::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" Is the buffer empty?\n","sig":null,"attributes":[{"value":"/ Is the buffer empty?","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":16784,"byte_end":16808,"line_start":477,"line_end":477,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":16937,"byte_end":16954,"line_start":483,"line_end":483,"column_start":8,"column_end":25},"name":"extend_from_slice","qualname":"::Buffer::extend_from_slice","value":"pub fn extend_from_slice(&mut Self, &[u8]) -> Result<(), Error>","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" Extend this buffer from the given slice\n","sig":null,"attributes":[{"value":"/ Extend this buffer from the given slice","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":16886,"byte_end":16929,"line_start":482,"line_end":482,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":17057,"byte_end":17065,"line_start":486,"line_end":486,"column_start":8,"column_end":16},"name":"truncate","qualname":"::Buffer::truncate","value":"pub fn truncate(&mut Self, usize)","parent":{"krate":0,"index":112},"children":[],"decl_id":null,"docs":" Truncate this buffer to the given size\n","sig":null,"attributes":[{"value":"/ Truncate this buffer to the given size","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":17007,"byte_end":17049,"line_start":485,"line_end":485,"column_start":5,"column_end":47}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":2055,"byte_end":2060,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":12730,"byte_end":12733,"line_start":351,"line_end":351,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":13568,"byte_end":13571,"line_start":377,"line_end":377,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":14392,"byte_end":14395,"line_start":402,"line_end":402,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":16368,"byte_end":16375,"line_start":461,"line_end":461,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":17135,"byte_end":17138,"line_start":490,"line_end":490,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":2055,"byte_end":2060,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":120},"to":{"krate":1,"index":8812}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":4504,"byte_end":4512,"line_start":134,"line_end":134,"column_start":17,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":40},"to":{"krate":0,"index":44}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":6878,"byte_end":6886,"line_start":191,"line_end":191,"column_start":20,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":40},"to":{"krate":0,"index":53}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":8633,"byte_end":8641,"line_start":237,"line_end":237,"column_start":24,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":40},"to":{"krate":0,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":10717,"byte_end":10725,"line_start":295,"line_end":295,"column_start":27,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":40},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":12730,"byte_end":12733,"line_start":351,"line_end":351,"column_start":33,"column_end":36},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":76},"to":{"krate":0,"index":44}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":13568,"byte_end":13571,"line_start":377,"line_end":377,"column_start":39,"column_end":42},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":86},"to":{"krate":0,"index":53}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":14392,"byte_end":14395,"line_start":402,"line_end":402,"column_start":43,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":96},"to":{"krate":0,"index":68}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":16368,"byte_end":16375,"line_start":461,"line_end":461,"column_start":39,"column_end":46},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":103},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":16651,"byte_end":16656,"line_start":471,"line_end":471,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":2729},"to":{"krate":0,"index":112}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":16665,"byte_end":16670,"line_start":471,"line_end":471,"column_start":33,"column_end":38},"kind":"SuperTrait","from":{"krate":1,"index":2732},"to":{"krate":0,"index":112}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/aead-0.4.1/src/lib.rs","byte_start":17135,"byte_end":17138,"line_start":490,"line_end":490,"column_start":17,"column_end":20},"kind":{"Impl":{"id":5}},"from":{"krate":4,"index":6772},"to":{"krate":0,"index":112}}]}