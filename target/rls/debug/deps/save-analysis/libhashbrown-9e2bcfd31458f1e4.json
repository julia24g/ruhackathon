{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1","program":"/Users/julia/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","hashbrown","--edition=2018","/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"ahash\"","--cfg","feature=\"default\"","--cfg","feature=\"inline-more\"","--cfg","feature=\"raw\"","--cfg","feature=\"serde\"","-C","metadata=9e2bcfd31458f1e4","-C","extra-filename=-9e2bcfd31458f1e4","--out-dir","/Users/julia/ruhackathon/target/rls/debug/deps","-L","dependency=/Users/julia/ruhackathon/target/rls/debug/deps","--extern","ahash=/Users/julia/ruhackathon/target/rls/debug/deps/libahash-a4c68fd9987145df.rmeta","--extern","serde=/Users/julia/ruhackathon/target/rls/debug/deps/libserde-1bbb4d2b7f9835db.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/julia/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/julia/ruhackathon/target/rls/debug/deps/libhashbrown-9e2bcfd31458f1e4.rmeta"},"prelude":{"crate_id":{"name":"hashbrown","disambiguator":[10708756868156442717,10188667189378065869]},"crate_root":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src","external_crates":[{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[17161976177339802527,9637120080719870273]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[12784072134307519025,4657485898025748013]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[8860544973196061204,9932137894390183628]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[15484098214765895148,4360652648143560453]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","num":5,"id":{"name":"serde","disambiguator":[2726377709381676525,16760329664613376637]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","num":6,"id":{"name":"std","disambiguator":[14497711731351875891,7574154950596153320]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","num":7,"id":{"name":"libc","disambiguator":[13802683045354889200,17279120461159080731]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","num":8,"id":{"name":"unwind","disambiguator":[13733846401634403672,16568137600355934567]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","num":9,"id":{"name":"cfg_if","disambiguator":[5926527291982439463,7261863668131194074]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","num":10,"id":{"name":"hashbrown","disambiguator":[2147386378482378397,1448349958257004752]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8504510625746843556,11549570195915831773]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[1145582961014725186,16562354883654090131]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","num":13,"id":{"name":"std_detect","disambiguator":[6582153069738696943,14519107576634371424]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","num":14,"id":{"name":"addr2line","disambiguator":[15498041504304623936,9266600846380482125]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","num":15,"id":{"name":"gimli","disambiguator":[12608136573466536856,1503974727608604885]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","num":16,"id":{"name":"object","disambiguator":[16755883997827362908,2889333423780235391]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[3009561993154964965,13259943199418826037]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","num":18,"id":{"name":"serde_derive","disambiguator":[2110390725466229322,3416891245191794241]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","num":19,"id":{"name":"ahash","disambiguator":[5841638496724478472,3645065012136147003]}}],"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":0,"byte_end":3193,"line_start":1,"line_end":112,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":1401,"byte_end":1402,"line_start":48,"line_end":48,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"Bucket, RawDrain, RawIter, RawIntoIter, RawTable","parent":{"krate":0,"index":8}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":1793,"byte_end":1794,"line_start":67,"line_end":67,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"HashMap","parent":{"krate":0,"index":1657}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":2348,"byte_end":2349,"line_start":84,"line_end":84,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"HashSet","parent":{"krate":0,"index":1659}},{"kind":"Use","ref_id":{"krate":0,"index":560},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":2731,"byte_end":2738,"line_start":97,"line_end":97,"column_start":21,"column_end":28},"alias_span":null,"name":"HashMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1329},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":2760,"byte_end":2767,"line_start":98,"line_end":98,"column_start":21,"column_end":28},"alias_span":null,"name":"HashSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":0,"byte_end":3193,"line_start":1,"line_end":112,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":349},{"krate":0,"index":503},{"krate":0,"index":1235},{"krate":0,"index":1264},{"krate":0,"index":1657},{"krate":0,"index":1659},{"krate":0,"index":1661},{"krate":0,"index":1664},{"krate":0,"index":1727},{"krate":0,"index":1732},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1741}],"decl_id":null,"docs":" This crate is a Rust port of Google's high-performance [SwissTable] hash\n map, adapted to make it a drop-in replacement for Rust's standard `HashMap`\n and `HashSet` types.","sig":null,"attributes":[{"value":"/ This crate is a Rust port of Google's high-performance [SwissTable] hash","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":0,"byte_end":76,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ map, adapted to make it a drop-in replacement for Rust's standard `HashMap`","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":77,"byte_end":156,"line_start":2,"line_end":2,"column_start":1,"column_end":80}},{"value":"/ and `HashSet` types.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":157,"byte_end":181,"line_start":3,"line_end":3,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":182,"byte_end":185,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The original C++ version of [SwissTable] can be found [here], and this","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":186,"byte_end":260,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ [CppCon talk] gives an overview of how the algorithm works.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":261,"byte_end":324,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":325,"byte_end":328,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [SwissTable]: https://abseil.io/blog/20180927-swisstables","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":329,"byte_end":390,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/ [here]: https://github.com/abseil/abseil-cpp/blob/master/absl/container/internal/raw_hash_set.h","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":391,"byte_end":490,"line_start":9,"line_end":9,"column_start":1,"column_end":100}},{"value":"/ [CppCon talk]: https://www.youtube.com/watch?v=ncHmEUmJZf4","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":491,"byte_end":553,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"no_std","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":555,"byte_end":565,"line_start":12,"line_end":12,"column_start":1,"column_end":11}},{"value":"allow(clippy :: doc_markdown, clippy :: module_name_repetitions, clippy ::\n        must_use_candidate, clippy :: option_if_let_else)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":691,"byte_end":829,"line_start":17,"line_end":22,"column_start":1,"column_end":3}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":830,"byte_end":852,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":853,"byte_end":879,"line_start":24,"line_end":24,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":1229,"byte_end":1232,"line_start":43,"line_end":43,"column_start":9,"column_end":12},"name":"raw","qualname":"::raw","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":348}],"decl_id":null,"docs":" Experimental and unsafe `RawTable` API. This module is only available if the\n `raw` feature is enabled.\n","sig":null,"attributes":[{"value":"cfg(feature = \"raw\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":1086,"byte_end":1109,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/ Experimental and unsafe `RawTable` API. This module is only available if the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":1110,"byte_end":1190,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/ `raw` feature is enabled.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":1191,"byte_end":1220,"line_start":42,"line_end":42,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":112},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":14673,"byte_end":14679,"line_start":272,"line_end":272,"column_start":12,"column_end":18},"name":"Bucket","qualname":"::raw::inner::Bucket","value":"Bucket {  }","parent":null,"children":[{"krate":0,"index":114}],"decl_id":null,"docs":" A reference to a hash table bucket containing a `T`.","sig":null,"attributes":[{"value":"/ A reference to a hash table bucket containing a `T`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":14410,"byte_end":14466,"line_start":267,"line_end":267,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":14467,"byte_end":14470,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ This is usually just a pointer to the element itself. However if the element","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":14471,"byte_end":14551,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"/ is a ZST, then we instead track the index of the element in the table so","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":14552,"byte_end":14628,"line_start":270,"line_end":270,"column_start":1,"column_end":77}},{"value":"/ that `erase` works properly.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":14629,"byte_end":14661,"line_start":271,"line_end":271,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":16039,"byte_end":16045,"line_start":313,"line_end":313,"column_start":19,"column_end":25},"name":"as_ptr","qualname":"<Bucket<T>>::as_ptr","value":"pub unsafe fn as_ptr(&Self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":16012,"byte_end":16018,"line_start":312,"line_end":312,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":16718,"byte_end":16722,"line_start":333,"line_end":333,"column_start":19,"column_end":23},"name":"drop","qualname":"<Bucket<T>>::drop","value":"pub unsafe fn drop(&Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":16691,"byte_end":16697,"line_start":332,"line_end":332,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":16844,"byte_end":16848,"line_start":337,"line_end":337,"column_start":19,"column_end":23},"name":"read","qualname":"<Bucket<T>>::read","value":"pub unsafe fn read(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":16817,"byte_end":16823,"line_start":336,"line_end":336,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":16965,"byte_end":16970,"line_start":341,"line_end":341,"column_start":19,"column_end":24},"name":"write","qualname":"<Bucket<T>>::write","value":"pub unsafe fn write(&Self, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":16938,"byte_end":16944,"line_start":340,"line_end":340,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":17095,"byte_end":17101,"line_start":345,"line_end":345,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Bucket<T>>::as_ref","value":"pub unsafe fn as_ref<'a>(&Self) -> &'a T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":17068,"byte_end":17074,"line_start":344,"line_end":344,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":17221,"byte_end":17227,"line_start":349,"line_end":349,"column_start":19,"column_end":25},"name":"as_mut","qualname":"<Bucket<T>>::as_mut","value":"pub unsafe fn as_mut<'a>(&Self) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":17194,"byte_end":17200,"line_start":348,"line_end":348,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":17355,"byte_end":17379,"line_start":353,"line_end":353,"column_start":19,"column_end":43},"name":"copy_from_nonoverlapping","qualname":"<Bucket<T>>::copy_from_nonoverlapping","value":"pub unsafe fn copy_from_nonoverlapping(&Self, &Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":17328,"byte_end":17334,"line_start":352,"line_end":352,"column_start":41,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":134},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":17531,"byte_end":17539,"line_start":359,"line_end":359,"column_start":12,"column_end":20},"name":"RawTable","qualname":"::raw::inner::RawTable","value":"RawTable {  }","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"decl_id":null,"docs":" A raw hash table with an unsafe API.\n","sig":null,"attributes":[{"value":"/ A raw hash table with an unsafe API.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":17479,"byte_end":17519,"line_start":358,"line_end":358,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":18483,"byte_end":18486,"line_start":385,"line_end":385,"column_start":18,"column_end":21},"name":"new","qualname":"<RawTable<T>>::new","value":"pub const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty hash table without allocating any memory.","sig":null,"attributes":[{"value":"/ Creates a new empty hash table without allocating any memory.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":18107,"byte_end":18172,"line_start":379,"line_end":379,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":18177,"byte_end":18180,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ In effect this returns a table with exactly 1 bucket. However we can","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":18185,"byte_end":18257,"line_start":381,"line_end":381,"column_start":5,"column_end":77}},{"value":"/ leave the data pointer dangling since that bucket is never written to","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":18262,"byte_end":18335,"line_start":382,"line_end":382,"column_start":5,"column_end":78}},{"value":"/ due to our load factor forcing us to always have at least 1 free bucket.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":18340,"byte_end":18416,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":18457,"byte_end":18463,"line_start":384,"line_end":384,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":20909,"byte_end":20926,"line_start":451,"line_end":451,"column_start":12,"column_end":29},"name":"try_with_capacity","qualname":"<RawTable<T>>::try_with_capacity","value":"pub fn try_with_capacity(usize) -> Result<Self, TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to allocate a new hash table with at least enough capacity\n for inserting the given number of elements without reallocating.\n","sig":null,"attributes":[{"value":"/ Attempts to allocate a new hash table with at least enough capacity","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":20725,"byte_end":20796,"line_start":448,"line_end":448,"column_start":5,"column_end":76}},{"value":"/ for inserting the given number of elements without reallocating.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":20801,"byte_end":20869,"line_start":449,"line_end":449,"column_start":5,"column_end":73}},{"value":"cfg(feature = \"raw\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":20874,"byte_end":20897,"line_start":450,"line_end":450,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":21205,"byte_end":21218,"line_start":457,"line_end":457,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<RawTable<T>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allocates a new hash table with at least enough capacity for inserting\n the given number of elements without reallocating.\n","sig":null,"attributes":[{"value":"/ Allocates a new hash table with at least enough capacity for inserting","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":21060,"byte_end":21134,"line_start":455,"line_end":455,"column_start":5,"column_end":79}},{"value":"/ the given number of elements without reallocating.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":21139,"byte_end":21193,"line_start":456,"line_end":456,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":22106,"byte_end":22114,"line_start":478,"line_end":478,"column_start":19,"column_end":27},"name":"data_end","qualname":"<RawTable<T>>::data_end","value":"pub unsafe fn data_end(&Self) -> NonNull<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns pointer to one past last element of data table.\n","sig":null,"attributes":[{"value":"/ Returns pointer to one past last element of data table.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":21979,"byte_end":22038,"line_start":476,"line_end":476,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":22079,"byte_end":22085,"line_start":477,"line_end":477,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":22574,"byte_end":22586,"line_start":491,"line_end":491,"column_start":19,"column_end":31},"name":"bucket_index","qualname":"<RawTable<T>>::bucket_index","value":"pub unsafe fn bucket_index(&Self, &Bucket<T>) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of a bucket from a `Bucket`.\n","sig":null,"attributes":[{"value":"/ Returns the index of a bucket from a `Bucket`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":22456,"byte_end":22506,"line_start":489,"line_end":489,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":22547,"byte_end":22553,"line_start":490,"line_end":490,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":23045,"byte_end":23051,"line_start":504,"line_end":504,"column_start":19,"column_end":25},"name":"bucket","qualname":"<RawTable<T>>::bucket","value":"pub unsafe fn bucket(&Self, usize) -> Bucket<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to an element in the table.\n","sig":null,"attributes":[{"value":"/ Returns a pointer to an element in the table.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":22928,"byte_end":22977,"line_start":502,"line_end":502,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":23018,"byte_end":23024,"line_start":503,"line_end":503,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":23447,"byte_end":23460,"line_start":513,"line_end":513,"column_start":19,"column_end":32},"name":"erase_no_drop","qualname":"<RawTable<T>>::erase_no_drop","value":"pub unsafe fn erase_no_drop(&mut Self, &Bucket<T>)","parent":null,"children":[],"decl_id":null,"docs":" Erases an element from the table without dropping it.\n","sig":null,"attributes":[{"value":"/ Erases an element from the table without dropping it.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":23249,"byte_end":23306,"line_start":510,"line_end":510,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":23347,"byte_end":23353,"line_start":511,"line_end":511,"column_start":41,"column_end":47}},{"value":"deprecated(since = \"0.8.1\", note = \"use erase or remove instead\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":23360,"byte_end":23428,"line_start":512,"line_end":512,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":24790,"byte_end":24795,"line_start":542,"line_end":542,"column_start":19,"column_end":24},"name":"erase","qualname":"<RawTable<T>>::erase","value":"pub unsafe fn erase(&mut Self, Bucket<T>)","parent":null,"children":[],"decl_id":null,"docs":" Erases an element from the table, dropping it in place.\n","sig":null,"attributes":[{"value":"/ Erases an element from the table, dropping it in place.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":24593,"byte_end":24652,"line_start":538,"line_end":538,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":24693,"byte_end":24699,"line_start":539,"line_end":539,"column_start":41,"column_end":47}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":24706,"byte_end":24746,"line_start":540,"line_end":540,"column_start":5,"column_end":45}},{"value":"allow(deprecated)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":24751,"byte_end":24771,"line_start":541,"line_end":541,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":25171,"byte_end":25182,"line_start":552,"line_end":552,"column_start":12,"column_end":23},"name":"erase_entry","qualname":"<RawTable<T>>::erase_entry","value":"pub fn erase_entry<impl FnMut(&T) -> bool: FnMut(&T) ->\n                   bool>(&mut Self, u64, impl FnMut(&T) -> bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Finds and erases an element from the table, dropping it in place.\n Returns true if an element was found.\n","sig":null,"attributes":[{"value":"/ Finds and erases an element from the table, dropping it in place.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":24967,"byte_end":25036,"line_start":548,"line_end":548,"column_start":5,"column_end":74}},{"value":"/ Returns true if an element was found.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":25041,"byte_end":25082,"line_start":549,"line_end":549,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"raw\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":25087,"byte_end":25110,"line_start":550,"line_end":550,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":25151,"byte_end":25157,"line_start":551,"line_end":551,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":25659,"byte_end":25665,"line_start":566,"line_end":566,"column_start":19,"column_end":25},"name":"remove","qualname":"<RawTable<T>>::remove","value":"pub unsafe fn remove(&mut Self, Bucket<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Removes an element from the table, returning it.\n","sig":null,"attributes":[{"value":"/ Removes an element from the table, returning it.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":25469,"byte_end":25521,"line_start":562,"line_end":562,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":25562,"byte_end":25568,"line_start":563,"line_end":563,"column_start":41,"column_end":47}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":25575,"byte_end":25615,"line_start":564,"line_end":564,"column_start":5,"column_end":45}},{"value":"allow(deprecated)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":25620,"byte_end":25640,"line_start":565,"line_end":565,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":25890,"byte_end":25902,"line_start":573,"line_end":573,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<RawTable<T>>::remove_entry","value":"pub fn remove_entry<impl FnMut(&T) -> bool: FnMut(&T) ->\n                    bool>(&mut Self, u64, impl FnMut(&T) -> bool) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Finds and removes an element from the table, returning it.\n","sig":null,"attributes":[{"value":"/ Finds and removes an element from the table, returning it.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":25767,"byte_end":25829,"line_start":571,"line_end":571,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":25870,"byte_end":25876,"line_start":572,"line_end":572,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":29966,"byte_end":29979,"line_start":663,"line_end":663,"column_start":12,"column_end":25},"name":"clear_no_drop","qualname":"<RawTable<T>>::clear_no_drop","value":"pub fn clear_no_drop(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Marks all table buckets as empty without dropping their contents.\n","sig":null,"attributes":[{"value":"/ Marks all table buckets as empty without dropping their contents.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":29836,"byte_end":29905,"line_start":661,"line_end":661,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":29946,"byte_end":29952,"line_start":662,"line_end":662,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":30391,"byte_end":30396,"line_start":675,"line_end":675,"column_start":12,"column_end":17},"name":"clear","qualname":"<RawTable<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all elements from the table without freeing the backing memory.\n","sig":null,"attributes":[{"value":"/ Removes all elements from the table without freeing the backing memory.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":30255,"byte_end":30330,"line_start":673,"line_end":673,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":30371,"byte_end":30377,"line_start":674,"line_end":674,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":30881,"byte_end":30890,"line_start":690,"line_end":690,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<RawTable<T>>::shrink_to","value":"pub fn shrink_to<impl Fn(&T) -> u64: Fn(&T) ->\n                 u64>(&mut Self, usize, impl Fn(&T) -> u64)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the table to fit `max(self.len(), min_size)` elements.\n","sig":null,"attributes":[{"value":"/ Shrinks the table to fit `max(self.len(), min_size)` elements.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":30754,"byte_end":30820,"line_start":688,"line_end":688,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":30861,"byte_end":30867,"line_start":689,"line_end":689,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":32349,"byte_end":32356,"line_start":728,"line_end":728,"column_start":12,"column_end":19},"name":"reserve","qualname":"<RawTable<T>>::reserve","value":"pub fn reserve<impl Fn(&T) -> u64: Fn(&T) ->\n               u64>(&mut Self, usize, impl Fn(&T) -> u64)","parent":null,"children":[],"decl_id":null,"docs":" Ensures that at least `additional` items can be inserted into the table\n without reallocation.\n","sig":null,"attributes":[{"value":"/ Ensures that at least `additional` items can be inserted into the table","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":32183,"byte_end":32258,"line_start":725,"line_end":725,"column_start":5,"column_end":80}},{"value":"/ without reallocation.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":32263,"byte_end":32288,"line_start":726,"line_end":726,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":32329,"byte_end":32335,"line_start":727,"line_end":727,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":32936,"byte_end":32947,"line_start":743,"line_end":743,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<RawTable<T>>::try_reserve","value":"pub fn try_reserve<impl Fn(&T) -> u64: Fn(&T) ->\n                   u64>(&mut Self, usize, impl Fn(&T) -> u64)\n-> Result<(), TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to ensure that at least `additional` items can be inserted into\n the table without reallocation.\n","sig":null,"attributes":[{"value":"/ Tries to ensure that at least `additional` items can be inserted into","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":32762,"byte_end":32835,"line_start":740,"line_end":740,"column_start":5,"column_end":78}},{"value":"/ the table without reallocation.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":32840,"byte_end":32875,"line_start":741,"line_end":741,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":32916,"byte_end":32922,"line_start":742,"line_end":742,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":41401,"byte_end":41407,"line_start":941,"line_end":941,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawTable<T>>::insert","value":"pub fn insert<impl Fn(&T) -> u64: Fn(&T) ->\n              u64>(&mut Self, u64, T, impl Fn(&T) -> u64) -> Bucket<T>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element into the table, and returns its raw bucket.","sig":null,"attributes":[{"value":"/ Inserts a new element into the table, and returns its raw bucket.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":41185,"byte_end":41254,"line_start":937,"line_end":937,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":41259,"byte_end":41262,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ This does not check if the given element already exists in the table.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":41267,"byte_end":41340,"line_start":939,"line_end":939,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":41381,"byte_end":41387,"line_start":940,"line_end":940,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":42498,"byte_end":42510,"line_start":967,"line_end":967,"column_start":12,"column_end":24},"name":"insert_entry","qualname":"<RawTable<T>>::insert_entry","value":"pub fn insert_entry<impl Fn(&T) -> u64: Fn(&T) ->\n                    u64>(&mut Self, u64, T, impl Fn(&T) -> u64) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element into the table, and returns a mutable reference to it.","sig":null,"attributes":[{"value":"/ Inserts a new element into the table, and returns a mutable reference to it.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":42271,"byte_end":42351,"line_start":963,"line_end":963,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":42356,"byte_end":42359,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ This does not check if the given element already exists in the table.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":42364,"byte_end":42437,"line_start":965,"line_end":965,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":42478,"byte_end":42484,"line_start":966,"line_end":966,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":43018,"byte_end":43032,"line_start":978,"line_end":978,"column_start":12,"column_end":26},"name":"insert_no_grow","qualname":"<RawTable<T>>::insert_no_grow","value":"pub fn insert_no_grow(&mut Self, u64, T) -> Bucket<T>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element into the table, without growing the table.","sig":null,"attributes":[{"value":"/ Inserts a new element into the table, without growing the table.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":42655,"byte_end":42723,"line_start":971,"line_end":971,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":42728,"byte_end":42731,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ There must be enough space in the table to insert the new element.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":42736,"byte_end":42806,"line_start":973,"line_end":973,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":42811,"byte_end":42814,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ This does not check if the given element already exists in the table.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":42819,"byte_end":42892,"line_start":975,"line_end":975,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":42933,"byte_end":42939,"line_start":976,"line_end":976,"column_start":41,"column_end":47}},{"value":"cfg(any(feature = \"raw\", feature = \"rustc-internal-api\"))","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":42946,"byte_end":43006,"line_start":977,"line_end":977,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":43941,"byte_end":43960,"line_start":1002,"line_end":1002,"column_start":19,"column_end":38},"name":"replace_bucket_with","qualname":"<RawTable<T>>::replace_bucket_with","value":"pub unsafe fn replace_bucket_with<F>(&mut Self, Bucket<T>, F) -> bool where\nF: FnOnce(T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Temporary removes a bucket, applying the given function to the removed\n element and optionally put back the returned value in the same bucket.","sig":null,"attributes":[{"value":"/ Temporary removes a bucket, applying the given function to the removed","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":43571,"byte_end":43645,"line_start":995,"line_end":995,"column_start":5,"column_end":79}},{"value":"/ element and optionally put back the returned value in the same bucket.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":43650,"byte_end":43724,"line_start":996,"line_end":996,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":43729,"byte_end":43732,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if the bucket still contains an element","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":43737,"byte_end":43795,"line_start":998,"line_end":998,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":43800,"byte_end":43803,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ This does not check if the given bucket is actually occupied.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":43808,"byte_end":43873,"line_start":1000,"line_end":1000,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":43914,"byte_end":43920,"line_start":1001,"line_end":1001,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":44630,"byte_end":44634,"line_start":1024,"line_end":1024,"column_start":12,"column_end":16},"name":"find","qualname":"<RawTable<T>>::find","value":"pub fn find<impl FnMut(&T) -> bool: FnMut(&T) ->\n            bool>(&Self, u64, impl FnMut(&T) -> bool) -> Option<Bucket<T>>","parent":null,"children":[],"decl_id":null,"docs":" Searches for an element in the table.\n","sig":null,"attributes":[{"value":"/ Searches for an element in the table.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":44563,"byte_end":44604,"line_start":1022,"line_end":1022,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":44609,"byte_end":44618,"line_start":1023,"line_end":1023,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":45039,"byte_end":45042,"line_start":1038,"line_end":1038,"column_start":12,"column_end":15},"name":"get","qualname":"<RawTable<T>>::get","value":"pub fn get<impl FnMut(&T) -> bool: FnMut(&T) ->\n           bool>(&Self, u64, impl FnMut(&T) -> bool) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to an element in the table.\n","sig":null,"attributes":[{"value":"/ Gets a reference to an element in the table.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":44965,"byte_end":45013,"line_start":1036,"line_end":1036,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":45018,"byte_end":45027,"line_start":1037,"line_end":1037,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":45390,"byte_end":45397,"line_start":1048,"line_end":1048,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RawTable<T>>::get_mut","value":"pub fn get_mut<impl FnMut(&T) -> bool: FnMut(&T) ->\n               bool>(&mut Self, u64, impl FnMut(&T) -> bool) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to an element in the table.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to an element in the table.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":45308,"byte_end":45364,"line_start":1046,"line_end":1046,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":45369,"byte_end":45378,"line_start":1047,"line_end":1047,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":45954,"byte_end":45962,"line_start":1061,"line_end":1061,"column_start":12,"column_end":20},"name":"capacity","qualname":"<RawTable<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the map can hold without reallocating.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":45671,"byte_end":45744,"line_start":1056,"line_end":1056,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":45749,"byte_end":45752,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the table might be able to hold","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":45757,"byte_end":45822,"line_start":1058,"line_end":1058,"column_start":5,"column_end":70}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":45827,"byte_end":45893,"line_start":1059,"line_end":1059,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":45934,"byte_end":45940,"line_start":1060,"line_end":1060,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":46139,"byte_end":46142,"line_start":1067,"line_end":1067,"column_start":12,"column_end":15},"name":"len","qualname":"<RawTable<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the table.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the table.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":46030,"byte_end":46078,"line_start":1065,"line_end":1065,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":46119,"byte_end":46125,"line_start":1066,"line_end":1066,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":46299,"byte_end":46306,"line_start":1073,"line_end":1073,"column_start":12,"column_end":19},"name":"buckets","qualname":"<RawTable<T>>::buckets","value":"pub fn buckets(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of buckets in the table.\n","sig":null,"attributes":[{"value":"/ Returns the number of buckets in the table.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":46191,"byte_end":46238,"line_start":1071,"line_end":1071,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":46279,"byte_end":46285,"line_start":1072,"line_end":1072,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47127,"byte_end":47131,"line_start":1095,"line_end":1095,"column_start":19,"column_end":23},"name":"iter","qualname":"<RawTable<T>>::iter","value":"pub unsafe fn iter(&Self) -> RawIter<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over every element in the table. It is up to\n the caller to ensure that the `RawTable` outlives the `RawIter`.\n Because we cannot make the `next` method unsafe on the `RawIter`\n struct, we have to make the `iter` method unsafe.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over every element in the table. It is up to","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":46787,"byte_end":46855,"line_start":1090,"line_end":1090,"column_start":5,"column_end":73}},{"value":"/ the caller to ensure that the `RawTable` outlives the `RawIter`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":46860,"byte_end":46928,"line_start":1091,"line_end":1091,"column_start":5,"column_end":73}},{"value":"/ Because we cannot make the `next` method unsafe on the `RawIter`","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":46933,"byte_end":47001,"line_start":1092,"line_end":1092,"column_start":5,"column_end":73}},{"value":"/ struct, we have to make the `iter` method unsafe.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47006,"byte_end":47059,"line_start":1093,"line_end":1093,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47100,"byte_end":47106,"line_start":1094,"line_end":1094,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47836,"byte_end":47845,"line_start":1111,"line_end":1111,"column_start":19,"column_end":28},"name":"iter_hash","qualname":"<RawTable<T>>::iter_hash","value":"pub unsafe fn iter_hash(&Self, u64) -> RawIterHash<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over occupied buckets that could match a given hash.","sig":null,"attributes":[{"value":"/ Returns an iterator over occupied buckets that could match a given hash.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47368,"byte_end":47444,"line_start":1103,"line_end":1103,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47449,"byte_end":47452,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ In rare cases, the iterator may return a bucket with a different hash.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47457,"byte_end":47531,"line_start":1105,"line_end":1105,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47536,"byte_end":47539,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ It is up to the caller to ensure that the `RawTable` outlives the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47544,"byte_end":47613,"line_start":1107,"line_end":1107,"column_start":5,"column_end":74}},{"value":"/ `RawIterHash`. Because we cannot make the `next` method unsafe on the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47618,"byte_end":47691,"line_start":1108,"line_end":1108,"column_start":5,"column_end":78}},{"value":"/ `RawIterHash` struct, we have to make the `iter_hash` method unsafe.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47696,"byte_end":47768,"line_start":1109,"line_end":1109,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47809,"byte_end":47815,"line_start":1110,"line_end":1110,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48098,"byte_end":48103,"line_start":1118,"line_end":1118,"column_start":12,"column_end":17},"name":"drain","qualname":"<RawTable<T>>::drain","value":"pub fn drain(&mut Self) -> RawDrain<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator which removes all elements from the table without\n freeing the memory.\n","sig":null,"attributes":[{"value":"/ Returns an iterator which removes all elements from the table without","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47936,"byte_end":48009,"line_start":1115,"line_end":1115,"column_start":5,"column_end":78}},{"value":"/ freeing the memory.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48014,"byte_end":48037,"line_start":1116,"line_end":1116,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48078,"byte_end":48084,"line_start":1117,"line_end":1117,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48647,"byte_end":48662,"line_start":1133,"line_end":1133,"column_start":19,"column_end":34},"name":"drain_iter_from","qualname":"<RawTable<T>>::drain_iter_from","value":"pub unsafe fn drain_iter_from(&mut Self, RawIter<T>) -> RawDrain<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator which removes all elements from the table without\n freeing the memory.","sig":null,"attributes":[{"value":"/ Returns an iterator which removes all elements from the table without","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48249,"byte_end":48322,"line_start":1125,"line_end":1125,"column_start":5,"column_end":78}},{"value":"/ freeing the memory.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48327,"byte_end":48350,"line_start":1126,"line_end":1126,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48355,"byte_end":48358,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ Iteration starts at the provided iterator's current location.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48363,"byte_end":48428,"line_start":1128,"line_end":1128,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48433,"byte_end":48436,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ It is up to the caller to ensure that the iterator is valid for this","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48441,"byte_end":48513,"line_start":1130,"line_end":1130,"column_start":5,"column_end":77}},{"value":"/ `RawTable` and covers all items that remain in the table.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48518,"byte_end":48579,"line_start":1131,"line_end":1131,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48620,"byte_end":48626,"line_start":1132,"line_end":1132,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":49285,"byte_end":49299,"line_start":1149,"line_end":1149,"column_start":19,"column_end":33},"name":"into_iter_from","qualname":"<RawTable<T>>::into_iter_from","value":"pub unsafe fn into_iter_from(Self, RawIter<T>) -> RawIntoIter<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator which consumes all elements from the table.","sig":null,"attributes":[{"value":"/ Returns an iterator which consumes all elements from the table.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48970,"byte_end":49037,"line_start":1143,"line_end":1143,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":49042,"byte_end":49045,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ Iteration starts at the provided iterator's current location.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":49050,"byte_end":49115,"line_start":1145,"line_end":1145,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":49120,"byte_end":49123,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ It is up to the caller to ensure that the iterator is valid for this","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":49128,"byte_end":49200,"line_start":1147,"line_end":1147,"column_start":5,"column_end":77}},{"value":"/ `RawTable` and covers all items that remain in the table.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":49205,"byte_end":49266,"line_start":1148,"line_end":1148,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":55449,"byte_end":55471,"line_start":1319,"line_end":1319,"column_start":12,"column_end":34},"name":"clone_from_with_hasher","qualname":"<RawTable<T>>::clone_from_with_hasher","value":"pub fn clone_from_with_hasher<impl Fn(&T) -> u64: Fn(&T) ->\n                              u64>(&mut Self, &Self, impl Fn(&T) -> u64)","parent":null,"children":[],"decl_id":null,"docs":" Variant of `clone_from` to use when a hasher is available.\n","sig":null,"attributes":[{"value":"/ Variant of `clone_from` to use when a hasher is available.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":55347,"byte_end":55409,"line_start":1317,"line_end":1317,"column_start":5,"column_end":67}},{"value":"cfg(feature = \"raw\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":55414,"byte_end":55437,"line_start":1318,"line_end":1318,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":259},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64499,"byte_end":64506,"line_start":1563,"line_end":1563,"column_start":12,"column_end":19},"name":"RawIter","qualname":"::raw::inner::RawIter","value":"RawIter {  }","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262}],"decl_id":null,"docs":" Iterator which returns a raw pointer to every full bucket in the table.","sig":null,"attributes":[{"value":"/ Iterator which returns a raw pointer to every full bucket in the table.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":63692,"byte_end":63767,"line_start":1551,"line_end":1551,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":63768,"byte_end":63771,"line_start":1552,"line_end":1552,"column_start":1,"column_end":4}},{"value":"/ For maximum flexibility this iterator is not bound by a lifetime, but you","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":63772,"byte_end":63849,"line_start":1553,"line_end":1553,"column_start":1,"column_end":78}},{"value":"/ must observe several rules when using it:","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":63850,"byte_end":63895,"line_start":1554,"line_end":1554,"column_start":1,"column_end":46}},{"value":"/ - You must not free the hash table while iterating (including via growing/shrinking).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":63896,"byte_end":63985,"line_start":1555,"line_end":1555,"column_start":1,"column_end":90}},{"value":"/ - It is fine to erase a bucket that has been yielded by the iterator.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":63986,"byte_end":64059,"line_start":1556,"line_end":1556,"column_start":1,"column_end":74}},{"value":"/ - Erasing a bucket that has not yet been yielded by the iterator may still","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64060,"byte_end":64138,"line_start":1557,"line_end":1557,"column_start":1,"column_end":79}},{"value":"/   result in the iterator yielding that bucket (unless `reflect_remove` is called).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64139,"byte_end":64225,"line_start":1558,"line_end":1558,"column_start":1,"column_end":87}},{"value":"/ - It is unspecified whether an element inserted after the iterator was","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64226,"byte_end":64300,"line_start":1559,"line_end":1559,"column_start":1,"column_end":75}},{"value":"/   created will be yielded by that iterator (unless `reflect_insert` is called).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64301,"byte_end":64384,"line_start":1560,"line_end":1560,"column_start":1,"column_end":84}},{"value":"/ - The order in which the iterator yields bucket is unspecified and may","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64385,"byte_end":64459,"line_start":1561,"line_end":1561,"column_start":1,"column_end":75}},{"value":"/   change in the future.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64460,"byte_end":64487,"line_start":1562,"line_end":1562,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65049,"byte_end":65063,"line_start":1577,"line_end":1577,"column_start":12,"column_end":26},"name":"reflect_remove","qualname":"<RawIter<T>>::reflect_remove","value":"pub fn reflect_remove(&mut Self, &Bucket<T>)","parent":null,"children":[],"decl_id":null,"docs":" Refresh the iterator so that it reflects a removal from the given bucket.","sig":null,"attributes":[{"value":"/ Refresh the iterator so that it reflects a removal from the given bucket.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64596,"byte_end":64673,"line_start":1569,"line_end":1569,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64678,"byte_end":64681,"line_start":1570,"line_end":1570,"column_start":5,"column_end":8}},{"value":"/ For the iterator to remain valid, this method must be called once","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64686,"byte_end":64755,"line_start":1571,"line_end":1571,"column_start":5,"column_end":74}},{"value":"/ for each removed bucket before `next` is called again.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64760,"byte_end":64818,"line_start":1572,"line_end":1572,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64823,"byte_end":64826,"line_start":1573,"line_end":1573,"column_start":5,"column_end":8}},{"value":"/ This method should be called _before_ the removal is made. It is not necessary to call this","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64831,"byte_end":64926,"line_start":1574,"line_end":1574,"column_start":5,"column_end":100}},{"value":"/ method if you are removing an item that this iterator yielded in the past.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64931,"byte_end":65009,"line_start":1575,"line_end":1575,"column_start":5,"column_end":83}},{"value":"cfg(feature = \"raw\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65014,"byte_end":65037,"line_start":1576,"line_end":1576,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65649,"byte_end":65663,"line_start":1591,"line_end":1591,"column_start":12,"column_end":26},"name":"reflect_insert","qualname":"<RawIter<T>>::reflect_insert","value":"pub fn reflect_insert(&mut Self, &Bucket<T>)","parent":null,"children":[],"decl_id":null,"docs":" Refresh the iterator so that it reflects an insertion into the given bucket.","sig":null,"attributes":[{"value":"/ Refresh the iterator so that it reflects an insertion into the given bucket.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65147,"byte_end":65227,"line_start":1581,"line_end":1581,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65232,"byte_end":65235,"line_start":1582,"line_end":1582,"column_start":5,"column_end":8}},{"value":"/ For the iterator to remain valid, this method must be called once","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65240,"byte_end":65309,"line_start":1583,"line_end":1583,"column_start":5,"column_end":74}},{"value":"/ for each insert before `next` is called again.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65314,"byte_end":65364,"line_start":1584,"line_end":1584,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65369,"byte_end":65372,"line_start":1585,"line_end":1585,"column_start":5,"column_end":8}},{"value":"/ This method does not guarantee that an insertion of a bucket witha greater","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65377,"byte_end":65455,"line_start":1586,"line_end":1586,"column_start":5,"column_end":83}},{"value":"/ index than the last one yielded will be reflected in the iterator.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65460,"byte_end":65530,"line_start":1587,"line_end":1587,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65535,"byte_end":65538,"line_start":1588,"line_end":1588,"column_start":5,"column_end":8}},{"value":"/ This method should be called _after_ the given insert is made.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65543,"byte_end":65609,"line_start":1589,"line_end":1589,"column_start":5,"column_end":71}},{"value":"cfg(feature = \"raw\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65614,"byte_end":65637,"line_start":1590,"line_end":1590,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":280},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71556,"byte_end":71567,"line_start":1723,"line_end":1723,"column_start":12,"column_end":23},"name":"RawIntoIter","qualname":"::raw::inner::RawIntoIter","value":"RawIntoIter {  }","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"decl_id":null,"docs":" Iterator which consumes a table and returns elements.\n","sig":null,"attributes":[{"value":"/ Iterator which consumes a table and returns elements.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71487,"byte_end":71544,"line_start":1722,"line_end":1722,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71753,"byte_end":71757,"line_start":1731,"line_end":1731,"column_start":12,"column_end":16},"name":"iter","qualname":"<RawIntoIter<T>>::iter","value":"pub fn iter(&Self) -> RawIter<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71733,"byte_end":71739,"line_start":1730,"line_end":1730,"column_start":41,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":304},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":73568,"byte_end":73576,"line_start":1796,"line_end":1796,"column_start":12,"column_end":20},"name":"RawDrain","qualname":"::raw::inner::RawDrain","value":"RawDrain {  }","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310}],"decl_id":null,"docs":" Iterator which consumes elements without freeing the table storage.\n","sig":null,"attributes":[{"value":"/ Iterator which consumes elements without freeing the table storage.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":73485,"byte_end":73556,"line_start":1795,"line_end":1795,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":74095,"byte_end":74099,"line_start":1812,"line_end":1812,"column_start":12,"column_end":16},"name":"iter","qualname":"<RawDrain>::iter","value":"pub fn iter(&Self) -> RawIter<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":74075,"byte_end":74081,"line_start":1811,"line_end":1811,"column_start":41,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":330},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":75648,"byte_end":75659,"line_start":1866,"line_end":1866,"column_start":12,"column_end":23},"name":"RawIterHash","qualname":"::raw::inner::RawIterHash","value":"RawIterHash {  }","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338}],"decl_id":null,"docs":" Iterator over occupied buckets that could match a given hash.","sig":null,"attributes":[{"value":"/ Iterator over occupied buckets that could match a given hash.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":75492,"byte_end":75557,"line_start":1863,"line_end":1863,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":75558,"byte_end":75561,"line_start":1864,"line_end":1864,"column_start":1,"column_end":4}},{"value":"/ In rare cases, the iterator may return a bucket with a different hash.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":75562,"byte_end":75636,"line_start":1865,"line_end":1865,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":559},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87792,"byte_end":87810,"line_start":13,"line_end":13,"column_start":10,"column_end":28},"name":"DefaultHashBuilder","qualname":"::map::DefaultHashBuilder","value":"ahash::RandomState","parent":null,"children":[],"decl_id":null,"docs":" Default hasher for `HashMap`.\n","sig":null,"attributes":[{"value":"/ Default hasher for `HashMap`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87723,"byte_end":87756,"line_start":11,"line_end":11,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"ahash\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87757,"byte_end":87782,"line_start":12,"line_end":12,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":560},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94203,"byte_end":94210,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"HashMap","qualname":"::map::HashMap","value":"HashMap {  }","parent":null,"children":[{"krate":0,"index":564},{"krate":0,"index":565}],"decl_id":null,"docs":" A hash map implemented with quadratic probing and SIMD lookup.","sig":null,"attributes":[{"value":"/ A hash map implemented with quadratic probing and SIMD lookup.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87937,"byte_end":88003,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88004,"byte_end":88007,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The default hashing algorithm is currently [`AHash`], though this is","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88008,"byte_end":88080,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ subject to change at any point in the future. This hash function is very","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88081,"byte_end":88157,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ fast for all types of keys, but this algorithm will typically *not* protect","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88158,"byte_end":88237,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ against attacks such as HashDoS.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88238,"byte_end":88274,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88275,"byte_end":88278,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The hashing algorithm can be replaced on a per-`HashMap` basis using the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88279,"byte_end":88355,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ [`default`], [`with_hasher`], and [`with_capacity_and_hasher`] methods. Many","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88356,"byte_end":88436,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ alternative algorithms are available on crates.io, such as the [`fnv`] crate.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88437,"byte_end":88518,"line_start":28,"line_end":28,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88519,"byte_end":88522,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ It is required that the keys implement the [`Eq`] and [`Hash`] traits, although","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88523,"byte_end":88606,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/ this can frequently be achieved by using `#[derive(PartialEq, Eq, Hash)]`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88607,"byte_end":88685,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ If you implement these yourself, it is important that the following","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88686,"byte_end":88757,"line_start":32,"line_end":32,"column_start":1,"column_end":72}},{"value":"/ property holds:","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88758,"byte_end":88777,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88778,"byte_end":88781,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88782,"byte_end":88793,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/ k1 == k2 -> hash(k1) == hash(k2)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88794,"byte_end":88830,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88831,"byte_end":88838,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88839,"byte_end":88842,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ In other words, if two keys are equal, their hashes must be equal.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88843,"byte_end":88913,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88914,"byte_end":88917,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ It is a logic error for a key to be modified in such a way that the key's","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88918,"byte_end":88995,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ hash, as determined by the [`Hash`] trait, or its equality, as determined by","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88996,"byte_end":89076,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ the [`Eq`] trait, changes while it is in the map. This is normally only","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89077,"byte_end":89152,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ possible through [`Cell`], [`RefCell`], global state, I/O, or unsafe code.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89153,"byte_end":89231,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89232,"byte_end":89235,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ It is also a logic error for the [`Hash`] implementation of a key to panic.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89236,"byte_end":89315,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ This is generally only possible if the trait is implemented manually. If a","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89316,"byte_end":89394,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ panic does occur then the contents of the `HashMap` may become corrupted and","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89395,"byte_end":89475,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/ some items may be dropped from the table.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89476,"byte_end":89521,"line_start":49,"line_end":49,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89522,"byte_end":89525,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89526,"byte_end":89540,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89541,"byte_end":89544,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89545,"byte_end":89552,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89553,"byte_end":89580,"line_start":54,"line_end":54,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89581,"byte_end":89584,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Type inference lets us omit an explicit type signature (which","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89585,"byte_end":89653,"line_start":56,"line_end":56,"column_start":1,"column_end":69}},{"value":"/ // would be `HashMap<String, String>` in this example).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89654,"byte_end":89713,"line_start":57,"line_end":57,"column_start":1,"column_end":60}},{"value":"/ let mut book_reviews = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89714,"byte_end":89756,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89757,"byte_end":89760,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // Review some books.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89761,"byte_end":89786,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/ book_reviews.insert(","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89787,"byte_end":89811,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/     \"Adventures of Huckleberry Finn\".to_string(),","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89812,"byte_end":89865,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/     \"My favorite book.\".to_string(),","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89866,"byte_end":89906,"line_start":63,"line_end":63,"column_start":1,"column_end":41}},{"value":"/ );","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89907,"byte_end":89913,"line_start":64,"line_end":64,"column_start":1,"column_end":7}},{"value":"/ book_reviews.insert(","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89914,"byte_end":89938,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/     \"Grimms' Fairy Tales\".to_string(),","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89939,"byte_end":89981,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/     \"Masterpiece.\".to_string(),","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89982,"byte_end":90017,"line_start":67,"line_end":67,"column_start":1,"column_end":36}},{"value":"/ );","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90018,"byte_end":90024,"line_start":68,"line_end":68,"column_start":1,"column_end":7}},{"value":"/ book_reviews.insert(","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90025,"byte_end":90049,"line_start":69,"line_end":69,"column_start":1,"column_end":25}},{"value":"/     \"Pride and Prejudice\".to_string(),","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90050,"byte_end":90092,"line_start":70,"line_end":70,"column_start":1,"column_end":43}},{"value":"/     \"Very enjoyable.\".to_string(),","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90093,"byte_end":90131,"line_start":71,"line_end":71,"column_start":1,"column_end":39}},{"value":"/ );","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90132,"byte_end":90138,"line_start":72,"line_end":72,"column_start":1,"column_end":7}},{"value":"/ book_reviews.insert(","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90139,"byte_end":90163,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/     \"The Adventures of Sherlock Holmes\".to_string(),","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90164,"byte_end":90220,"line_start":74,"line_end":74,"column_start":1,"column_end":57}},{"value":"/     \"Eye lyked it alot.\".to_string(),","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90221,"byte_end":90262,"line_start":75,"line_end":75,"column_start":1,"column_end":42}},{"value":"/ );","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90263,"byte_end":90269,"line_start":76,"line_end":76,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90270,"byte_end":90273,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ // Check for a specific one.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90274,"byte_end":90306,"line_start":78,"line_end":78,"column_start":1,"column_end":33}},{"value":"/ // When collections store owned values (String), they can still be","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90307,"byte_end":90377,"line_start":79,"line_end":79,"column_start":1,"column_end":71}},{"value":"/ // queried using references (&str).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90378,"byte_end":90417,"line_start":80,"line_end":80,"column_start":1,"column_end":40}},{"value":"/ if !book_reviews.contains_key(\"Les Misérables\") {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90418,"byte_end":90472,"line_start":81,"line_end":81,"column_start":1,"column_end":54}},{"value":"/     println!(\"We've got {} reviews, but Les Misérables ain't one.\",","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90473,"byte_end":90545,"line_start":82,"line_end":82,"column_start":1,"column_end":72}},{"value":"/              book_reviews.len());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90546,"byte_end":90583,"line_start":83,"line_end":83,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90584,"byte_end":90589,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90590,"byte_end":90593,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ // oops, this review has a lot of spelling mistakes, let's delete it.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90594,"byte_end":90667,"line_start":86,"line_end":86,"column_start":1,"column_end":74}},{"value":"/ book_reviews.remove(\"The Adventures of Sherlock Holmes\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90668,"byte_end":90729,"line_start":87,"line_end":87,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90730,"byte_end":90733,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ // Look up the values associated with some keys.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90734,"byte_end":90786,"line_start":89,"line_end":89,"column_start":1,"column_end":53}},{"value":"/ let to_find = [\"Pride and Prejudice\", \"Alice's Adventure in Wonderland\"];","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90787,"byte_end":90864,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/ for &book in &to_find {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90865,"byte_end":90892,"line_start":91,"line_end":91,"column_start":1,"column_end":28}},{"value":"/     match book_reviews.get(book) {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90893,"byte_end":90931,"line_start":92,"line_end":92,"column_start":1,"column_end":39}},{"value":"/         Some(review) => println!(\"{}: {}\", book, review),","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90932,"byte_end":90993,"line_start":93,"line_end":93,"column_start":1,"column_end":62}},{"value":"/         None => println!(\"{} is unreviewed.\", book)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90994,"byte_end":91049,"line_start":94,"line_end":94,"column_start":1,"column_end":56}},{"value":"/     }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91050,"byte_end":91059,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91060,"byte_end":91065,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91066,"byte_end":91069,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ // Look up the value for a key (will panic if the key is not found).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91070,"byte_end":91142,"line_start":98,"line_end":98,"column_start":1,"column_end":73}},{"value":"/ println!(\"Review for Jane: {}\", book_reviews[\"Pride and Prejudice\"]);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91143,"byte_end":91216,"line_start":99,"line_end":99,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91217,"byte_end":91220,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ // Iterate over everything.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91221,"byte_end":91252,"line_start":101,"line_end":101,"column_start":1,"column_end":32}},{"value":"/ for (book, review) in &book_reviews {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91253,"byte_end":91294,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/     println!(\"{}: \\\"{}\\\"\", book, review);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91295,"byte_end":91340,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91341,"byte_end":91346,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91347,"byte_end":91354,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91355,"byte_end":91358,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ `HashMap` also implements an [`Entry API`](#method.entry), which allows","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91359,"byte_end":91434,"line_start":107,"line_end":107,"column_start":1,"column_end":76}},{"value":"/ for more complex methods of getting, setting, updating and removing keys and","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91435,"byte_end":91515,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ their values:","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91516,"byte_end":91533,"line_start":109,"line_end":109,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91534,"byte_end":91537,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91538,"byte_end":91545,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91546,"byte_end":91573,"line_start":112,"line_end":112,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91574,"byte_end":91577,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ // type inference lets us omit an explicit type signature (which","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91578,"byte_end":91646,"line_start":114,"line_end":114,"column_start":1,"column_end":69}},{"value":"/ // would be `HashMap<&str, u8>` in this example).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91647,"byte_end":91700,"line_start":115,"line_end":115,"column_start":1,"column_end":54}},{"value":"/ let mut player_stats = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91701,"byte_end":91743,"line_start":116,"line_end":116,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91744,"byte_end":91747,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ fn random_stat_buff() -> u8 {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91748,"byte_end":91781,"line_start":118,"line_end":118,"column_start":1,"column_end":34}},{"value":"/     // could actually return some random value here - let's just return","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91782,"byte_end":91857,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"/     // some fixed value for now","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91858,"byte_end":91893,"line_start":120,"line_end":120,"column_start":1,"column_end":36}},{"value":"/     42","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91894,"byte_end":91904,"line_start":121,"line_end":121,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91905,"byte_end":91910,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91911,"byte_end":91914,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ // insert a key only if it doesn't already exist","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91915,"byte_end":91967,"line_start":124,"line_end":124,"column_start":1,"column_end":53}},{"value":"/ player_stats.entry(\"health\").or_insert(100);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91968,"byte_end":92016,"line_start":125,"line_end":125,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92017,"byte_end":92020,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ // insert a key using a function that provides a new value only if it","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92021,"byte_end":92094,"line_start":127,"line_end":127,"column_start":1,"column_end":74}},{"value":"/ // doesn't already exist","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92095,"byte_end":92123,"line_start":128,"line_end":128,"column_start":1,"column_end":29}},{"value":"/ player_stats.entry(\"defence\").or_insert_with(random_stat_buff);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92124,"byte_end":92191,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92192,"byte_end":92195,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ // update a key, guarding against the key possibly not being set","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92196,"byte_end":92264,"line_start":131,"line_end":131,"column_start":1,"column_end":69}},{"value":"/ let stat = player_stats.entry(\"attack\").or_insert(100);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92265,"byte_end":92324,"line_start":132,"line_end":132,"column_start":1,"column_end":60}},{"value":"/ *stat += random_stat_buff();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92325,"byte_end":92357,"line_start":133,"line_end":133,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92358,"byte_end":92365,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92366,"byte_end":92369,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The easiest way to use `HashMap` with a custom key type is to derive [`Eq`] and [`Hash`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92370,"byte_end":92463,"line_start":136,"line_end":136,"column_start":1,"column_end":94}},{"value":"/ We must also derive [`PartialEq`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92464,"byte_end":92502,"line_start":137,"line_end":137,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92503,"byte_end":92506,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92507,"byte_end":92566,"line_start":139,"line_end":139,"column_start":1,"column_end":60}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92567,"byte_end":92631,"line_start":140,"line_end":140,"column_start":1,"column_end":65}},{"value":"/ [`PartialEq`]: https://doc.rust-lang.org/std/cmp/trait.PartialEq.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92632,"byte_end":92705,"line_start":141,"line_end":141,"column_start":1,"column_end":74}},{"value":"/ [`RefCell`]: https://doc.rust-lang.org/std/cell/struct.RefCell.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92706,"byte_end":92777,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/ [`Cell`]: https://doc.rust-lang.org/std/cell/struct.Cell.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92778,"byte_end":92843,"line_start":143,"line_end":143,"column_start":1,"column_end":66}},{"value":"/ [`default`]: #method.default","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92844,"byte_end":92876,"line_start":144,"line_end":144,"column_start":1,"column_end":33}},{"value":"/ [`with_hasher`]: #method.with_hasher","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92877,"byte_end":92917,"line_start":145,"line_end":145,"column_start":1,"column_end":41}},{"value":"/ [`with_capacity_and_hasher`]: #method.with_capacity_and_hasher","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92918,"byte_end":92984,"line_start":146,"line_end":146,"column_start":1,"column_end":67}},{"value":"/ [`fnv`]: https://crates.io/crates/fnv","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92985,"byte_end":93026,"line_start":147,"line_end":147,"column_start":1,"column_end":42}},{"value":"/ [`AHash`]: https://crates.io/crates/ahash","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93027,"byte_end":93072,"line_start":148,"line_end":148,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93073,"byte_end":93076,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93077,"byte_end":93084,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93085,"byte_end":93112,"line_start":151,"line_end":151,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93113,"byte_end":93116,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ #[derive(Hash, Eq, PartialEq, Debug)]","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93117,"byte_end":93158,"line_start":153,"line_end":153,"column_start":1,"column_end":42}},{"value":"/ struct Viking {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93159,"byte_end":93178,"line_start":154,"line_end":154,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93179,"byte_end":93200,"line_start":155,"line_end":155,"column_start":1,"column_end":22}},{"value":"/     country: String,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93201,"byte_end":93225,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93226,"byte_end":93231,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93232,"byte_end":93235,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ impl Viking {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93236,"byte_end":93253,"line_start":159,"line_end":159,"column_start":1,"column_end":18}},{"value":"/     /// Creates a new Viking.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93254,"byte_end":93287,"line_start":160,"line_end":160,"column_start":1,"column_end":34}},{"value":"/     fn new(name: &str, country: &str) -> Viking {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93288,"byte_end":93341,"line_start":161,"line_end":161,"column_start":1,"column_end":54}},{"value":"/         Viking { name: name.to_string(), country: country.to_string() }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93342,"byte_end":93417,"line_start":162,"line_end":162,"column_start":1,"column_end":76}},{"value":"/     }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93418,"byte_end":93427,"line_start":163,"line_end":163,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93428,"byte_end":93433,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93434,"byte_end":93437,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ // Use a HashMap to store the vikings' health points.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93438,"byte_end":93495,"line_start":166,"line_end":166,"column_start":1,"column_end":58}},{"value":"/ let mut vikings = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93496,"byte_end":93533,"line_start":167,"line_end":167,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93534,"byte_end":93537,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ vikings.insert(Viking::new(\"Einar\", \"Norway\"), 25);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93538,"byte_end":93593,"line_start":169,"line_end":169,"column_start":1,"column_end":56}},{"value":"/ vikings.insert(Viking::new(\"Olaf\", \"Denmark\"), 24);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93594,"byte_end":93649,"line_start":170,"line_end":170,"column_start":1,"column_end":56}},{"value":"/ vikings.insert(Viking::new(\"Harald\", \"Iceland\"), 12);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93650,"byte_end":93707,"line_start":171,"line_end":171,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93708,"byte_end":93711,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ // Use derived implementation to print the status of the vikings.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93712,"byte_end":93781,"line_start":173,"line_end":173,"column_start":1,"column_end":70}},{"value":"/ for (viking, health) in &vikings {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93782,"byte_end":93820,"line_start":174,"line_end":174,"column_start":1,"column_end":39}},{"value":"/     println!(\"{:?} has {} hp\", viking, health);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93821,"byte_end":93872,"line_start":175,"line_end":175,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93873,"byte_end":93878,"line_start":176,"line_end":176,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93879,"byte_end":93886,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93887,"byte_end":93890,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ A `HashMap` with fixed list of elements can be initialized from an array:","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93891,"byte_end":93968,"line_start":179,"line_end":179,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93969,"byte_end":93972,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93973,"byte_end":93980,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93981,"byte_end":94008,"line_start":182,"line_end":182,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94009,"byte_end":94012,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ let timber_resources: HashMap<&str, i32> = [(\"Norway\", 100), (\"Denmark\", 50), (\"Iceland\", 10)]","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94013,"byte_end":94111,"line_start":184,"line_end":184,"column_start":1,"column_end":99}},{"value":"/     .iter().cloned().collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94112,"byte_end":94147,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/ // use the values stored in map","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94148,"byte_end":94183,"line_start":186,"line_end":186,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94184,"byte_end":94191,"line_start":187,"line_end":187,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95467,"byte_end":95470,"line_start":230,"line_end":230,"column_start":12,"column_end":15},"name":"new","qualname":"<HashMap<K, V, DefaultHashBuilder>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95089,"byte_end":95120,"line_start":218,"line_end":218,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95125,"byte_end":95128,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ The hash map is initially created with a capacity of 0, so it will not allocate until it","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95133,"byte_end":95225,"line_start":220,"line_end":220,"column_start":5,"column_end":97}},{"value":"/ is first inserted into.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95230,"byte_end":95257,"line_start":221,"line_end":221,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95262,"byte_end":95265,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95270,"byte_end":95284,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95289,"byte_end":95292,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95297,"byte_end":95304,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95309,"byte_end":95336,"line_start":226,"line_end":226,"column_start":5,"column_end":32}},{"value":"/ let mut map: HashMap<&str, i32> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95341,"byte_end":95394,"line_start":227,"line_end":227,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95399,"byte_end":95406,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95447,"byte_end":95453,"line_start":229,"line_end":229,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95960,"byte_end":95973,"line_start":246,"line_end":246,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<HashMap<K, V, DefaultHashBuilder>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` with the specified capacity.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95518,"byte_end":95577,"line_start":234,"line_end":234,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95582,"byte_end":95585,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ The hash map will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95590,"byte_end":95664,"line_start":236,"line_end":236,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash map will not allocate.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95669,"byte_end":95738,"line_start":237,"line_end":237,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95743,"byte_end":95746,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95751,"byte_end":95765,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95770,"byte_end":95773,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95778,"byte_end":95785,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95790,"byte_end":95817,"line_start":242,"line_end":242,"column_start":5,"column_end":32}},{"value":"/ let mut map: HashMap<&str, i32> = HashMap::with_capacity(10);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95822,"byte_end":95887,"line_start":243,"line_end":243,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95892,"byte_end":95899,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95940,"byte_end":95946,"line_start":245,"line_end":245,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97134,"byte_end":97145,"line_start":278,"line_end":278,"column_start":18,"column_end":29},"name":"with_hasher","qualname":"<HashMap<K, V, S>>::with_hasher","value":"pub const fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` which will use the given hash builder to hash\n keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` which will use the given hash builder to hash","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96127,"byte_end":96203,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/ keys.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96208,"byte_end":96217,"line_start":253,"line_end":253,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96222,"byte_end":96225,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ The created map has the default initial capacity.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96230,"byte_end":96283,"line_start":255,"line_end":255,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96288,"byte_end":96291,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ Warning: `hash_builder` is normally randomly generated, and","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96296,"byte_end":96359,"line_start":257,"line_end":257,"column_start":5,"column_end":68}},{"value":"/ is designed to allow HashMaps to be resistant to attacks that","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96364,"byte_end":96429,"line_start":258,"line_end":258,"column_start":5,"column_end":70}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96434,"byte_end":96497,"line_start":259,"line_end":259,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96502,"byte_end":96566,"line_start":260,"line_end":260,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96571,"byte_end":96574,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96579,"byte_end":96655,"line_start":262,"line_end":262,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96660,"byte_end":96724,"line_start":263,"line_end":263,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96729,"byte_end":96732,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96737,"byte_end":96751,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96756,"byte_end":96759,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96764,"byte_end":96771,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96776,"byte_end":96803,"line_start":268,"line_end":268,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96808,"byte_end":96856,"line_start":269,"line_end":269,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96861,"byte_end":96864,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96869,"byte_end":96911,"line_start":271,"line_end":271,"column_start":5,"column_end":47}},{"value":"/ let mut map = HashMap::with_hasher(s);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96916,"byte_end":96958,"line_start":272,"line_end":272,"column_start":5,"column_end":47}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96963,"byte_end":96984,"line_start":273,"line_end":273,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96989,"byte_end":96996,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97001,"byte_end":97004,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97009,"byte_end":97067,"line_start":276,"line_end":276,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97108,"byte_end":97114,"line_start":277,"line_end":277,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98400,"byte_end":98424,"line_start":312,"line_end":312,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<HashMap<K, V, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` with the specified capacity, using `hash_builder`\n to hash the keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` with the specified capacity, using `hash_builder`","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97271,"byte_end":97351,"line_start":285,"line_end":285,"column_start":5,"column_end":85}},{"value":"/ to hash the keys.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97356,"byte_end":97377,"line_start":286,"line_end":286,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97382,"byte_end":97385,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ The hash map will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97390,"byte_end":97464,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash map will not allocate.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97469,"byte_end":97538,"line_start":289,"line_end":289,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97543,"byte_end":97546,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ Warning: `hash_builder` is normally randomly generated, and","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97551,"byte_end":97614,"line_start":291,"line_end":291,"column_start":5,"column_end":68}},{"value":"/ is designed to allow HashMaps to be resistant to attacks that","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97619,"byte_end":97684,"line_start":292,"line_end":292,"column_start":5,"column_end":70}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97689,"byte_end":97752,"line_start":293,"line_end":293,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97757,"byte_end":97821,"line_start":294,"line_end":294,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97826,"byte_end":97829,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97834,"byte_end":97910,"line_start":296,"line_end":296,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97915,"byte_end":97979,"line_start":297,"line_end":297,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97984,"byte_end":97987,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97992,"byte_end":98006,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98011,"byte_end":98014,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98019,"byte_end":98026,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98031,"byte_end":98058,"line_start":302,"line_end":302,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98063,"byte_end":98111,"line_start":303,"line_end":303,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98116,"byte_end":98119,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98124,"byte_end":98166,"line_start":305,"line_end":305,"column_start":5,"column_end":47}},{"value":"/ let mut map = HashMap::with_capacity_and_hasher(10, s);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98171,"byte_end":98230,"line_start":306,"line_end":306,"column_start":5,"column_end":64}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98235,"byte_end":98256,"line_start":307,"line_end":307,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98261,"byte_end":98268,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98273,"byte_end":98276,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98281,"byte_end":98339,"line_start":310,"line_end":310,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98380,"byte_end":98386,"line_start":311,"line_end":311,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99117,"byte_end":99123,"line_start":334,"line_end":334,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashMap<K, V, S>>::hasher","value":"pub fn hasher(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the map's [`BuildHasher`].","sig":null,"attributes":[{"value":"/ Returns a reference to the map's [`BuildHasher`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98585,"byte_end":98638,"line_start":319,"line_end":319,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98643,"byte_end":98646,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98651,"byte_end":98729,"line_start":321,"line_end":321,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98734,"byte_end":98737,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98742,"byte_end":98756,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98761,"byte_end":98764,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98769,"byte_end":98776,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98781,"byte_end":98808,"line_start":326,"line_end":326,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98813,"byte_end":98861,"line_start":327,"line_end":327,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98866,"byte_end":98869,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ let hasher = DefaultHashBuilder::default();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98874,"byte_end":98921,"line_start":329,"line_end":329,"column_start":5,"column_end":52}},{"value":"/ let map: HashMap<i32, i32> = HashMap::with_hasher(hasher);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98926,"byte_end":98988,"line_start":330,"line_end":330,"column_start":5,"column_end":67}},{"value":"/ let hasher: &DefaultHashBuilder = map.hasher();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98993,"byte_end":99044,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99049,"byte_end":99056,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99097,"byte_end":99103,"line_start":333,"line_end":333,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99667,"byte_end":99675,"line_start":351,"line_end":351,"column_start":12,"column_end":20},"name":"capacity","qualname":"<HashMap<K, V, S>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the map can hold without reallocating.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99177,"byte_end":99250,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99255,"byte_end":99258,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the `HashMap<K, V>` might be able to hold","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99263,"byte_end":99338,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99343,"byte_end":99409,"line_start":341,"line_end":341,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99414,"byte_end":99417,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99422,"byte_end":99436,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99441,"byte_end":99444,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99449,"byte_end":99456,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99461,"byte_end":99488,"line_start":346,"line_end":346,"column_start":5,"column_end":32}},{"value":"/ let map: HashMap<i32, i32> = HashMap::with_capacity(100);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99493,"byte_end":99554,"line_start":347,"line_end":347,"column_start":5,"column_end":66}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99559,"byte_end":99594,"line_start":348,"line_end":348,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99599,"byte_end":99606,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99647,"byte_end":99653,"line_start":350,"line_end":350,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100199,"byte_end":100203,"line_start":373,"line_end":373,"column_start":12,"column_end":16},"name":"keys","qualname":"<HashMap<K, V, S>>::keys","value":"pub fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all keys in arbitrary order.\n The iterator element type is `&'a K`.","sig":null,"attributes":[{"value":"/ An iterator visiting all keys in arbitrary order.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99735,"byte_end":99788,"line_start":355,"line_end":355,"column_start":5,"column_end":58}},{"value":"/ The iterator element type is `&'a K`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99793,"byte_end":99834,"line_start":356,"line_end":356,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99839,"byte_end":99842,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99847,"byte_end":99861,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99866,"byte_end":99869,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99874,"byte_end":99881,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99886,"byte_end":99913,"line_start":361,"line_end":361,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99918,"byte_end":99921,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99926,"byte_end":99959,"line_start":363,"line_end":363,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99964,"byte_end":99987,"line_start":364,"line_end":364,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99992,"byte_end":100015,"line_start":365,"line_end":365,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100020,"byte_end":100043,"line_start":366,"line_end":366,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100048,"byte_end":100051,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100056,"byte_end":100083,"line_start":368,"line_end":368,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100088,"byte_end":100116,"line_start":369,"line_end":369,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100121,"byte_end":100126,"line_start":370,"line_end":370,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100131,"byte_end":100138,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100179,"byte_end":100185,"line_start":372,"line_end":372,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100746,"byte_end":100752,"line_start":395,"line_end":395,"column_start":12,"column_end":18},"name":"values","qualname":"<HashMap<K, V, S>>::values","value":"pub fn values(&Self) -> Values<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.\n The iterator element type is `&'a V`.","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100278,"byte_end":100333,"line_start":377,"line_end":377,"column_start":5,"column_end":60}},{"value":"/ The iterator element type is `&'a V`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100338,"byte_end":100379,"line_start":378,"line_end":378,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100384,"byte_end":100387,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100392,"byte_end":100406,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100411,"byte_end":100414,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100419,"byte_end":100426,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100431,"byte_end":100458,"line_start":383,"line_end":383,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100463,"byte_end":100466,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100471,"byte_end":100504,"line_start":385,"line_end":385,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100509,"byte_end":100532,"line_start":386,"line_end":386,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100537,"byte_end":100560,"line_start":387,"line_end":387,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100565,"byte_end":100588,"line_start":388,"line_end":388,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100593,"byte_end":100596,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100601,"byte_end":100630,"line_start":390,"line_end":390,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100635,"byte_end":100663,"line_start":391,"line_end":391,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100668,"byte_end":100673,"line_start":392,"line_end":392,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100678,"byte_end":100685,"line_start":393,"line_end":393,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100726,"byte_end":100732,"line_start":394,"line_end":394,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101405,"byte_end":101415,"line_start":422,"line_end":422,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<HashMap<K, V, S>>::values_mut","value":"pub fn values_mut(&mut Self) -> ValuesMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.\n The iterator element type is `&'a mut V`.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100831,"byte_end":100894,"line_start":399,"line_end":399,"column_start":5,"column_end":68}},{"value":"/ The iterator element type is `&'a mut V`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100899,"byte_end":100944,"line_start":400,"line_end":400,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100949,"byte_end":100952,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100957,"byte_end":100971,"line_start":402,"line_end":402,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100976,"byte_end":100979,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100984,"byte_end":100991,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100996,"byte_end":101023,"line_start":405,"line_end":405,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101028,"byte_end":101031,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101036,"byte_end":101069,"line_start":407,"line_end":407,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101074,"byte_end":101077,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101082,"byte_end":101105,"line_start":409,"line_end":409,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101110,"byte_end":101133,"line_start":410,"line_end":410,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101138,"byte_end":101161,"line_start":411,"line_end":411,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101166,"byte_end":101169,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ for val in map.values_mut() {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101174,"byte_end":101207,"line_start":413,"line_end":413,"column_start":5,"column_end":38}},{"value":"/     *val = *val + 10;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101212,"byte_end":101237,"line_start":414,"line_end":414,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101242,"byte_end":101247,"line_start":415,"line_end":415,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101252,"byte_end":101255,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101260,"byte_end":101289,"line_start":417,"line_end":417,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101294,"byte_end":101322,"line_start":418,"line_end":418,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101327,"byte_end":101332,"line_start":419,"line_end":419,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101337,"byte_end":101344,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101385,"byte_end":101391,"line_start":421,"line_end":421,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102038,"byte_end":102042,"line_start":446,"line_end":446,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashMap<K, V, S>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order.\n The iterator element type is `(&'a K, &'a V)`.","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101529,"byte_end":101593,"line_start":428,"line_end":428,"column_start":5,"column_end":69}},{"value":"/ The iterator element type is `(&'a K, &'a V)`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101598,"byte_end":101648,"line_start":429,"line_end":429,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101653,"byte_end":101656,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101661,"byte_end":101675,"line_start":431,"line_end":431,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101680,"byte_end":101683,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101688,"byte_end":101695,"line_start":433,"line_end":433,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101700,"byte_end":101727,"line_start":434,"line_end":434,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101732,"byte_end":101735,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101740,"byte_end":101773,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101778,"byte_end":101801,"line_start":437,"line_end":437,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101806,"byte_end":101829,"line_start":438,"line_end":438,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101834,"byte_end":101857,"line_start":439,"line_end":439,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101862,"byte_end":101865,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in map.iter() {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101870,"byte_end":101904,"line_start":441,"line_end":441,"column_start":5,"column_end":39}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101909,"byte_end":101955,"line_start":442,"line_end":442,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101960,"byte_end":101965,"line_start":443,"line_end":443,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101970,"byte_end":101977,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102018,"byte_end":102024,"line_start":445,"line_end":445,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102942,"byte_end":102950,"line_start":480,"line_end":480,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<HashMap<K, V, S>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order,\n with mutable references to the values.\n The iterator element type is `(&'a K, &'a mut V)`.","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102277,"byte_end":102341,"line_start":456,"line_end":456,"column_start":5,"column_end":69}},{"value":"/ with mutable references to the values.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102346,"byte_end":102388,"line_start":457,"line_end":457,"column_start":5,"column_end":47}},{"value":"/ The iterator element type is `(&'a K, &'a mut V)`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102393,"byte_end":102447,"line_start":458,"line_end":458,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102452,"byte_end":102455,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102460,"byte_end":102474,"line_start":460,"line_end":460,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102479,"byte_end":102482,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102487,"byte_end":102494,"line_start":462,"line_end":462,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102499,"byte_end":102526,"line_start":463,"line_end":463,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102531,"byte_end":102534,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102539,"byte_end":102572,"line_start":465,"line_end":465,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102577,"byte_end":102600,"line_start":466,"line_end":466,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102605,"byte_end":102628,"line_start":467,"line_end":467,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102633,"byte_end":102656,"line_start":468,"line_end":468,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102661,"byte_end":102664,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ // Update all values","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102669,"byte_end":102693,"line_start":470,"line_end":470,"column_start":5,"column_end":29}},{"value":"/ for (_, val) in map.iter_mut() {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102698,"byte_end":102734,"line_start":471,"line_end":471,"column_start":5,"column_end":41}},{"value":"/     *val *= 2;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102739,"byte_end":102757,"line_start":472,"line_end":472,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102762,"byte_end":102767,"line_start":473,"line_end":473,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102772,"byte_end":102775,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in &map {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102780,"byte_end":102808,"line_start":475,"line_end":475,"column_start":5,"column_end":33}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102813,"byte_end":102859,"line_start":476,"line_end":476,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102864,"byte_end":102869,"line_start":477,"line_end":477,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102874,"byte_end":102881,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102922,"byte_end":102928,"line_start":479,"line_end":479,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103667,"byte_end":103670,"line_start":509,"line_end":509,"column_start":12,"column_end":15},"name":"len","qualname":"<HashMap<K, V, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the map.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the map.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103335,"byte_end":103381,"line_start":496,"line_end":496,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103386,"byte_end":103389,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103394,"byte_end":103408,"line_start":498,"line_end":498,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103413,"byte_end":103416,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103421,"byte_end":103428,"line_start":500,"line_end":500,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103433,"byte_end":103460,"line_start":501,"line_end":501,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103465,"byte_end":103468,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103473,"byte_end":103504,"line_start":503,"line_end":503,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103509,"byte_end":103536,"line_start":504,"line_end":504,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103541,"byte_end":103562,"line_start":505,"line_end":505,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103567,"byte_end":103594,"line_start":506,"line_end":506,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103599,"byte_end":103606,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103647,"byte_end":103653,"line_start":508,"line_end":508,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104061,"byte_end":104069,"line_start":526,"line_end":526,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashMap<K, V, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103725,"byte_end":103776,"line_start":513,"line_end":513,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103781,"byte_end":103784,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103789,"byte_end":103803,"line_start":515,"line_end":515,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103808,"byte_end":103811,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103816,"byte_end":103823,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103828,"byte_end":103855,"line_start":518,"line_end":518,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103860,"byte_end":103863,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103868,"byte_end":103899,"line_start":520,"line_end":520,"column_start":5,"column_end":36}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103904,"byte_end":103930,"line_start":521,"line_end":521,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103935,"byte_end":103956,"line_start":522,"line_end":522,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103961,"byte_end":103988,"line_start":523,"line_end":523,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103993,"byte_end":104000,"line_start":524,"line_end":524,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104041,"byte_end":104047,"line_start":525,"line_end":525,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104662,"byte_end":104667,"line_start":550,"line_end":550,"column_start":12,"column_end":17},"name":"drain","qualname":"<HashMap<K, V, S>>::drain","value":"pub fn drain(&mut Self) -> Drain<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, returning all key-value pairs as an iterator. Keeps the\n allocated memory for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, returning all key-value pairs as an iterator. Keeps the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104122,"byte_end":104197,"line_start":530,"line_end":530,"column_start":5,"column_end":80}},{"value":"/ allocated memory for reuse.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104202,"byte_end":104233,"line_start":531,"line_end":531,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104238,"byte_end":104241,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104246,"byte_end":104260,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104265,"byte_end":104268,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104273,"byte_end":104280,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104285,"byte_end":104312,"line_start":536,"line_end":536,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104317,"byte_end":104320,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104325,"byte_end":104356,"line_start":538,"line_end":538,"column_start":5,"column_end":36}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104361,"byte_end":104382,"line_start":539,"line_end":539,"column_start":5,"column_end":26}},{"value":"/ a.insert(2, \"b\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104387,"byte_end":104408,"line_start":540,"line_end":540,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104413,"byte_end":104416,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ for (k, v) in a.drain().take(1) {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104421,"byte_end":104458,"line_start":542,"line_end":542,"column_start":5,"column_end":42}},{"value":"/     assert!(k == 1 || k == 2);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104463,"byte_end":104497,"line_start":543,"line_end":543,"column_start":5,"column_end":39}},{"value":"/     assert!(v == \"a\" || v == \"b\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104502,"byte_end":104540,"line_start":544,"line_end":544,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104545,"byte_end":104550,"line_start":545,"line_end":545,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104555,"byte_end":104558,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104563,"byte_end":104589,"line_start":547,"line_end":547,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104594,"byte_end":104601,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104642,"byte_end":104648,"line_start":549,"line_end":549,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105195,"byte_end":105201,"line_start":569,"line_end":569,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashMap<K, V, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&K, &mut V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[{"value":"/ Retains only the elements specified by the predicate.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104776,"byte_end":104833,"line_start":556,"line_end":556,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104838,"byte_end":104841,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ In other words, remove all pairs `(k, v)` such that `f(&k,&mut v)` returns `false`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104846,"byte_end":104933,"line_start":558,"line_end":558,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104938,"byte_end":104941,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104946,"byte_end":104960,"line_start":560,"line_end":560,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104965,"byte_end":104968,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104973,"byte_end":104980,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104985,"byte_end":105012,"line_start":563,"line_end":563,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105017,"byte_end":105020,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = (0..8).map(|x|(x, x*10)).collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105025,"byte_end":105097,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ map.retain(|&k, _| k % 2 == 0);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105102,"byte_end":105137,"line_start":566,"line_end":566,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(map.len(), 4);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105142,"byte_end":105171,"line_start":567,"line_end":567,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105176,"byte_end":105183,"line_start":568,"line_end":568,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106617,"byte_end":106629,"line_start":610,"line_end":610,"column_start":12,"column_end":24},"name":"drain_filter","qualname":"<HashMap<K, V, S>>::drain_filter","value":"pub fn drain_filter<F>(&mut Self, F) -> DrainFilter<, K, V, F> where\nF: FnMut(&K, &mut V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Drains elements which are true under the given predicate,\n and returns an iterator over the removed items.","sig":null,"attributes":[{"value":"/ Drains elements which are true under the given predicate,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105618,"byte_end":105679,"line_start":584,"line_end":584,"column_start":5,"column_end":66}},{"value":"/ and returns an iterator over the removed items.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105684,"byte_end":105735,"line_start":585,"line_end":585,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105740,"byte_end":105743,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ In other words, move all pairs `(k, v)` such that `f(&k,&mut v)` returns `true` out","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105748,"byte_end":105835,"line_start":587,"line_end":587,"column_start":5,"column_end":92}},{"value":"/ into another iterator.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105840,"byte_end":105866,"line_start":588,"line_end":588,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105871,"byte_end":105874,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ When the returned DrainedFilter is dropped, any remaining elements that satisfy","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105879,"byte_end":105962,"line_start":590,"line_end":590,"column_start":5,"column_end":88}},{"value":"/ the predicate are dropped from the table.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105967,"byte_end":106012,"line_start":591,"line_end":591,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106017,"byte_end":106020,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106025,"byte_end":106039,"line_start":593,"line_end":593,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106044,"byte_end":106047,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106052,"byte_end":106059,"line_start":595,"line_end":595,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106064,"byte_end":106091,"line_start":596,"line_end":596,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106096,"byte_end":106099,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = (0..8).map(|x| (x, x)).collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106104,"byte_end":106174,"line_start":598,"line_end":598,"column_start":5,"column_end":75}},{"value":"/ let drained: HashMap<i32, i32> = map.drain_filter(|k, _v| k % 2 == 0).collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106179,"byte_end":106263,"line_start":599,"line_end":599,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106268,"byte_end":106271,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ let mut evens = drained.keys().cloned().collect::<Vec<_>>();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106276,"byte_end":106340,"line_start":601,"line_end":601,"column_start":5,"column_end":69}},{"value":"/ let mut odds = map.keys().cloned().collect::<Vec<_>>();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106345,"byte_end":106404,"line_start":602,"line_end":602,"column_start":5,"column_end":64}},{"value":"/ evens.sort();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106409,"byte_end":106426,"line_start":603,"line_end":603,"column_start":5,"column_end":22}},{"value":"/ odds.sort();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106431,"byte_end":106447,"line_start":604,"line_end":604,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106452,"byte_end":106455,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens, vec![0, 2, 4, 6]);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106460,"byte_end":106500,"line_start":606,"line_end":606,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(odds, vec![1, 3, 5, 7]);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106505,"byte_end":106544,"line_start":607,"line_end":607,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106549,"byte_end":106556,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106597,"byte_end":106603,"line_start":609,"line_end":609,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107302,"byte_end":107307,"line_start":637,"line_end":637,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashMap<K, V, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-value pairs. Keeps the allocated memory\n for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-value pairs. Keeps the allocated memory","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106935,"byte_end":107011,"line_start":623,"line_end":623,"column_start":5,"column_end":81}},{"value":"/ for reuse.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107016,"byte_end":107030,"line_start":624,"line_end":624,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107035,"byte_end":107038,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107043,"byte_end":107057,"line_start":626,"line_end":626,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107062,"byte_end":107065,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107070,"byte_end":107077,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107082,"byte_end":107109,"line_start":629,"line_end":629,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107114,"byte_end":107117,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107122,"byte_end":107153,"line_start":631,"line_end":631,"column_start":5,"column_end":36}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107158,"byte_end":107179,"line_start":632,"line_end":632,"column_start":5,"column_end":26}},{"value":"/ a.clear();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107184,"byte_end":107198,"line_start":633,"line_end":633,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107203,"byte_end":107229,"line_start":634,"line_end":634,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107234,"byte_end":107241,"line_start":635,"line_end":635,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107282,"byte_end":107288,"line_start":636,"line_end":636,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108029,"byte_end":108036,"line_start":665,"line_end":665,"column_start":12,"column_end":19},"name":"reserve","qualname":"<HashMap<K, V, S>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more elements to be inserted\n in the `HashMap`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more elements to be inserted","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107439,"byte_end":107515,"line_start":647,"line_end":647,"column_start":5,"column_end":81}},{"value":"/ in the `HashMap`. The collection may reserve more space to avoid","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107520,"byte_end":107588,"line_start":648,"line_end":648,"column_start":5,"column_end":73}},{"value":"/ frequent reallocations.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107593,"byte_end":107620,"line_start":649,"line_end":649,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107625,"byte_end":107628,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107633,"byte_end":107645,"line_start":651,"line_end":651,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107650,"byte_end":107653,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ Panics if the new allocation size overflows [`usize`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107658,"byte_end":107716,"line_start":653,"line_end":653,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107721,"byte_end":107724,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ [`usize`]: https://doc.rust-lang.org/std/primitive.usize.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107729,"byte_end":107794,"line_start":655,"line_end":655,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107799,"byte_end":107802,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107807,"byte_end":107821,"line_start":657,"line_end":657,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107826,"byte_end":107829,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107834,"byte_end":107841,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107846,"byte_end":107873,"line_start":660,"line_end":660,"column_start":5,"column_end":32}},{"value":"/ let mut map: HashMap<&str, i32> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107878,"byte_end":107931,"line_start":661,"line_end":661,"column_start":5,"column_end":58}},{"value":"/ map.reserve(10);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107936,"byte_end":107956,"line_start":662,"line_end":662,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107961,"byte_end":107968,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108009,"byte_end":108015,"line_start":664,"line_end":664,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108849,"byte_end":108860,"line_start":688,"line_end":688,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<HashMap<K, V, S>>::try_reserve","value":"pub fn try_reserve(&mut Self, usize) -> Result<(), TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to reserve capacity for at least `additional` more elements to be inserted\n in the given `HashMap<K,V>`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Tries to reserve capacity for at least `additional` more elements to be inserted","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108215,"byte_end":108299,"line_start":671,"line_end":671,"column_start":5,"column_end":89}},{"value":"/ in the given `HashMap<K,V>`. The collection may reserve more space to avoid","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108304,"byte_end":108383,"line_start":672,"line_end":672,"column_start":5,"column_end":84}},{"value":"/ frequent reallocations.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108388,"byte_end":108415,"line_start":673,"line_end":673,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108420,"byte_end":108423,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108428,"byte_end":108440,"line_start":675,"line_end":675,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108445,"byte_end":108448,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ If the capacity overflows, or the allocator reports a failure, then an error","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108453,"byte_end":108533,"line_start":677,"line_end":677,"column_start":5,"column_end":85}},{"value":"/ is returned.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108538,"byte_end":108554,"line_start":678,"line_end":678,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108559,"byte_end":108562,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108567,"byte_end":108581,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108586,"byte_end":108589,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108594,"byte_end":108601,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108606,"byte_end":108633,"line_start":683,"line_end":683,"column_start":5,"column_end":32}},{"value":"/ let mut map: HashMap<&str, isize> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108638,"byte_end":108693,"line_start":684,"line_end":684,"column_start":5,"column_end":60}},{"value":"/ map.try_reserve(10).expect(\"why is the test harness OOMing on 10 bytes?\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108698,"byte_end":108776,"line_start":685,"line_end":685,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108781,"byte_end":108788,"line_start":686,"line_end":686,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108829,"byte_end":108835,"line_start":687,"line_end":687,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109679,"byte_end":109692,"line_start":711,"line_end":711,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<HashMap<K, V, S>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the map as much as possible. It will drop\n down as much as possible while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the map as much as possible. It will drop","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109073,"byte_end":109142,"line_start":694,"line_end":694,"column_start":5,"column_end":74}},{"value":"/ down as much as possible while maintaining the internal rules","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109147,"byte_end":109212,"line_start":695,"line_end":695,"column_start":5,"column_end":70}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109217,"byte_end":109290,"line_start":696,"line_end":696,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109295,"byte_end":109298,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109303,"byte_end":109317,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109322,"byte_end":109325,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109330,"byte_end":109337,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109342,"byte_end":109369,"line_start":701,"line_end":701,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109374,"byte_end":109377,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = HashMap::with_capacity(100);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109382,"byte_end":109447,"line_start":703,"line_end":703,"column_start":5,"column_end":70}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109452,"byte_end":109473,"line_start":704,"line_end":704,"column_start":5,"column_end":26}},{"value":"/ map.insert(3, 4);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109478,"byte_end":109499,"line_start":705,"line_end":705,"column_start":5,"column_end":26}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109504,"byte_end":109539,"line_start":706,"line_end":706,"column_start":5,"column_end":40}},{"value":"/ map.shrink_to_fit();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109544,"byte_end":109568,"line_start":707,"line_end":707,"column_start":5,"column_end":29}},{"value":"/ assert!(map.capacity() >= 2);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109573,"byte_end":109606,"line_start":708,"line_end":708,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109611,"byte_end":109618,"line_start":709,"line_end":709,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109659,"byte_end":109665,"line_start":710,"line_end":710,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110700,"byte_end":110709,"line_start":740,"line_end":740,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<HashMap<K, V, S>>::shrink_to","value":"pub fn shrink_to(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the map with a lower limit. It will drop\n down no lower than the supplied limit while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the map with a lower limit. It will drop","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109832,"byte_end":109900,"line_start":716,"line_end":716,"column_start":5,"column_end":73}},{"value":"/ down no lower than the supplied limit while maintaining the internal rules","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109905,"byte_end":109983,"line_start":717,"line_end":717,"column_start":5,"column_end":83}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109988,"byte_end":110061,"line_start":718,"line_end":718,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110066,"byte_end":110069,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This function does nothing if the current capacity is smaller than the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110074,"byte_end":110148,"line_start":720,"line_end":720,"column_start":5,"column_end":79}},{"value":"/ supplied minimum capacity.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110153,"byte_end":110183,"line_start":721,"line_end":721,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110188,"byte_end":110191,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110196,"byte_end":110210,"line_start":723,"line_end":723,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110215,"byte_end":110218,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110223,"byte_end":110230,"line_start":725,"line_end":725,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110235,"byte_end":110262,"line_start":726,"line_end":726,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110267,"byte_end":110270,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = HashMap::with_capacity(100);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110275,"byte_end":110340,"line_start":728,"line_end":728,"column_start":5,"column_end":70}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110345,"byte_end":110366,"line_start":729,"line_end":729,"column_start":5,"column_end":26}},{"value":"/ map.insert(3, 4);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110371,"byte_end":110392,"line_start":730,"line_end":730,"column_start":5,"column_end":26}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110397,"byte_end":110432,"line_start":731,"line_end":731,"column_start":5,"column_end":40}},{"value":"/ map.shrink_to(10);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110437,"byte_end":110459,"line_start":732,"line_end":732,"column_start":5,"column_end":27}},{"value":"/ assert!(map.capacity() >= 10);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110464,"byte_end":110498,"line_start":733,"line_end":733,"column_start":5,"column_end":39}},{"value":"/ map.shrink_to(0);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110503,"byte_end":110524,"line_start":734,"line_end":734,"column_start":5,"column_end":26}},{"value":"/ assert!(map.capacity() >= 2);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110529,"byte_end":110562,"line_start":735,"line_end":735,"column_start":5,"column_end":38}},{"value":"/ map.shrink_to(10);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110567,"byte_end":110589,"line_start":736,"line_end":736,"column_start":5,"column_end":27}},{"value":"/ assert!(map.capacity() >= 2);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110594,"byte_end":110627,"line_start":737,"line_end":737,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110632,"byte_end":110639,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110680,"byte_end":110686,"line_start":739,"line_end":739,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111504,"byte_end":111509,"line_start":766,"line_end":766,"column_start":12,"column_end":17},"name":"entry","qualname":"<HashMap<K, V, S>>::entry","value":"pub fn entry(&mut Self, K) -> Entry<, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place manipulation.","sig":null,"attributes":[{"value":"/ Gets the given key's corresponding entry in the map for in-place manipulation.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110894,"byte_end":110976,"line_start":746,"line_end":746,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110981,"byte_end":110984,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110989,"byte_end":111003,"line_start":748,"line_end":748,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111008,"byte_end":111011,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111016,"byte_end":111023,"line_start":750,"line_end":750,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111028,"byte_end":111055,"line_start":751,"line_end":751,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111060,"byte_end":111063,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ let mut letters = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111068,"byte_end":111105,"line_start":753,"line_end":753,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111110,"byte_end":111113,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ for ch in \"a short treatise on fungi\".chars() {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111118,"byte_end":111169,"line_start":755,"line_end":755,"column_start":5,"column_end":56}},{"value":"/     let counter = letters.entry(ch).or_insert(0);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111174,"byte_end":111227,"line_start":756,"line_end":756,"column_start":5,"column_end":58}},{"value":"/     *counter += 1;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111232,"byte_end":111254,"line_start":757,"line_end":757,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111259,"byte_end":111264,"line_start":758,"line_end":758,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111269,"byte_end":111272,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(letters[&'s'], 2);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111277,"byte_end":111310,"line_start":760,"line_end":760,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(letters[&'t'], 3);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111315,"byte_end":111348,"line_start":761,"line_end":761,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(letters[&'u'], 1);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111353,"byte_end":111386,"line_start":762,"line_end":762,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(letters.get(&'y'), None);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111391,"byte_end":111431,"line_start":763,"line_end":763,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111436,"byte_end":111443,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111484,"byte_end":111490,"line_start":765,"line_end":765,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112656,"byte_end":112659,"line_start":804,"line_end":804,"column_start":12,"column_end":15},"name":"get","qualname":"<HashMap<K, V, S>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&V> where K: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112008,"byte_end":112070,"line_start":784,"line_end":784,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112075,"byte_end":112078,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112083,"byte_end":112146,"line_start":786,"line_end":786,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112151,"byte_end":112218,"line_start":787,"line_end":787,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112223,"byte_end":112240,"line_start":788,"line_end":788,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112245,"byte_end":112248,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112253,"byte_end":112312,"line_start":790,"line_end":790,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112317,"byte_end":112381,"line_start":791,"line_end":791,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112386,"byte_end":112389,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112394,"byte_end":112408,"line_start":793,"line_end":793,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112413,"byte_end":112416,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112421,"byte_end":112428,"line_start":795,"line_end":795,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112433,"byte_end":112460,"line_start":796,"line_end":796,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112465,"byte_end":112468,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112473,"byte_end":112506,"line_start":798,"line_end":798,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112511,"byte_end":112534,"line_start":799,"line_end":799,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.get(&1), Some(&\"a\"));","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112539,"byte_end":112579,"line_start":800,"line_end":800,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map.get(&2), None);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112584,"byte_end":112618,"line_start":801,"line_end":801,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112623,"byte_end":112630,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112635,"byte_end":112644,"line_start":803,"line_end":803,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113626,"byte_end":113639,"line_start":836,"line_end":836,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<HashMap<K, V, S>>::get_key_value","value":"pub fn get_key_value<Q: ?Sized>(&Self, &Q) -> Option<(&K, &V)> where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns the key-value pair corresponding to the supplied key.","sig":null,"attributes":[{"value":"/ Returns the key-value pair corresponding to the supplied key.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112940,"byte_end":113005,"line_start":816,"line_end":816,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113010,"byte_end":113013,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ The supplied key may be any borrowed form of the map's key type, but","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113018,"byte_end":113090,"line_start":818,"line_end":818,"column_start":5,"column_end":77}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113095,"byte_end":113162,"line_start":819,"line_end":819,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113167,"byte_end":113184,"line_start":820,"line_end":820,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113189,"byte_end":113192,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113197,"byte_end":113256,"line_start":822,"line_end":822,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113261,"byte_end":113325,"line_start":823,"line_end":823,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113330,"byte_end":113333,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113338,"byte_end":113352,"line_start":825,"line_end":825,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113357,"byte_end":113360,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113365,"byte_end":113372,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113377,"byte_end":113404,"line_start":828,"line_end":828,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113409,"byte_end":113412,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113417,"byte_end":113450,"line_start":830,"line_end":830,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113455,"byte_end":113478,"line_start":831,"line_end":831,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.get_key_value(&1), Some((&1, &\"a\")));","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113483,"byte_end":113539,"line_start":832,"line_end":832,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(map.get_key_value(&2), None);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113544,"byte_end":113588,"line_start":833,"line_end":833,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113593,"byte_end":113600,"line_start":834,"line_end":834,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113605,"byte_end":113614,"line_start":835,"line_end":835,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115063,"byte_end":115080,"line_start":882,"line_end":882,"column_start":12,"column_end":29},"name":"get_key_value_mut","qualname":"<HashMap<K, V, S>>::get_key_value_mut","value":"pub fn get_key_value_mut<Q: ?Sized>(&mut Self, &Q) -> Option<(&K, &mut V)>\nwhere K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns the key-value pair corresponding to the supplied key, with a mutable reference to value.","sig":null,"attributes":[{"value":"/ Returns the key-value pair corresponding to the supplied key, with a mutable reference to value.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114195,"byte_end":114295,"line_start":858,"line_end":858,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114300,"byte_end":114303,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ The supplied key may be any borrowed form of the map's key type, but","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114308,"byte_end":114380,"line_start":860,"line_end":860,"column_start":5,"column_end":77}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114385,"byte_end":114452,"line_start":861,"line_end":861,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114457,"byte_end":114474,"line_start":862,"line_end":862,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114479,"byte_end":114482,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114487,"byte_end":114546,"line_start":864,"line_end":864,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114551,"byte_end":114615,"line_start":865,"line_end":865,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114620,"byte_end":114623,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114628,"byte_end":114642,"line_start":867,"line_end":867,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114647,"byte_end":114650,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114655,"byte_end":114662,"line_start":869,"line_end":869,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114667,"byte_end":114694,"line_start":870,"line_end":870,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114699,"byte_end":114702,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114707,"byte_end":114740,"line_start":872,"line_end":872,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114745,"byte_end":114768,"line_start":873,"line_end":873,"column_start":5,"column_end":28}},{"value":"/ let (k, v) = map.get_key_value_mut(&1).unwrap();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114773,"byte_end":114825,"line_start":874,"line_end":874,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(k, &1);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114830,"byte_end":114852,"line_start":875,"line_end":875,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(v, &mut \"a\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114857,"byte_end":114885,"line_start":876,"line_end":876,"column_start":5,"column_end":33}},{"value":"/ *v = \"b\";","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114890,"byte_end":114903,"line_start":877,"line_end":877,"column_start":5,"column_end":18}},{"value":"/ assert_eq!(map.get_key_value_mut(&1), Some((&1, &mut \"b\")));","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114908,"byte_end":114972,"line_start":878,"line_end":878,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(map.get_key_value_mut(&2), None);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114977,"byte_end":115025,"line_start":879,"line_end":879,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115030,"byte_end":115037,"line_start":880,"line_end":880,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115042,"byte_end":115051,"line_start":881,"line_end":881,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116111,"byte_end":116123,"line_start":914,"line_end":914,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<HashMap<K, V, S>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a value for the specified key.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115408,"byte_end":115477,"line_start":894,"line_end":894,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115482,"byte_end":115485,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115490,"byte_end":115553,"line_start":896,"line_end":896,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115558,"byte_end":115625,"line_start":897,"line_end":897,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115630,"byte_end":115647,"line_start":898,"line_end":898,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115652,"byte_end":115655,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115660,"byte_end":115719,"line_start":900,"line_end":900,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115724,"byte_end":115788,"line_start":901,"line_end":901,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115793,"byte_end":115796,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115801,"byte_end":115815,"line_start":903,"line_end":903,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115820,"byte_end":115823,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115828,"byte_end":115835,"line_start":905,"line_end":905,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115840,"byte_end":115867,"line_start":906,"line_end":906,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115872,"byte_end":115875,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115880,"byte_end":115913,"line_start":908,"line_end":908,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115918,"byte_end":115941,"line_start":909,"line_end":909,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115946,"byte_end":115989,"line_start":910,"line_end":910,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115994,"byte_end":116038,"line_start":911,"line_end":911,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116043,"byte_end":116050,"line_start":912,"line_end":912,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116091,"byte_end":116097,"line_start":913,"line_end":913,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116980,"byte_end":116987,"line_start":944,"line_end":944,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<HashMap<K, V, S>>::get_mut","value":"pub fn get_mut<Q: ?Sized>(&mut Self, &Q) -> Option<&mut V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value corresponding to the key.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116264,"byte_end":116334,"line_start":922,"line_end":922,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116339,"byte_end":116342,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116347,"byte_end":116410,"line_start":924,"line_end":924,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116415,"byte_end":116482,"line_start":925,"line_end":925,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116487,"byte_end":116504,"line_start":926,"line_end":926,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116509,"byte_end":116512,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116517,"byte_end":116576,"line_start":928,"line_end":928,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116581,"byte_end":116645,"line_start":929,"line_end":929,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116650,"byte_end":116653,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116658,"byte_end":116672,"line_start":931,"line_end":931,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116677,"byte_end":116680,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116685,"byte_end":116692,"line_start":933,"line_end":933,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116697,"byte_end":116724,"line_start":934,"line_end":934,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116729,"byte_end":116732,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116737,"byte_end":116770,"line_start":936,"line_end":936,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116775,"byte_end":116798,"line_start":937,"line_end":937,"column_start":5,"column_end":28}},{"value":"/ if let Some(x) = map.get_mut(&1) {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116803,"byte_end":116841,"line_start":938,"line_end":938,"column_start":5,"column_end":43}},{"value":"/     *x = \"b\";","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116846,"byte_end":116863,"line_start":939,"line_end":939,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116868,"byte_end":116873,"line_start":940,"line_end":940,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[&1], \"b\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116878,"byte_end":116907,"line_start":941,"line_end":941,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116912,"byte_end":116919,"line_start":942,"line_end":942,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116960,"byte_end":116966,"line_start":943,"line_end":943,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118527,"byte_end":118533,"line_start":992,"line_end":992,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashMap<K, V, S>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the map.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117552,"byte_end":117594,"line_start":966,"line_end":966,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117599,"byte_end":117602,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, [`None`] is returned.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117607,"byte_end":117674,"line_start":968,"line_end":968,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117679,"byte_end":117682,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the value is updated, and the old","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117687,"byte_end":117762,"line_start":970,"line_end":970,"column_start":5,"column_end":80}},{"value":"/ value is returned. The key is not updated, though; this matters for","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117767,"byte_end":117838,"line_start":971,"line_end":971,"column_start":5,"column_end":76}},{"value":"/ types that can be `==` without being identical. See the [module-level","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117843,"byte_end":117916,"line_start":972,"line_end":972,"column_start":5,"column_end":78}},{"value":"/ documentation] for more.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117921,"byte_end":117949,"line_start":973,"line_end":973,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117954,"byte_end":117957,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117962,"byte_end":118042,"line_start":975,"line_end":975,"column_start":5,"column_end":85}},{"value":"/ [module-level documentation]: index.html#insert-and-complex-keys","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118047,"byte_end":118115,"line_start":976,"line_end":976,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118120,"byte_end":118123,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118128,"byte_end":118142,"line_start":978,"line_end":978,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118147,"byte_end":118150,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118155,"byte_end":118162,"line_start":980,"line_end":980,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118167,"byte_end":118194,"line_start":981,"line_end":981,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118199,"byte_end":118202,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118207,"byte_end":118240,"line_start":983,"line_end":983,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(map.insert(37, \"a\"), None);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118245,"byte_end":118287,"line_start":984,"line_end":984,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.is_empty(), false);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118292,"byte_end":118330,"line_start":985,"line_end":985,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118335,"byte_end":118338,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, \"b\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118343,"byte_end":118367,"line_start":987,"line_end":987,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(map.insert(37, \"c\"), Some(\"b\"));","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118372,"byte_end":118419,"line_start":988,"line_end":988,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(map[&37], \"c\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118424,"byte_end":118454,"line_start":989,"line_end":989,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118459,"byte_end":118466,"line_start":990,"line_end":990,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118507,"byte_end":118513,"line_start":991,"line_end":991,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119679,"byte_end":119685,"line_start":1025,"line_end":1025,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashMap<K, V, S>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the value at the key if the key\n was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the value at the key if the key","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118945,"byte_end":119018,"line_start":1004,"line_end":1004,"column_start":5,"column_end":78}},{"value":"/ was previously in the map.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119023,"byte_end":119053,"line_start":1005,"line_end":1005,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119058,"byte_end":119061,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119066,"byte_end":119129,"line_start":1007,"line_end":1007,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119134,"byte_end":119201,"line_start":1008,"line_end":1008,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119206,"byte_end":119223,"line_start":1009,"line_end":1009,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119228,"byte_end":119231,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119236,"byte_end":119295,"line_start":1011,"line_end":1011,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119300,"byte_end":119364,"line_start":1012,"line_end":1012,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119369,"byte_end":119372,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119377,"byte_end":119391,"line_start":1014,"line_end":1014,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119396,"byte_end":119399,"line_start":1015,"line_end":1015,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119404,"byte_end":119411,"line_start":1016,"line_end":1016,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119416,"byte_end":119443,"line_start":1017,"line_end":1017,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119448,"byte_end":119451,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119456,"byte_end":119489,"line_start":1019,"line_end":1019,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119494,"byte_end":119517,"line_start":1020,"line_end":1020,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.remove(&1), Some(\"a\"));","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119522,"byte_end":119564,"line_start":1021,"line_end":1021,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.remove(&1), None);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119569,"byte_end":119606,"line_start":1022,"line_end":1022,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119611,"byte_end":119618,"line_start":1023,"line_end":1023,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119659,"byte_end":119665,"line_start":1024,"line_end":1024,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120716,"byte_end":120728,"line_start":1058,"line_end":1058,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<HashMap<K, V, S>>::remove_entry","value":"pub fn remove_entry<Q: ?Sized>(&mut Self, &Q) -> Option<(K, V)> where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stored key and value if the\n key was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the stored key and value if the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119967,"byte_end":120040,"line_start":1037,"line_end":1037,"column_start":5,"column_end":78}},{"value":"/ key was previously in the map.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120045,"byte_end":120079,"line_start":1038,"line_end":1038,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120084,"byte_end":120087,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120092,"byte_end":120155,"line_start":1040,"line_end":1040,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120160,"byte_end":120227,"line_start":1041,"line_end":1041,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120232,"byte_end":120249,"line_start":1042,"line_end":1042,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120254,"byte_end":120257,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120262,"byte_end":120321,"line_start":1044,"line_end":1044,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120326,"byte_end":120390,"line_start":1045,"line_end":1045,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120395,"byte_end":120398,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120403,"byte_end":120417,"line_start":1047,"line_end":1047,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120422,"byte_end":120425,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120430,"byte_end":120437,"line_start":1049,"line_end":1049,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120442,"byte_end":120469,"line_start":1050,"line_end":1050,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120474,"byte_end":120477,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120482,"byte_end":120515,"line_start":1052,"line_end":1052,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120520,"byte_end":120543,"line_start":1053,"line_end":1053,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.remove_entry(&1), Some((1, \"a\")));","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120548,"byte_end":120601,"line_start":1054,"line_end":1054,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.remove(&1), None);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120606,"byte_end":120643,"line_start":1055,"line_end":1055,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120648,"byte_end":120655,"line_start":1056,"line_end":1056,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120696,"byte_end":120702,"line_start":1057,"line_end":1057,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122938,"byte_end":122951,"line_start":1101,"line_end":1101,"column_start":12,"column_end":25},"name":"raw_entry_mut","qualname":"<HashMap<K, V, S>>::raw_entry_mut","value":"pub fn raw_entry_mut(&mut Self) -> RawEntryBuilderMut<, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a raw entry builder for the HashMap.","sig":null,"attributes":[{"value":"/ Creates a raw entry builder for the HashMap.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120998,"byte_end":121046,"line_start":1069,"line_end":1069,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121051,"byte_end":121054,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ Raw entries provide the lowest level of control for searching and","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121059,"byte_end":121128,"line_start":1071,"line_end":1071,"column_start":5,"column_end":74}},{"value":"/ manipulating a map. They must be manually initialized with a hash and","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121133,"byte_end":121206,"line_start":1072,"line_end":1072,"column_start":5,"column_end":78}},{"value":"/ then manually searched. After this, insertions into a vacant entry","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121211,"byte_end":121281,"line_start":1073,"line_end":1073,"column_start":5,"column_end":75}},{"value":"/ still require an owned key to be provided.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121286,"byte_end":121332,"line_start":1074,"line_end":1074,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121337,"byte_end":121340,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ Raw entries are useful for such exotic situations as:","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121345,"byte_end":121402,"line_start":1076,"line_end":1076,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121407,"byte_end":121410,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ * Hash memoization","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121415,"byte_end":121437,"line_start":1078,"line_end":1078,"column_start":5,"column_end":27}},{"value":"/ * Deferring the creation of an owned key until it is known to be required","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121442,"byte_end":121519,"line_start":1079,"line_end":1079,"column_start":5,"column_end":82}},{"value":"/ * Using a search key that doesn't work with the Borrow trait","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121524,"byte_end":121588,"line_start":1080,"line_end":1080,"column_start":5,"column_end":69}},{"value":"/ * Using custom comparison logic without newtype wrappers","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121593,"byte_end":121653,"line_start":1081,"line_end":1081,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121658,"byte_end":121661,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ Because raw entries provide much more low-level control, it's much easier","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121666,"byte_end":121743,"line_start":1083,"line_end":1083,"column_start":5,"column_end":82}},{"value":"/ to put the HashMap into an inconsistent state which, while memory-safe,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121748,"byte_end":121823,"line_start":1084,"line_end":1084,"column_start":5,"column_end":80}},{"value":"/ will cause the map to produce seemingly random results. Higher-level and","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121828,"byte_end":121904,"line_start":1085,"line_end":1085,"column_start":5,"column_end":81}},{"value":"/ more foolproof APIs like `entry` should be preferred when possible.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121909,"byte_end":121980,"line_start":1086,"line_end":1086,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121985,"byte_end":121988,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ In particular, the hash used to initialized the raw entry must still be","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121993,"byte_end":122068,"line_start":1088,"line_end":1088,"column_start":5,"column_end":80}},{"value":"/ consistent with the hash of the key that is ultimately stored in the entry.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122073,"byte_end":122152,"line_start":1089,"line_end":1089,"column_start":5,"column_end":84}},{"value":"/ This is because implementations of HashMap may need to recompute hashes","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122157,"byte_end":122232,"line_start":1090,"line_end":1090,"column_start":5,"column_end":80}},{"value":"/ when resizing, at which point only the keys are available.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122237,"byte_end":122299,"line_start":1091,"line_end":1091,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122304,"byte_end":122307,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ Raw entries give mutable access to the keys. This must not be used","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122312,"byte_end":122382,"line_start":1093,"line_end":1093,"column_start":5,"column_end":75}},{"value":"/ to modify how the key would compare or hash, as the map will not re-evaluate","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122387,"byte_end":122467,"line_start":1094,"line_end":1094,"column_start":5,"column_end":85}},{"value":"/ where the key should go, meaning the keys may become \"lost\" if their","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122472,"byte_end":122544,"line_start":1095,"line_end":1095,"column_start":5,"column_end":77}},{"value":"/ location does not reflect their state. For instance, if you change a key","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122549,"byte_end":122625,"line_start":1096,"line_end":1096,"column_start":5,"column_end":81}},{"value":"/ so that the map now contains keys which compare equal, search may start","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122630,"byte_end":122705,"line_start":1097,"line_end":1097,"column_start":5,"column_end":80}},{"value":"/ acting erratically, with two keys randomly masking each other. Implementations","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122710,"byte_end":122792,"line_start":1098,"line_end":1098,"column_start":5,"column_end":87}},{"value":"/ are free to assume this doesn't happen (within the limits of memory-safety).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122797,"byte_end":122877,"line_start":1099,"line_end":1099,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122918,"byte_end":122924,"line_start":1100,"line_end":1100,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123789,"byte_end":123798,"line_start":1121,"line_end":1121,"column_start":12,"column_end":21},"name":"raw_entry","qualname":"<HashMap<K, V, S>>::raw_entry","value":"pub fn raw_entry(&Self) -> RawEntryBuilder<, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a raw immutable entry builder for the HashMap.","sig":null,"attributes":[{"value":"/ Creates a raw immutable entry builder for the HashMap.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123052,"byte_end":123110,"line_start":1105,"line_end":1105,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123115,"byte_end":123118,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ Raw entries provide the lowest level of control for searching and","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123123,"byte_end":123192,"line_start":1107,"line_end":1107,"column_start":5,"column_end":74}},{"value":"/ manipulating a map. They must be manually initialized with a hash and","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123197,"byte_end":123270,"line_start":1108,"line_end":1108,"column_start":5,"column_end":78}},{"value":"/ then manually searched.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123275,"byte_end":123302,"line_start":1109,"line_end":1109,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123307,"byte_end":123310,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ This is useful for","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123315,"byte_end":123337,"line_start":1111,"line_end":1111,"column_start":5,"column_end":27}},{"value":"/ * Hash memoization","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123342,"byte_end":123364,"line_start":1112,"line_end":1112,"column_start":5,"column_end":27}},{"value":"/ * Using a search key that doesn't work with the Borrow trait","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123369,"byte_end":123433,"line_start":1113,"line_end":1113,"column_start":5,"column_end":69}},{"value":"/ * Using custom comparison logic without newtype wrappers","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123438,"byte_end":123498,"line_start":1114,"line_end":1114,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123503,"byte_end":123506,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ Unless you are in such a situation, higher-level and more foolproof APIs like","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123511,"byte_end":123592,"line_start":1116,"line_end":1116,"column_start":5,"column_end":86}},{"value":"/ `get` should be preferred.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123597,"byte_end":123627,"line_start":1117,"line_end":1117,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123632,"byte_end":123635,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ Immutable raw entries have very limited use; you might instead want `raw_entry_mut`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123640,"byte_end":123728,"line_start":1119,"line_end":1119,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123769,"byte_end":123775,"line_start":1120,"line_end":1120,"column_start":41,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":673},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":125532,"byte_end":125536,"line_start":1197,"line_end":1197,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678}],"decl_id":null,"docs":" An iterator over the entries of a `HashMap`.","sig":null,"attributes":[{"value":"/ An iterator over the entries of a `HashMap`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":125277,"byte_end":125325,"line_start":1190,"line_end":1190,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":125326,"byte_end":125329,"line_start":1191,"line_end":1191,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`HashMap`]. See its","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":125330,"byte_end":125405,"line_start":1192,"line_end":1192,"column_start":1,"column_end":76}},{"value":"/ documentation for more.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":125406,"byte_end":125433,"line_start":1193,"line_end":1193,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":125434,"byte_end":125437,"line_start":1194,"line_end":1194,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: struct.HashMap.html#method.iter","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":125438,"byte_end":125483,"line_start":1195,"line_end":1195,"column_start":1,"column_end":46}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":125484,"byte_end":125520,"line_start":1196,"line_end":1196,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":687},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126356,"byte_end":126363,"line_start":1226,"line_end":1226,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":691},{"krate":0,"index":692}],"decl_id":null,"docs":" A mutable iterator over the entries of a `HashMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the entries of a `HashMap`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126082,"byte_end":126137,"line_start":1219,"line_end":1219,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126138,"byte_end":126141,"line_start":1220,"line_end":1220,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter_mut`] method on [`HashMap`]. See its","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126142,"byte_end":126221,"line_start":1221,"line_end":1221,"column_start":1,"column_end":80}},{"value":"/ documentation for more.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126222,"byte_end":126249,"line_start":1222,"line_end":1222,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126250,"byte_end":126253,"line_start":1223,"line_end":1223,"column_start":1,"column_end":4}},{"value":"/ [`iter_mut`]: struct.HashMap.html#method.iter_mut","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126254,"byte_end":126307,"line_start":1224,"line_end":1224,"column_start":1,"column_end":54}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126308,"byte_end":126344,"line_start":1225,"line_end":1225,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":700},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127362,"byte_end":127370,"line_start":1255,"line_end":1255,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":703}],"decl_id":null,"docs":" An owning iterator over the entries of a `HashMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the entries of a `HashMap`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127046,"byte_end":127101,"line_start":1248,"line_end":1248,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127102,"byte_end":127105,"line_start":1249,"line_end":1249,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`HashMap`]","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127106,"byte_end":127177,"line_start":1250,"line_end":1250,"column_start":1,"column_end":72}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127178,"byte_end":127253,"line_start":1251,"line_end":1251,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127254,"byte_end":127257,"line_start":1252,"line_end":1252,"column_start":1,"column_end":4}},{"value":"/ [`into_iter`]: struct.HashMap.html#method.into_iter","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127258,"byte_end":127313,"line_start":1253,"line_end":1253,"column_start":1,"column_end":56}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127314,"byte_end":127350,"line_start":1254,"line_end":1254,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":708},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127965,"byte_end":127969,"line_start":1277,"line_end":1277,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":712}],"decl_id":null,"docs":" An iterator over the keys of a `HashMap`.","sig":null,"attributes":[{"value":"/ An iterator over the keys of a `HashMap`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127713,"byte_end":127758,"line_start":1270,"line_end":1270,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127759,"byte_end":127762,"line_start":1271,"line_end":1271,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`keys`] method on [`HashMap`]. See its","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127763,"byte_end":127838,"line_start":1272,"line_end":1272,"column_start":1,"column_end":76}},{"value":"/ documentation for more.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127839,"byte_end":127866,"line_start":1273,"line_end":1273,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127867,"byte_end":127870,"line_start":1274,"line_end":1274,"column_start":1,"column_end":4}},{"value":"/ [`keys`]: struct.HashMap.html#method.keys","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127871,"byte_end":127916,"line_start":1275,"line_end":1275,"column_start":1,"column_end":46}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127917,"byte_end":127953,"line_start":1276,"line_end":1276,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":721},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128693,"byte_end":128699,"line_start":1304,"line_end":1304,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":725}],"decl_id":null,"docs":" An iterator over the values of a `HashMap`.","sig":null,"attributes":[{"value":"/ An iterator over the values of a `HashMap`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128433,"byte_end":128480,"line_start":1297,"line_end":1297,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128481,"byte_end":128484,"line_start":1298,"line_end":1298,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values`] method on [`HashMap`]. See its","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128485,"byte_end":128562,"line_start":1299,"line_end":1299,"column_start":1,"column_end":78}},{"value":"/ documentation for more.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128563,"byte_end":128590,"line_start":1300,"line_end":1300,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128591,"byte_end":128594,"line_start":1301,"line_end":1301,"column_start":1,"column_end":4}},{"value":"/ [`values`]: struct.HashMap.html#method.values","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128595,"byte_end":128644,"line_start":1302,"line_end":1302,"column_start":1,"column_end":50}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128645,"byte_end":128681,"line_start":1303,"line_end":1303,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":734},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":129435,"byte_end":129440,"line_start":1331,"line_end":1331,"column_start":12,"column_end":17},"name":"Drain","qualname":"::map::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":738}],"decl_id":null,"docs":" A draining iterator over the entries of a `HashMap`.","sig":null,"attributes":[{"value":"/ A draining iterator over the entries of a `HashMap`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":129169,"byte_end":129225,"line_start":1324,"line_end":1324,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":129226,"byte_end":129229,"line_start":1325,"line_end":1325,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`HashMap`]. See its","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":129230,"byte_end":129306,"line_start":1326,"line_end":1326,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":129307,"byte_end":129334,"line_start":1327,"line_end":1327,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":129335,"byte_end":129338,"line_start":1328,"line_end":1328,"column_start":1,"column_end":4}},{"value":"/ [`drain`]: struct.HashMap.html#method.drain","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":129339,"byte_end":129386,"line_start":1329,"line_end":1329,"column_start":1,"column_end":48}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":129387,"byte_end":129423,"line_start":1330,"line_end":1330,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":743},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":130110,"byte_end":130121,"line_start":1353,"line_end":1353,"column_start":12,"column_end":23},"name":"DrainFilter","qualname":"::map::DrainFilter","value":"DrainFilter {  }","parent":null,"children":[{"krate":0,"index":748},{"krate":0,"index":749}],"decl_id":null,"docs":" A draining iterator over entries of a `HashMap` which don't satisfy the predicate `f`.","sig":null,"attributes":[{"value":"/ A draining iterator over entries of a `HashMap` which don't satisfy the predicate `f`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":129789,"byte_end":129879,"line_start":1346,"line_end":1346,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":129880,"byte_end":129883,"line_start":1347,"line_end":1347,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain_filter`] method on [`HashMap`]. See its","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":129884,"byte_end":129967,"line_start":1348,"line_end":1348,"column_start":1,"column_end":84}},{"value":"/ documentation for more.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":129968,"byte_end":129995,"line_start":1349,"line_end":1349,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":129996,"byte_end":129999,"line_start":1350,"line_end":1350,"column_start":1,"column_end":4}},{"value":"/ [`drain_filter`]: struct.HashMap.html#method.drain_filter","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":130000,"byte_end":130061,"line_start":1351,"line_end":1351,"column_start":1,"column_end":62}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":130062,"byte_end":130098,"line_start":1352,"line_end":1352,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":786},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132239,"byte_end":132248,"line_start":1434,"line_end":1434,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":790}],"decl_id":null,"docs":" A mutable iterator over the values of a `HashMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the values of a `HashMap`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":131960,"byte_end":132014,"line_start":1427,"line_end":1427,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132015,"byte_end":132018,"line_start":1428,"line_end":1428,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values_mut`] method on [`HashMap`]. See its","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132019,"byte_end":132100,"line_start":1429,"line_end":1429,"column_start":1,"column_end":82}},{"value":"/ documentation for more.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132101,"byte_end":132128,"line_start":1430,"line_end":1430,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132129,"byte_end":132132,"line_start":1431,"line_end":1431,"column_start":1,"column_end":4}},{"value":"/ [`values_mut`]: struct.HashMap.html#method.values_mut","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132133,"byte_end":132190,"line_start":1432,"line_end":1432,"column_start":1,"column_end":58}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132191,"byte_end":132227,"line_start":1433,"line_end":1433,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":791},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132535,"byte_end":132553,"line_start":1443,"line_end":1443,"column_start":12,"column_end":30},"name":"RawEntryBuilderMut","qualname":"::map::RawEntryBuilderMut","value":"RawEntryBuilderMut {  }","parent":null,"children":[{"krate":0,"index":796}],"decl_id":null,"docs":" A builder for computing where in a [`HashMap`] a key-value pair would be stored.","sig":null,"attributes":[{"value":"/ A builder for computing where in a [`HashMap`] a key-value pair would be stored.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132294,"byte_end":132378,"line_start":1438,"line_end":1438,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132379,"byte_end":132382,"line_start":1439,"line_end":1439,"column_start":1,"column_end":4}},{"value":"/ See the [`HashMap::raw_entry_mut`] docs for usage examples.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132383,"byte_end":132446,"line_start":1440,"line_end":1440,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132447,"byte_end":132450,"line_start":1441,"line_end":1441,"column_start":1,"column_end":4}},{"value":"/ [`HashMap::raw_entry_mut`]: struct.HashMap.html#method.raw_entry_mut","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132451,"byte_end":132523,"line_start":1442,"line_end":1442,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":802},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133158,"byte_end":133166,"line_start":1460,"line_end":1460,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::RawEntryMut::Occupied","value":"RawEntryMut::Occupied(RawOccupiedEntryMut)","parent":{"krate":0,"index":797},"children":[],"decl_id":null,"docs":" An occupied entry.\n","sig":null,"attributes":[{"value":"/ An occupied entry.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133131,"byte_end":133153,"line_start":1459,"line_end":1459,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":805},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133230,"byte_end":133236,"line_start":1462,"line_end":1462,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::RawEntryMut::Vacant","value":"RawEntryMut::Vacant(RawVacantEntryMut)","parent":{"krate":0,"index":797},"children":[],"decl_id":null,"docs":" A vacant entry.\n","sig":null,"attributes":[{"value":"/ A vacant entry.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133206,"byte_end":133225,"line_start":1461,"line_end":1461,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":797},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133100,"byte_end":133111,"line_start":1458,"line_end":1458,"column_start":10,"column_end":21},"name":"RawEntryMut","qualname":"::map::RawEntryMut","value":"pub enum RawEntryMut<'a, K, V, S> {\n    Occupied(RawOccupiedEntryMut),\n    Vacant(RawVacantEntryMut),\n}","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":805}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132607,"byte_end":132687,"line_start":1447,"line_end":1447,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132688,"byte_end":132691,"line_start":1448,"line_end":1448,"column_start":1,"column_end":4}},{"value":"/ This is a lower-level version of [`Entry`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132692,"byte_end":132739,"line_start":1449,"line_end":1449,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132740,"byte_end":132743,"line_start":1450,"line_end":1450,"column_start":1,"column_end":4}},{"value":"/ This `enum` is constructed through the [`raw_entry_mut`] method on [`HashMap`],","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132744,"byte_end":132827,"line_start":1451,"line_end":1451,"column_start":1,"column_end":84}},{"value":"/ then calling one of the methods of that [`RawEntryBuilderMut`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132828,"byte_end":132895,"line_start":1452,"line_end":1452,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132896,"byte_end":132899,"line_start":1453,"line_end":1453,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132900,"byte_end":132936,"line_start":1454,"line_end":1454,"column_start":1,"column_end":37}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132937,"byte_end":132967,"line_start":1455,"line_end":1455,"column_start":1,"column_end":31}},{"value":"/ [`raw_entry_mut`]: struct.HashMap.html#method.raw_entry_mut","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132968,"byte_end":133031,"line_start":1456,"line_end":1456,"column_start":1,"column_end":64}},{"value":"/ [`RawEntryBuilderMut`]: struct.RawEntryBuilderMut.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133032,"byte_end":133090,"line_start":1457,"line_end":1457,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":808},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133425,"byte_end":133444,"line_start":1469,"line_end":1469,"column_start":12,"column_end":31},"name":"RawOccupiedEntryMut","qualname":"::map::RawOccupiedEntryMut","value":"RawOccupiedEntryMut {  }","parent":null,"children":[{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815}],"decl_id":null,"docs":" A view into an occupied entry in a `HashMap`.\n It is part of the [`RawEntryMut`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `HashMap`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133273,"byte_end":133322,"line_start":1465,"line_end":1465,"column_start":1,"column_end":50}},{"value":"/ It is part of the [`RawEntryMut`] enum.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133323,"byte_end":133366,"line_start":1466,"line_end":1466,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133367,"byte_end":133370,"line_start":1467,"line_end":1467,"column_start":1,"column_end":4}},{"value":"/ [`RawEntryMut`]: enum.RawEntryMut.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133371,"byte_end":133413,"line_start":1468,"line_end":1468,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":824},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133925,"byte_end":133942,"line_start":1494,"line_end":1494,"column_start":12,"column_end":29},"name":"RawVacantEntryMut","qualname":"::map::RawVacantEntryMut","value":"RawVacantEntryMut {  }","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830}],"decl_id":null,"docs":" A view into a vacant entry in a `HashMap`.\n It is part of the [`RawEntryMut`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `HashMap`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133776,"byte_end":133822,"line_start":1490,"line_end":1490,"column_start":1,"column_end":47}},{"value":"/ It is part of the [`RawEntryMut`] enum.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133823,"byte_end":133866,"line_start":1491,"line_end":1491,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133867,"byte_end":133870,"line_start":1492,"line_end":1492,"column_start":1,"column_end":4}},{"value":"/ [`RawEntryMut`]: enum.RawEntryMut.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133871,"byte_end":133913,"line_start":1493,"line_end":1493,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":831},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134252,"byte_end":134267,"line_start":1504,"line_end":1504,"column_start":12,"column_end":27},"name":"RawEntryBuilder","qualname":"::map::RawEntryBuilder","value":"RawEntryBuilder {  }","parent":null,"children":[{"krate":0,"index":836}],"decl_id":null,"docs":" A builder for computing where in a [`HashMap`] a key-value pair would be stored.","sig":null,"attributes":[{"value":"/ A builder for computing where in a [`HashMap`] a key-value pair would be stored.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134023,"byte_end":134107,"line_start":1499,"line_end":1499,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134108,"byte_end":134111,"line_start":1500,"line_end":1500,"column_start":1,"column_end":4}},{"value":"/ See the [`HashMap::raw_entry`] docs for usage examples.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134112,"byte_end":134171,"line_start":1501,"line_end":1501,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134172,"byte_end":134175,"line_start":1502,"line_end":1502,"column_start":1,"column_end":4}},{"value":"/ [`HashMap::raw_entry`]: struct.HashMap.html#method.raw_entry","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134176,"byte_end":134240,"line_start":1503,"line_end":1503,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134525,"byte_end":134533,"line_start":1512,"line_end":1512,"column_start":12,"column_end":20},"name":"from_key","qualname":"<RawEntryBuilderMut>::from_key","value":"pub fn from_key<Q: ?Sized>(Self, &Q) -> RawEntryMut where S: BuildHasher,\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given key.\n","sig":null,"attributes":[{"value":"/ Creates a `RawEntryMut` from the given key.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134373,"byte_end":134420,"line_start":1509,"line_end":1509,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134461,"byte_end":134467,"line_start":1510,"line_end":1510,"column_start":41,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134474,"byte_end":134513,"line_start":1511,"line_end":1511,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134960,"byte_end":134983,"line_start":1526,"line_end":1526,"column_start":12,"column_end":35},"name":"from_key_hashed_nocheck","qualname":"<RawEntryBuilderMut>::from_key_hashed_nocheck","value":"pub fn from_key_hashed_nocheck<Q: ?Sized>(Self, u64, &Q) -> RawEntryMut where\nK: Borrow<Q>, Q: Eq","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given key and its hash.\n","sig":null,"attributes":[{"value":"/ Creates a `RawEntryMut` from the given key and its hash.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134830,"byte_end":134890,"line_start":1523,"line_end":1523,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134895,"byte_end":134904,"line_start":1524,"line_end":1524,"column_start":5,"column_end":14}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134909,"byte_end":134948,"line_start":1525,"line_end":1525,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":135369,"byte_end":135378,"line_start":1539,"line_end":1539,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RawEntryBuilderMut>::from_hash","value":"pub fn from_hash<F>(Self, u64, F) -> RawEntryMut where for<'b> F: FnMut(&'b K)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given hash.\n","sig":null,"attributes":[{"value":"/ Creates a `RawEntryMut` from the given hash.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":135216,"byte_end":135264,"line_start":1536,"line_end":1536,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":135305,"byte_end":135311,"line_start":1537,"line_end":1537,"column_start":41,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":135318,"byte_end":135357,"line_start":1538,"line_end":1538,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136373,"byte_end":136381,"line_start":1569,"line_end":1569,"column_start":12,"column_end":20},"name":"from_key","qualname":"<RawEntryBuilder>::from_key","value":"pub fn from_key<Q: ?Sized>(Self, &Q) -> Option<(&'a K, &'a V)> where\nS: BuildHasher, K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by key.\n","sig":null,"attributes":[{"value":"/ Access an entry by key.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136241,"byte_end":136268,"line_start":1566,"line_end":1566,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136309,"byte_end":136315,"line_start":1567,"line_end":1567,"column_start":41,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136322,"byte_end":136361,"line_start":1568,"line_end":1568,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136823,"byte_end":136846,"line_start":1583,"line_end":1583,"column_start":12,"column_end":35},"name":"from_key_hashed_nocheck","qualname":"<RawEntryBuilder>::from_key_hashed_nocheck","value":"pub fn from_key_hashed_nocheck<Q: ?Sized>(Self, u64, &Q)\n-> Option<(&'a K, &'a V)> where K: Borrow<Q>, Q: Eq","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by a key and its hash.\n","sig":null,"attributes":[{"value":"/ Access an entry by a key and its hash.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136676,"byte_end":136718,"line_start":1580,"line_end":1580,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136759,"byte_end":136765,"line_start":1581,"line_end":1581,"column_start":41,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136772,"byte_end":136811,"line_start":1582,"line_end":1582,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137497,"byte_end":137506,"line_start":1605,"line_end":1605,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RawEntryBuilder>::from_hash","value":"pub fn from_hash<F>(Self, u64, F) -> Option<(&'a K, &'a V)> where F: FnMut(&K)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by hash.\n","sig":null,"attributes":[{"value":"/ Access an entry by hash.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137364,"byte_end":137392,"line_start":1602,"line_end":1602,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137433,"byte_end":137439,"line_start":1603,"line_end":1603,"column_start":41,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137446,"byte_end":137485,"line_start":1604,"line_end":1604,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138150,"byte_end":138156,"line_start":1627,"line_end":1627,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawEntryMut>::insert","value":"pub fn insert(Self, K, V) -> RawOccupiedEntryMut where K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns a RawOccupiedEntryMut.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns a RawOccupiedEntryMut.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137706,"byte_end":137773,"line_start":1614,"line_end":1614,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137778,"byte_end":137781,"line_start":1615,"line_end":1615,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137786,"byte_end":137800,"line_start":1616,"line_end":1616,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137805,"byte_end":137808,"line_start":1617,"line_end":1617,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137813,"byte_end":137820,"line_start":1618,"line_end":1618,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137825,"byte_end":137852,"line_start":1619,"line_end":1619,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137857,"byte_end":137860,"line_start":1620,"line_end":1620,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137865,"byte_end":137918,"line_start":1621,"line_end":1621,"column_start":5,"column_end":58}},{"value":"/ let entry = map.raw_entry_mut().from_key(\"horseyland\").insert(\"horseyland\", 37);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137923,"byte_end":138007,"line_start":1622,"line_end":1622,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138012,"byte_end":138015,"line_start":1623,"line_end":1623,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(entry.remove_entry(), (\"horseyland\", 37));","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138020,"byte_end":138077,"line_start":1624,"line_end":1624,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138082,"byte_end":138089,"line_start":1625,"line_end":1625,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138130,"byte_end":138136,"line_start":1626,"line_end":1626,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139136,"byte_end":139145,"line_start":1658,"line_end":1658,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<RawEntryMut>::or_insert","value":"pub fn or_insert(Self, K, V) -> (&'a mut K, &'a mut V) where K: Hash,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n mutable references to the key and value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138513,"byte_end":138595,"line_start":1641,"line_end":1641,"column_start":5,"column_end":87}},{"value":"/ mutable references to the key and value in the entry.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138600,"byte_end":138657,"line_start":1642,"line_end":1642,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138662,"byte_end":138665,"line_start":1643,"line_end":1643,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138670,"byte_end":138684,"line_start":1644,"line_end":1644,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138689,"byte_end":138692,"line_start":1645,"line_end":1645,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138697,"byte_end":138704,"line_start":1646,"line_end":1646,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138709,"byte_end":138736,"line_start":1647,"line_end":1647,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138741,"byte_end":138744,"line_start":1648,"line_end":1648,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138749,"byte_end":138802,"line_start":1649,"line_end":1649,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138807,"byte_end":138810,"line_start":1650,"line_end":1650,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut().from_key(\"poneyland\").or_insert(\"poneyland\", 3);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138815,"byte_end":138887,"line_start":1651,"line_end":1651,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(map[\"poneyland\"], 3);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138892,"byte_end":138928,"line_start":1652,"line_end":1652,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138933,"byte_end":138936,"line_start":1653,"line_end":1653,"column_start":5,"column_end":8}},{"value":"/ *map.raw_entry_mut().from_key(\"poneyland\").or_insert(\"poneyland\", 10).1 *= 2;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138941,"byte_end":139022,"line_start":1654,"line_end":1654,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(map[\"poneyland\"], 6);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139027,"byte_end":139063,"line_start":1655,"line_end":1655,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139068,"byte_end":139075,"line_start":1656,"line_end":1656,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139116,"byte_end":139122,"line_start":1657,"line_end":1657,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140049,"byte_end":140063,"line_start":1686,"line_end":1686,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<RawEntryMut>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> (&'a mut K, &'a mut V) where F: FnOnce()\n-> (K, V), K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns mutable references to the key and value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139459,"byte_end":139552,"line_start":1669,"line_end":1669,"column_start":5,"column_end":98}},{"value":"/ and returns mutable references to the key and value in the entry.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139557,"byte_end":139626,"line_start":1670,"line_end":1670,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139631,"byte_end":139634,"line_start":1671,"line_end":1671,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139639,"byte_end":139653,"line_start":1672,"line_end":1672,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139658,"byte_end":139661,"line_start":1673,"line_end":1673,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139666,"byte_end":139673,"line_start":1674,"line_end":1674,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139678,"byte_end":139705,"line_start":1675,"line_end":1675,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139710,"byte_end":139713,"line_start":1676,"line_end":1676,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, String> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139718,"byte_end":139774,"line_start":1677,"line_end":1677,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139779,"byte_end":139782,"line_start":1678,"line_end":1678,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut().from_key(\"poneyland\").or_insert_with(|| {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139787,"byte_end":139852,"line_start":1679,"line_end":1679,"column_start":5,"column_end":70}},{"value":"/     (\"poneyland\", \"hoho\".to_string())","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139857,"byte_end":139898,"line_start":1680,"line_end":1680,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139903,"byte_end":139910,"line_start":1681,"line_end":1681,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139915,"byte_end":139918,"line_start":1682,"line_end":1682,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], \"hoho\".to_string());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139923,"byte_end":139976,"line_start":1683,"line_end":1683,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139981,"byte_end":139988,"line_start":1684,"line_end":1684,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140029,"byte_end":140035,"line_start":1685,"line_end":1685,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":141159,"byte_end":141169,"line_start":1724,"line_end":1724,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<RawEntryMut>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut K, &mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.","sig":null,"attributes":[{"value":"/ Provides in-place mutable access to an occupied entry before any","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140442,"byte_end":140510,"line_start":1701,"line_end":1701,"column_start":5,"column_end":73}},{"value":"/ potential inserts into the map.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140515,"byte_end":140550,"line_start":1702,"line_end":1702,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140555,"byte_end":140558,"line_start":1703,"line_end":1703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140563,"byte_end":140577,"line_start":1704,"line_end":1704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140582,"byte_end":140585,"line_start":1705,"line_end":1705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140590,"byte_end":140597,"line_start":1706,"line_end":1706,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140602,"byte_end":140629,"line_start":1707,"line_end":1707,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140634,"byte_end":140637,"line_start":1708,"line_end":1708,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140642,"byte_end":140695,"line_start":1709,"line_end":1709,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140700,"byte_end":140703,"line_start":1710,"line_end":1710,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut()","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140708,"byte_end":140731,"line_start":1711,"line_end":1711,"column_start":5,"column_end":28}},{"value":"/    .from_key(\"poneyland\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140736,"byte_end":140765,"line_start":1712,"line_end":1712,"column_start":5,"column_end":34}},{"value":"/    .and_modify(|_k, v| { *v += 1 })","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140770,"byte_end":140809,"line_start":1713,"line_end":1713,"column_start":5,"column_end":44}},{"value":"/    .or_insert(\"poneyland\", 42);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140814,"byte_end":140849,"line_start":1714,"line_end":1714,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(map[\"poneyland\"], 42);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140854,"byte_end":140891,"line_start":1715,"line_end":1715,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140896,"byte_end":140899,"line_start":1716,"line_end":1716,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut()","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140904,"byte_end":140927,"line_start":1717,"line_end":1717,"column_start":5,"column_end":28}},{"value":"/    .from_key(\"poneyland\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140932,"byte_end":140961,"line_start":1718,"line_end":1718,"column_start":5,"column_end":34}},{"value":"/    .and_modify(|_k, v| { *v += 1 })","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140966,"byte_end":141005,"line_start":1719,"line_end":1719,"column_start":5,"column_end":44}},{"value":"/    .or_insert(\"poneyland\", 0);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":141010,"byte_end":141044,"line_start":1720,"line_end":1720,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":141049,"byte_end":141086,"line_start":1721,"line_end":1721,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":141091,"byte_end":141098,"line_start":1722,"line_end":1722,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":141139,"byte_end":141145,"line_start":1723,"line_end":1723,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":143255,"byte_end":143277,"line_start":1796,"line_end":1796,"column_start":12,"column_end":34},"name":"and_replace_entry_with","qualname":"<RawEntryMut>::and_replace_entry_with","value":"pub fn and_replace_entry_with<F>(Self, F) -> Self where F: FnOnce(&K, V) ->\nOption<V>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n an occupied entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":141590,"byte_end":141660,"line_start":1740,"line_end":1740,"column_start":5,"column_end":75}},{"value":"/ an occupied entry and allows to replace or remove it based on the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":141665,"byte_end":141734,"line_start":1741,"line_end":1741,"column_start":5,"column_end":74}},{"value":"/ value of the returned option.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":141739,"byte_end":141772,"line_start":1742,"line_end":1742,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":141777,"byte_end":141780,"line_start":1743,"line_end":1743,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":141785,"byte_end":141799,"line_start":1744,"line_end":1744,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":141804,"byte_end":141807,"line_start":1745,"line_end":1745,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":141812,"byte_end":141819,"line_start":1746,"line_end":1746,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":141824,"byte_end":141851,"line_start":1747,"line_end":1747,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::RawEntryMut;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":141856,"byte_end":141897,"line_start":1748,"line_end":1748,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":141902,"byte_end":141905,"line_start":1749,"line_end":1749,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":141910,"byte_end":141963,"line_start":1750,"line_end":1750,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":141968,"byte_end":141971,"line_start":1751,"line_end":1751,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":141976,"byte_end":141995,"line_start":1752,"line_end":1752,"column_start":5,"column_end":24}},{"value":"/     .raw_entry_mut()","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142000,"byte_end":142024,"line_start":1753,"line_end":1753,"column_start":5,"column_end":29}},{"value":"/     .from_key(\"poneyland\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142029,"byte_end":142059,"line_start":1754,"line_end":1754,"column_start":5,"column_end":35}},{"value":"/     .and_replace_entry_with(|_k, _v| panic!());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142064,"byte_end":142115,"line_start":1755,"line_end":1755,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142120,"byte_end":142123,"line_start":1756,"line_end":1756,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142128,"byte_end":142145,"line_start":1757,"line_end":1757,"column_start":5,"column_end":22}},{"value":"/     RawEntryMut::Vacant(_) => {},","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142150,"byte_end":142187,"line_start":1758,"line_end":1758,"column_start":5,"column_end":42}},{"value":"/     RawEntryMut::Occupied(_) => panic!(),","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142192,"byte_end":142237,"line_start":1759,"line_end":1759,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142242,"byte_end":142247,"line_start":1760,"line_end":1760,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142252,"byte_end":142255,"line_start":1761,"line_end":1761,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"poneyland\", 42);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142260,"byte_end":142292,"line_start":1762,"line_end":1762,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142297,"byte_end":142300,"line_start":1763,"line_end":1763,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142305,"byte_end":142324,"line_start":1764,"line_end":1764,"column_start":5,"column_end":24}},{"value":"/     .raw_entry_mut()","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142329,"byte_end":142353,"line_start":1765,"line_end":1765,"column_start":5,"column_end":29}},{"value":"/     .from_key(\"poneyland\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142358,"byte_end":142388,"line_start":1766,"line_end":1766,"column_start":5,"column_end":35}},{"value":"/     .and_replace_entry_with(|k, v| {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142393,"byte_end":142433,"line_start":1767,"line_end":1767,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(k, &\"poneyland\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142438,"byte_end":142478,"line_start":1768,"line_end":1768,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(v, 42);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142483,"byte_end":142513,"line_start":1769,"line_end":1769,"column_start":5,"column_end":35}},{"value":"/         Some(v + 1)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142518,"byte_end":142541,"line_start":1770,"line_end":1770,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142546,"byte_end":142557,"line_start":1771,"line_end":1771,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142562,"byte_end":142565,"line_start":1772,"line_end":1772,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142570,"byte_end":142587,"line_start":1773,"line_end":1773,"column_start":5,"column_end":22}},{"value":"/     RawEntryMut::Occupied(e) => {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142592,"byte_end":142629,"line_start":1774,"line_end":1774,"column_start":5,"column_end":42}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142634,"byte_end":142680,"line_start":1775,"line_end":1775,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(e.get(), &43);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142685,"byte_end":142722,"line_start":1776,"line_end":1776,"column_start":5,"column_end":42}},{"value":"/     },","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142727,"byte_end":142737,"line_start":1777,"line_end":1777,"column_start":5,"column_end":15}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142742,"byte_end":142785,"line_start":1778,"line_end":1778,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142790,"byte_end":142795,"line_start":1779,"line_end":1779,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142800,"byte_end":142803,"line_start":1780,"line_end":1780,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142808,"byte_end":142845,"line_start":1781,"line_end":1781,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142850,"byte_end":142853,"line_start":1782,"line_end":1782,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142858,"byte_end":142877,"line_start":1783,"line_end":1783,"column_start":5,"column_end":24}},{"value":"/     .raw_entry_mut()","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142882,"byte_end":142906,"line_start":1784,"line_end":1784,"column_start":5,"column_end":29}},{"value":"/     .from_key(\"poneyland\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142911,"byte_end":142941,"line_start":1785,"line_end":1785,"column_start":5,"column_end":35}},{"value":"/     .and_replace_entry_with(|_k, _v| None);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142946,"byte_end":142993,"line_start":1786,"line_end":1786,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142998,"byte_end":143001,"line_start":1787,"line_end":1787,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":143006,"byte_end":143023,"line_start":1788,"line_end":1788,"column_start":5,"column_end":22}},{"value":"/     RawEntryMut::Vacant(_) => {},","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":143028,"byte_end":143065,"line_start":1789,"line_end":1789,"column_start":5,"column_end":42}},{"value":"/     RawEntryMut::Occupied(_) => panic!(),","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":143070,"byte_end":143115,"line_start":1790,"line_end":1790,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":143120,"byte_end":143125,"line_start":1791,"line_end":1791,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":143130,"byte_end":143133,"line_start":1792,"line_end":1792,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"poneyland\"));","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":143138,"byte_end":143182,"line_start":1793,"line_end":1793,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":143187,"byte_end":143194,"line_start":1794,"line_end":1794,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":143235,"byte_end":143241,"line_start":1795,"line_end":1795,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":143676,"byte_end":143679,"line_start":1810,"line_end":1810,"column_start":12,"column_end":15},"name":"key","qualname":"<RawOccupiedEntryMut>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":143570,"byte_end":143615,"line_start":1808,"line_end":1808,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":143656,"byte_end":143662,"line_start":1809,"line_end":1809,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":143861,"byte_end":143868,"line_start":1816,"line_end":1816,"column_start":12,"column_end":19},"name":"key_mut","qualname":"<RawOccupiedEntryMut>::key_mut","value":"pub fn key_mut(&mut Self) -> &mut K","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the key in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the key in the entry.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":143747,"byte_end":143800,"line_start":1814,"line_end":1814,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":143841,"byte_end":143847,"line_start":1815,"line_end":1815,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144129,"byte_end":144137,"line_start":1823,"line_end":1823,"column_start":12,"column_end":20},"name":"into_key","qualname":"<RawOccupiedEntryMut>::into_key","value":"pub fn into_key(Self) -> &'a mut K","parent":null,"children":[],"decl_id":null,"docs":" Converts the entry into a mutable reference to the key in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the entry into a mutable reference to the key in the entry","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":143948,"byte_end":144019,"line_start":1820,"line_end":1820,"column_start":5,"column_end":76}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144024,"byte_end":144068,"line_start":1821,"line_end":1821,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144109,"byte_end":144115,"line_start":1822,"line_end":1822,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144323,"byte_end":144326,"line_start":1829,"line_end":1829,"column_start":12,"column_end":15},"name":"get","qualname":"<RawOccupiedEntryMut>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144215,"byte_end":144262,"line_start":1827,"line_end":1827,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144303,"byte_end":144309,"line_start":1828,"line_end":1828,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144585,"byte_end":144593,"line_start":1836,"line_end":1836,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<RawOccupiedEntryMut>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the value in the entry","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144394,"byte_end":144475,"line_start":1833,"line_end":1833,"column_start":5,"column_end":86}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144480,"byte_end":144524,"line_start":1834,"line_end":1834,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144565,"byte_end":144571,"line_start":1835,"line_end":1835,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144787,"byte_end":144794,"line_start":1842,"line_end":1842,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RawOccupiedEntryMut>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144671,"byte_end":144726,"line_start":1840,"line_end":1840,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144767,"byte_end":144773,"line_start":1841,"line_end":1841,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144990,"byte_end":145003,"line_start":1848,"line_end":1848,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<RawOccupiedEntryMut>::get_key_value","value":"pub fn get_key_value(&mut Self) -> (&K, &V)","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key and value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key and value in the entry.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144874,"byte_end":144929,"line_start":1846,"line_end":1846,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144970,"byte_end":144976,"line_start":1847,"line_end":1847,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145276,"byte_end":145293,"line_start":1857,"line_end":1857,"column_start":12,"column_end":29},"name":"get_key_value_mut","qualname":"<RawOccupiedEntryMut>::get_key_value_mut","value":"pub fn get_key_value_mut(&mut Self) -> (&mut K, &mut V)","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the key and value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the key and value in the entry.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145152,"byte_end":145215,"line_start":1855,"line_end":1855,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145256,"byte_end":145262,"line_start":1856,"line_end":1856,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145661,"byte_end":145675,"line_start":1867,"line_end":1867,"column_start":12,"column_end":26},"name":"into_key_value","qualname":"<RawOccupiedEntryMut>::into_key_value","value":"pub fn into_key_value(Self) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the key and value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the key and value in the entry","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145462,"byte_end":145551,"line_start":1864,"line_end":1864,"column_start":5,"column_end":94}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145556,"byte_end":145600,"line_start":1865,"line_end":1865,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145641,"byte_end":145647,"line_start":1866,"line_end":1866,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145973,"byte_end":145979,"line_start":1876,"line_end":1876,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawOccupiedEntryMut>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145845,"byte_end":145912,"line_start":1874,"line_end":1874,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145953,"byte_end":145959,"line_start":1875,"line_end":1875,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":146191,"byte_end":146201,"line_start":1882,"line_end":1882,"column_start":12,"column_end":22},"name":"insert_key","qualname":"<RawOccupiedEntryMut>::insert_key","value":"pub fn insert_key(&mut Self, K) -> K","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":146063,"byte_end":146130,"line_start":1880,"line_end":1880,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":146171,"byte_end":146177,"line_start":1881,"line_end":1881,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":146395,"byte_end":146401,"line_start":1888,"line_end":1888,"column_start":12,"column_end":18},"name":"remove","qualname":"<RawOccupiedEntryMut>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.\n","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":146281,"byte_end":146334,"line_start":1886,"line_end":1886,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":146375,"byte_end":146381,"line_start":1887,"line_end":1887,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":146574,"byte_end":146586,"line_start":1894,"line_end":1894,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<RawOccupiedEntryMut>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.\n","sig":null,"attributes":[{"value":"/ Take the ownership of the key and value from the map.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":146456,"byte_end":146513,"line_start":1892,"line_end":1892,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":146554,"byte_end":146560,"line_start":1893,"line_end":1893,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":146899,"byte_end":146917,"line_start":1902,"line_end":1902,"column_start":12,"column_end":30},"name":"replace_entry_with","qualname":"<RawOccupiedEntryMut>::replace_entry_with","value":"pub fn replace_entry_with<F>(Self, F) -> RawEntryMut where F: FnOnce(&K, V) ->\nOption<V>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n the entry and allows to replace or remove it based on the\n value of the returned option.\n","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":146664,"byte_end":146734,"line_start":1898,"line_end":1898,"column_start":5,"column_end":75}},{"value":"/ the entry and allows to replace or remove it based on the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":146739,"byte_end":146800,"line_start":1899,"line_end":1899,"column_start":5,"column_end":66}},{"value":"/ value of the returned option.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":146805,"byte_end":146838,"line_start":1900,"line_end":1900,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":146879,"byte_end":146885,"line_start":1901,"line_end":1901,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":147776,"byte_end":147782,"line_start":1929,"line_end":1929,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawVacantEntryMut>::insert","value":"pub fn insert(Self, K, V) -> (&'a mut K, &'a mut V) where K: Hash,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":147609,"byte_end":147668,"line_start":1926,"line_end":1926,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":147673,"byte_end":147715,"line_start":1927,"line_end":1927,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":147756,"byte_end":147762,"line_start":1928,"line_end":1928,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":148261,"byte_end":148282,"line_start":1943,"line_end":1943,"column_start":12,"column_end":33},"name":"insert_hashed_nocheck","qualname":"<RawVacantEntryMut>::insert_hashed_nocheck","value":"pub fn insert_hashed_nocheck(Self, u64, K, V) -> (&'a mut K, &'a mut V) where\nK: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":148055,"byte_end":148114,"line_start":1939,"line_end":1939,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":148119,"byte_end":148161,"line_start":1940,"line_end":1940,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":148202,"byte_end":148208,"line_start":1941,"line_end":1941,"column_start":41,"column_end":47}},{"value":"allow(clippy :: shadow_unrelated)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":148215,"byte_end":148249,"line_start":1942,"line_end":1942,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":148661,"byte_end":148679,"line_start":1954,"line_end":1954,"column_start":12,"column_end":30},"name":"insert_with_hasher","qualname":"<RawVacantEntryMut>::insert_with_hasher","value":"pub fn insert_with_hasher<H>(Self, u64, K, V, H) -> (&'a mut K, &'a mut V)\nwhere H: Fn(&K) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Set the value of an entry with a custom hasher function.\n","sig":null,"attributes":[{"value":"/ Set the value of an entry with a custom hasher function.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":148540,"byte_end":148600,"line_start":1952,"line_end":1952,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":148641,"byte_end":148647,"line_start":1953,"line_end":1953,"column_start":41,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":952},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151076,"byte_end":151084,"line_start":2035,"line_end":2035,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" An occupied entry.\n","sig":null,"attributes":[{"value":"/ An occupied entry.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151049,"byte_end":151071,"line_start":2034,"line_end":2034,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":955},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151143,"byte_end":151149,"line_start":2038,"line_end":2038,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":947},"children":[],"decl_id":null,"docs":" A vacant entry.\n","sig":null,"attributes":[{"value":"/ A vacant entry.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151119,"byte_end":151138,"line_start":2037,"line_end":2037,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":947},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151024,"byte_end":151029,"line_start":2033,"line_end":2033,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::Entry","value":"pub enum Entry<'a, K, V, S> { Occupied(OccupiedEntry), Vacant(VacantEntry), }","parent":null,"children":[{"krate":0,"index":952},{"krate":0,"index":955}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":150768,"byte_end":150848,"line_start":2027,"line_end":2027,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":150849,"byte_end":150852,"line_start":2028,"line_end":2028,"column_start":1,"column_end":4}},{"value":"/ This `enum` is constructed from the [`entry`] method on [`HashMap`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":150853,"byte_end":150925,"line_start":2029,"line_end":2029,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":150926,"byte_end":150929,"line_start":2030,"line_end":2030,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":150930,"byte_end":150966,"line_start":2031,"line_end":2031,"column_start":1,"column_end":37}},{"value":"/ [`entry`]: struct.HashMap.html#method.entry","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":150967,"byte_end":151014,"line_start":2032,"line_end":2032,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":963},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151635,"byte_end":151648,"line_start":2054,"line_end":2054,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971}],"decl_id":null,"docs":" A view into an occupied entry in a `HashMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `HashMap`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151501,"byte_end":151550,"line_start":2050,"line_end":2050,"column_start":1,"column_end":50}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151551,"byte_end":151588,"line_start":2051,"line_end":2051,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151589,"byte_end":151592,"line_start":2052,"line_end":2052,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151593,"byte_end":151623,"line_start":2053,"line_end":2053,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":985},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":152388,"byte_end":152399,"line_start":2089,"line_end":2089,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992}],"decl_id":null,"docs":" A view into a vacant entry in a `HashMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `HashMap`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":152257,"byte_end":152303,"line_start":2085,"line_end":2085,"column_start":1,"column_end":47}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":152304,"byte_end":152341,"line_start":2086,"line_end":2086,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":152342,"byte_end":152345,"line_start":2087,"line_end":2087,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":152346,"byte_end":152376,"line_start":2088,"line_end":2088,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159981,"byte_end":159987,"line_start":2367,"line_end":2367,"column_start":12,"column_end":18},"name":"insert","qualname":"<Entry>::insert","value":"pub fn insert(Self, V) -> OccupiedEntry where K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns an OccupiedEntry.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns an OccupiedEntry.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159589,"byte_end":159651,"line_start":2354,"line_end":2354,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159656,"byte_end":159659,"line_start":2355,"line_end":2355,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159664,"byte_end":159678,"line_start":2356,"line_end":2356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159683,"byte_end":159686,"line_start":2357,"line_end":2357,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159691,"byte_end":159698,"line_start":2358,"line_end":2358,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159703,"byte_end":159730,"line_start":2359,"line_end":2359,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159735,"byte_end":159738,"line_start":2360,"line_end":2360,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159743,"byte_end":159796,"line_start":2361,"line_end":2361,"column_start":5,"column_end":58}},{"value":"/ let entry = map.entry(\"horseyland\").insert(37);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159801,"byte_end":159852,"line_start":2362,"line_end":2362,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159857,"byte_end":159860,"line_start":2363,"line_end":2363,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(entry.key(), &\"horseyland\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159865,"byte_end":159908,"line_start":2364,"line_end":2364,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159913,"byte_end":159920,"line_start":2365,"line_end":2365,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159961,"byte_end":159967,"line_start":2366,"line_end":2366,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160863,"byte_end":160872,"line_start":2398,"line_end":2398,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V where K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160313,"byte_end":160395,"line_start":2381,"line_end":2381,"column_start":5,"column_end":87}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160400,"byte_end":160450,"line_start":2382,"line_end":2382,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160455,"byte_end":160458,"line_start":2383,"line_end":2383,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160463,"byte_end":160477,"line_start":2384,"line_end":2384,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160482,"byte_end":160485,"line_start":2385,"line_end":2385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160490,"byte_end":160497,"line_start":2386,"line_end":2386,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160502,"byte_end":160529,"line_start":2387,"line_end":2387,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160534,"byte_end":160537,"line_start":2388,"line_end":2388,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160542,"byte_end":160595,"line_start":2389,"line_end":2389,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160600,"byte_end":160603,"line_start":2390,"line_end":2390,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\").or_insert(3);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160608,"byte_end":160648,"line_start":2391,"line_end":2391,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map[\"poneyland\"], 3);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160653,"byte_end":160689,"line_start":2392,"line_end":2392,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160694,"byte_end":160697,"line_start":2393,"line_end":2393,"column_start":5,"column_end":8}},{"value":"/ *map.entry(\"poneyland\").or_insert(10) *= 2;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160702,"byte_end":160749,"line_start":2394,"line_end":2394,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(map[\"poneyland\"], 6);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160754,"byte_end":160790,"line_start":2395,"line_end":2395,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160795,"byte_end":160802,"line_start":2396,"line_end":2396,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160843,"byte_end":160849,"line_start":2397,"line_end":2397,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1141},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161662,"byte_end":161676,"line_start":2425,"line_end":2425,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F: FnOnce() -> V>(Self, F) -> &'a mut V where K: Hash,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161118,"byte_end":161211,"line_start":2409,"line_end":2409,"column_start":5,"column_end":98}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161216,"byte_end":161278,"line_start":2410,"line_end":2410,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161283,"byte_end":161286,"line_start":2411,"line_end":2411,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161291,"byte_end":161305,"line_start":2412,"line_end":2412,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161310,"byte_end":161313,"line_start":2413,"line_end":2413,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161318,"byte_end":161325,"line_start":2414,"line_end":2414,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161330,"byte_end":161357,"line_start":2415,"line_end":2415,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161362,"byte_end":161365,"line_start":2416,"line_end":2416,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, String> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161370,"byte_end":161426,"line_start":2417,"line_end":2417,"column_start":5,"column_end":61}},{"value":"/ let s = \"hoho\".to_string();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161431,"byte_end":161462,"line_start":2418,"line_end":2418,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161467,"byte_end":161470,"line_start":2419,"line_end":2419,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\").or_insert_with(|| s);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161475,"byte_end":161523,"line_start":2420,"line_end":2420,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161528,"byte_end":161531,"line_start":2421,"line_end":2421,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], \"hoho\".to_string());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161536,"byte_end":161589,"line_start":2422,"line_end":2422,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161594,"byte_end":161601,"line_start":2423,"line_end":2423,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161642,"byte_end":161648,"line_start":2424,"line_end":2424,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162504,"byte_end":162522,"line_start":2452,"line_end":2452,"column_start":12,"column_end":30},"name":"or_insert_with_key","qualname":"<Entry>::or_insert_with_key","value":"pub fn or_insert_with_key<F: FnOnce(&K) -> V>(Self, F) -> &'a mut V where\nK: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting, if empty, the result of the default function,\n which takes the key as its argument, and returns a mutable reference to the value in the\n entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting, if empty, the result of the default function,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161942,"byte_end":162037,"line_start":2436,"line_end":2436,"column_start":5,"column_end":100}},{"value":"/ which takes the key as its argument, and returns a mutable reference to the value in the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162042,"byte_end":162134,"line_start":2437,"line_end":2437,"column_start":5,"column_end":97}},{"value":"/ entry.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162139,"byte_end":162149,"line_start":2438,"line_end":2438,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162154,"byte_end":162157,"line_start":2439,"line_end":2439,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162162,"byte_end":162176,"line_start":2440,"line_end":2440,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162181,"byte_end":162184,"line_start":2441,"line_end":2441,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162189,"byte_end":162196,"line_start":2442,"line_end":2442,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162201,"byte_end":162228,"line_start":2443,"line_end":2443,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162233,"byte_end":162236,"line_start":2444,"line_end":2444,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, usize> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162241,"byte_end":162296,"line_start":2445,"line_end":2445,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162301,"byte_end":162304,"line_start":2446,"line_end":2446,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\").or_insert_with_key(|key| key.chars().count());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162309,"byte_end":162382,"line_start":2447,"line_end":2447,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162387,"byte_end":162390,"line_start":2448,"line_end":2448,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 9);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162395,"byte_end":162431,"line_start":2449,"line_end":2449,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162436,"byte_end":162443,"line_start":2450,"line_end":2450,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162484,"byte_end":162490,"line_start":2451,"line_end":2451,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1145},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163193,"byte_end":163196,"line_start":2477,"line_end":2477,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this entry's key.","sig":null,"attributes":[{"value":"/ Returns a reference to this entry's key.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162867,"byte_end":162911,"line_start":2466,"line_end":2466,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162916,"byte_end":162919,"line_start":2467,"line_end":2467,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162924,"byte_end":162938,"line_start":2468,"line_end":2468,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162943,"byte_end":162946,"line_start":2469,"line_end":2469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162951,"byte_end":162958,"line_start":2470,"line_end":2470,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162963,"byte_end":162990,"line_start":2471,"line_end":2471,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162995,"byte_end":162998,"line_start":2472,"line_end":2472,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163003,"byte_end":163056,"line_start":2473,"line_end":2473,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163061,"byte_end":163120,"line_start":2474,"line_end":2474,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163125,"byte_end":163132,"line_start":2475,"line_end":2475,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163173,"byte_end":163179,"line_start":2476,"line_end":2476,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163985,"byte_end":163995,"line_start":2505,"line_end":2505,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.","sig":null,"attributes":[{"value":"/ Provides in-place mutable access to an occupied entry before any","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163363,"byte_end":163431,"line_start":2484,"line_end":2484,"column_start":5,"column_end":73}},{"value":"/ potential inserts into the map.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163436,"byte_end":163471,"line_start":2485,"line_end":2485,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163476,"byte_end":163479,"line_start":2486,"line_end":2486,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163484,"byte_end":163498,"line_start":2487,"line_end":2487,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163503,"byte_end":163506,"line_start":2488,"line_end":2488,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163511,"byte_end":163518,"line_start":2489,"line_end":2489,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163523,"byte_end":163550,"line_start":2490,"line_end":2490,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163555,"byte_end":163558,"line_start":2491,"line_end":2491,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163563,"byte_end":163616,"line_start":2492,"line_end":2492,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163621,"byte_end":163624,"line_start":2493,"line_end":2493,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163629,"byte_end":163655,"line_start":2494,"line_end":2494,"column_start":5,"column_end":31}},{"value":"/    .and_modify(|e| { *e += 1 })","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163660,"byte_end":163695,"line_start":2495,"line_end":2495,"column_start":5,"column_end":40}},{"value":"/    .or_insert(42);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163700,"byte_end":163722,"line_start":2496,"line_end":2496,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map[\"poneyland\"], 42);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163727,"byte_end":163764,"line_start":2497,"line_end":2497,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163769,"byte_end":163772,"line_start":2498,"line_end":2498,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163777,"byte_end":163803,"line_start":2499,"line_end":2499,"column_start":5,"column_end":31}},{"value":"/    .and_modify(|e| { *e += 1 })","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163808,"byte_end":163843,"line_start":2500,"line_end":2500,"column_start":5,"column_end":40}},{"value":"/    .or_insert(42);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163848,"byte_end":163870,"line_start":2501,"line_end":2501,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163875,"byte_end":163912,"line_start":2502,"line_end":2502,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163917,"byte_end":163924,"line_start":2503,"line_end":2503,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163965,"byte_end":163971,"line_start":2504,"line_end":2504,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1148},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165915,"byte_end":165937,"line_start":2573,"line_end":2573,"column_start":12,"column_end":34},"name":"and_replace_entry_with","qualname":"<Entry>::and_replace_entry_with","value":"pub fn and_replace_entry_with<F>(Self, F) -> Self where F: FnOnce(&K, V) ->\nOption<V>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n an occupied entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164295,"byte_end":164365,"line_start":2518,"line_end":2518,"column_start":5,"column_end":75}},{"value":"/ an occupied entry and allows to replace or remove it based on the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164370,"byte_end":164439,"line_start":2519,"line_end":2519,"column_start":5,"column_end":74}},{"value":"/ value of the returned option.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164444,"byte_end":164477,"line_start":2520,"line_end":2520,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164482,"byte_end":164485,"line_start":2521,"line_end":2521,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164490,"byte_end":164504,"line_start":2522,"line_end":2522,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164509,"byte_end":164512,"line_start":2523,"line_end":2523,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164517,"byte_end":164524,"line_start":2524,"line_end":2524,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164529,"byte_end":164556,"line_start":2525,"line_end":2525,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164561,"byte_end":164596,"line_start":2526,"line_end":2526,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164601,"byte_end":164604,"line_start":2527,"line_end":2527,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164609,"byte_end":164662,"line_start":2528,"line_end":2528,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164667,"byte_end":164670,"line_start":2529,"line_end":2529,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164675,"byte_end":164694,"line_start":2530,"line_end":2530,"column_start":5,"column_end":24}},{"value":"/     .entry(\"poneyland\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164699,"byte_end":164726,"line_start":2531,"line_end":2531,"column_start":5,"column_end":32}},{"value":"/     .and_replace_entry_with(|_k, _v| panic!());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164731,"byte_end":164782,"line_start":2532,"line_end":2532,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164787,"byte_end":164790,"line_start":2533,"line_end":2533,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164795,"byte_end":164812,"line_start":2534,"line_end":2534,"column_start":5,"column_end":22}},{"value":"/     Entry::Vacant(e) => {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164817,"byte_end":164846,"line_start":2535,"line_end":2535,"column_start":5,"column_end":34}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164851,"byte_end":164897,"line_start":2536,"line_end":2536,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164902,"byte_end":164911,"line_start":2537,"line_end":2537,"column_start":5,"column_end":14}},{"value":"/     Entry::Occupied(_) => panic!(),","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164916,"byte_end":164955,"line_start":2538,"line_end":2538,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164960,"byte_end":164965,"line_start":2539,"line_end":2539,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164970,"byte_end":164973,"line_start":2540,"line_end":2540,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"poneyland\", 42);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164978,"byte_end":165010,"line_start":2541,"line_end":2541,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165015,"byte_end":165018,"line_start":2542,"line_end":2542,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165023,"byte_end":165042,"line_start":2543,"line_end":2543,"column_start":5,"column_end":24}},{"value":"/     .entry(\"poneyland\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165047,"byte_end":165074,"line_start":2544,"line_end":2544,"column_start":5,"column_end":32}},{"value":"/     .and_replace_entry_with(|k, v| {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165079,"byte_end":165119,"line_start":2545,"line_end":2545,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(k, &\"poneyland\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165124,"byte_end":165164,"line_start":2546,"line_end":2546,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(v, 42);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165169,"byte_end":165199,"line_start":2547,"line_end":2547,"column_start":5,"column_end":35}},{"value":"/         Some(v + 1)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165204,"byte_end":165227,"line_start":2548,"line_end":2548,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165232,"byte_end":165243,"line_start":2549,"line_end":2549,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165248,"byte_end":165251,"line_start":2550,"line_end":2550,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165256,"byte_end":165273,"line_start":2551,"line_end":2551,"column_start":5,"column_end":22}},{"value":"/     Entry::Occupied(e) => {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165278,"byte_end":165309,"line_start":2552,"line_end":2552,"column_start":5,"column_end":36}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165314,"byte_end":165360,"line_start":2553,"line_end":2553,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(e.get(), &43);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165365,"byte_end":165402,"line_start":2554,"line_end":2554,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165407,"byte_end":165416,"line_start":2555,"line_end":2555,"column_start":5,"column_end":14}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165421,"byte_end":165458,"line_start":2556,"line_end":2556,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165463,"byte_end":165468,"line_start":2557,"line_end":2557,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165473,"byte_end":165476,"line_start":2558,"line_end":2558,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165481,"byte_end":165518,"line_start":2559,"line_end":2559,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165523,"byte_end":165526,"line_start":2560,"line_end":2560,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165531,"byte_end":165550,"line_start":2561,"line_end":2561,"column_start":5,"column_end":24}},{"value":"/     .entry(\"poneyland\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165555,"byte_end":165582,"line_start":2562,"line_end":2562,"column_start":5,"column_end":32}},{"value":"/     .and_replace_entry_with(|_k, _v| None);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165587,"byte_end":165634,"line_start":2563,"line_end":2563,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165639,"byte_end":165642,"line_start":2564,"line_end":2564,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165647,"byte_end":165664,"line_start":2565,"line_end":2565,"column_start":5,"column_end":22}},{"value":"/     Entry::Vacant(e) => assert_eq!(e.key(), &\"poneyland\"),","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165669,"byte_end":165731,"line_start":2566,"line_end":2566,"column_start":5,"column_end":67}},{"value":"/     Entry::Occupied(_) => panic!(),","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165736,"byte_end":165775,"line_start":2567,"line_end":2567,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165780,"byte_end":165785,"line_start":2568,"line_end":2568,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165790,"byte_end":165793,"line_start":2569,"line_end":2569,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"poneyland\"));","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165798,"byte_end":165842,"line_start":2570,"line_end":2570,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165847,"byte_end":165854,"line_start":2571,"line_end":2571,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165895,"byte_end":165901,"line_start":2572,"line_end":2572,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166679,"byte_end":166689,"line_start":2599,"line_end":2599,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"pub fn or_default(Self) -> &'a mut V where K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default value if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default value if empty,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166213,"byte_end":166289,"line_start":2585,"line_end":2585,"column_start":5,"column_end":81}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166294,"byte_end":166356,"line_start":2586,"line_end":2586,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166361,"byte_end":166364,"line_start":2587,"line_end":2587,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166369,"byte_end":166383,"line_start":2588,"line_end":2588,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166388,"byte_end":166391,"line_start":2589,"line_end":2589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166396,"byte_end":166403,"line_start":2590,"line_end":2590,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166408,"byte_end":166435,"line_start":2591,"line_end":2591,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166440,"byte_end":166443,"line_start":2592,"line_end":2592,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, Option<u32>> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166448,"byte_end":166509,"line_start":2593,"line_end":2593,"column_start":5,"column_end":66}},{"value":"/ map.entry(\"poneyland\").or_default();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166514,"byte_end":166554,"line_start":2594,"line_end":2594,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166559,"byte_end":166562,"line_start":2595,"line_end":2595,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], None);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166567,"byte_end":166606,"line_start":2596,"line_end":2596,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166611,"byte_end":166618,"line_start":2597,"line_end":2597,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166659,"byte_end":166665,"line_start":2598,"line_end":2598,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167356,"byte_end":167359,"line_start":2624,"line_end":2624,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166983,"byte_end":167028,"line_start":2612,"line_end":2612,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167033,"byte_end":167036,"line_start":2613,"line_end":2613,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167041,"byte_end":167055,"line_start":2614,"line_end":2614,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167060,"byte_end":167063,"line_start":2615,"line_end":2615,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167068,"byte_end":167075,"line_start":2616,"line_end":2616,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167080,"byte_end":167107,"line_start":2617,"line_end":2617,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167112,"byte_end":167115,"line_start":2618,"line_end":2618,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167120,"byte_end":167173,"line_start":2619,"line_end":2619,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167178,"byte_end":167219,"line_start":2620,"line_end":2620,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167224,"byte_end":167283,"line_start":2621,"line_end":2621,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167288,"byte_end":167295,"line_start":2622,"line_end":2622,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167336,"byte_end":167342,"line_start":2623,"line_end":2623,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168012,"byte_end":168024,"line_start":2647,"line_end":2647,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.","sig":null,"attributes":[{"value":"/ Take the ownership of the key and value from the map.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167427,"byte_end":167484,"line_start":2628,"line_end":2628,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167489,"byte_end":167492,"line_start":2629,"line_end":2629,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167497,"byte_end":167511,"line_start":2630,"line_end":2630,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167516,"byte_end":167519,"line_start":2631,"line_end":2631,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167524,"byte_end":167531,"line_start":2632,"line_end":2632,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167536,"byte_end":167563,"line_start":2633,"line_end":2633,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167568,"byte_end":167603,"line_start":2634,"line_end":2634,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167608,"byte_end":167611,"line_start":2635,"line_end":2635,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167616,"byte_end":167669,"line_start":2636,"line_end":2636,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167674,"byte_end":167715,"line_start":2637,"line_end":2637,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167720,"byte_end":167723,"line_start":2638,"line_end":2638,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167728,"byte_end":167784,"line_start":2639,"line_end":2639,"column_start":5,"column_end":61}},{"value":"/     // We delete the entry from the map.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167789,"byte_end":167833,"line_start":2640,"line_end":2640,"column_start":5,"column_end":49}},{"value":"/     o.remove_entry();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167838,"byte_end":167863,"line_start":2641,"line_end":2641,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167868,"byte_end":167873,"line_start":2642,"line_end":2642,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167878,"byte_end":167881,"line_start":2643,"line_end":2643,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.contains_key(\"poneyland\"), false);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167886,"byte_end":167939,"line_start":2644,"line_end":2644,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167944,"byte_end":167951,"line_start":2645,"line_end":2645,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167992,"byte_end":167998,"line_start":2646,"line_end":2646,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168576,"byte_end":168579,"line_start":2667,"line_end":2667,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168108,"byte_end":168155,"line_start":2651,"line_end":2651,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168160,"byte_end":168163,"line_start":2652,"line_end":2652,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168168,"byte_end":168182,"line_start":2653,"line_end":2653,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168187,"byte_end":168190,"line_start":2654,"line_end":2654,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168195,"byte_end":168202,"line_start":2655,"line_end":2655,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168207,"byte_end":168234,"line_start":2656,"line_end":2656,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168239,"byte_end":168274,"line_start":2657,"line_end":2657,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168279,"byte_end":168282,"line_start":2658,"line_end":2658,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168287,"byte_end":168340,"line_start":2659,"line_end":2659,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168345,"byte_end":168386,"line_start":2660,"line_end":2660,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168391,"byte_end":168394,"line_start":2661,"line_end":2661,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168399,"byte_end":168455,"line_start":2662,"line_end":2662,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(o.get(), &12);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168460,"byte_end":168493,"line_start":2663,"line_end":2663,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168498,"byte_end":168503,"line_start":2664,"line_end":2664,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168508,"byte_end":168515,"line_start":2665,"line_end":2665,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168556,"byte_end":168562,"line_start":2666,"line_end":2666,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169539,"byte_end":169546,"line_start":2699,"line_end":2699,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168647,"byte_end":168702,"line_start":2671,"line_end":2671,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168707,"byte_end":168710,"line_start":2672,"line_end":2672,"column_start":5,"column_end":8}},{"value":"/ If you need a reference to the `OccupiedEntry` which may outlive the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168715,"byte_end":168787,"line_start":2673,"line_end":2673,"column_start":5,"column_end":77}},{"value":"/ destruction of the `Entry` value, see [`into_mut`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168792,"byte_end":168847,"line_start":2674,"line_end":2674,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168852,"byte_end":168855,"line_start":2675,"line_end":2675,"column_start":5,"column_end":8}},{"value":"/ [`into_mut`]: #method.into_mut","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168860,"byte_end":168894,"line_start":2676,"line_end":2676,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168899,"byte_end":168902,"line_start":2677,"line_end":2677,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168907,"byte_end":168921,"line_start":2678,"line_end":2678,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168926,"byte_end":168929,"line_start":2679,"line_end":2679,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168934,"byte_end":168941,"line_start":2680,"line_end":2680,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168946,"byte_end":168973,"line_start":2681,"line_end":2681,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168978,"byte_end":169013,"line_start":2682,"line_end":2682,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169018,"byte_end":169021,"line_start":2683,"line_end":2683,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169026,"byte_end":169079,"line_start":2684,"line_end":2684,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169084,"byte_end":169125,"line_start":2685,"line_end":2685,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169130,"byte_end":169133,"line_start":2686,"line_end":2686,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 12);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169138,"byte_end":169175,"line_start":2687,"line_end":2687,"column_start":5,"column_end":42}},{"value":"/ if let Entry::Occupied(mut o) = map.entry(\"poneyland\") {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169180,"byte_end":169240,"line_start":2688,"line_end":2688,"column_start":5,"column_end":65}},{"value":"/     *o.get_mut() += 10;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169245,"byte_end":169272,"line_start":2689,"line_end":2689,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(*o.get(), 22);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169277,"byte_end":169310,"line_start":2690,"line_end":2690,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169315,"byte_end":169318,"line_start":2691,"line_end":2691,"column_start":5,"column_end":8}},{"value":"/     // We can use the same Entry multiple times.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169323,"byte_end":169375,"line_start":2692,"line_end":2692,"column_start":5,"column_end":57}},{"value":"/     *o.get_mut() += 2;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169380,"byte_end":169406,"line_start":2693,"line_end":2693,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169411,"byte_end":169416,"line_start":2694,"line_end":2694,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169421,"byte_end":169424,"line_start":2695,"line_end":2695,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 24);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169429,"byte_end":169466,"line_start":2696,"line_end":2696,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169471,"byte_end":169478,"line_start":2697,"line_end":2697,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169519,"byte_end":169525,"line_start":2698,"line_end":2698,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170398,"byte_end":170406,"line_start":2727,"line_end":2727,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the value in the entry","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169626,"byte_end":169707,"line_start":2703,"line_end":2703,"column_start":5,"column_end":86}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169712,"byte_end":169756,"line_start":2704,"line_end":2704,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169761,"byte_end":169764,"line_start":2705,"line_end":2705,"column_start":5,"column_end":8}},{"value":"/ If you need multiple references to the `OccupiedEntry`, see [`get_mut`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169769,"byte_end":169845,"line_start":2706,"line_end":2706,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169850,"byte_end":169853,"line_start":2707,"line_end":2707,"column_start":5,"column_end":8}},{"value":"/ [`get_mut`]: #method.get_mut","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169858,"byte_end":169890,"line_start":2708,"line_end":2708,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169895,"byte_end":169898,"line_start":2709,"line_end":2709,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169903,"byte_end":169917,"line_start":2710,"line_end":2710,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169922,"byte_end":169925,"line_start":2711,"line_end":2711,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169930,"byte_end":169937,"line_start":2712,"line_end":2712,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169942,"byte_end":169969,"line_start":2713,"line_end":2713,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169974,"byte_end":170009,"line_start":2714,"line_end":2714,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170014,"byte_end":170017,"line_start":2715,"line_end":2715,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170022,"byte_end":170075,"line_start":2716,"line_end":2716,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170080,"byte_end":170121,"line_start":2717,"line_end":2717,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170126,"byte_end":170129,"line_start":2718,"line_end":2718,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 12);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170134,"byte_end":170171,"line_start":2719,"line_end":2719,"column_start":5,"column_end":42}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170176,"byte_end":170232,"line_start":2720,"line_end":2720,"column_start":5,"column_end":61}},{"value":"/     *o.into_mut() += 10;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170237,"byte_end":170265,"line_start":2721,"line_end":2721,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170270,"byte_end":170275,"line_start":2722,"line_end":2722,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170280,"byte_end":170283,"line_start":2723,"line_end":2723,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 22);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170288,"byte_end":170325,"line_start":2724,"line_end":2724,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170330,"byte_end":170337,"line_start":2725,"line_end":2725,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170378,"byte_end":170384,"line_start":2726,"line_end":2726,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171030,"byte_end":171036,"line_start":2749,"line_end":2749,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170484,"byte_end":170551,"line_start":2731,"line_end":2731,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170556,"byte_end":170559,"line_start":2732,"line_end":2732,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170564,"byte_end":170578,"line_start":2733,"line_end":2733,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170583,"byte_end":170586,"line_start":2734,"line_end":2734,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170591,"byte_end":170598,"line_start":2735,"line_end":2735,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170603,"byte_end":170630,"line_start":2736,"line_end":2736,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170635,"byte_end":170670,"line_start":2737,"line_end":2737,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170675,"byte_end":170678,"line_start":2738,"line_end":2738,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170683,"byte_end":170736,"line_start":2739,"line_end":2739,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170741,"byte_end":170782,"line_start":2740,"line_end":2740,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170787,"byte_end":170790,"line_start":2741,"line_end":2741,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut o) = map.entry(\"poneyland\") {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170795,"byte_end":170855,"line_start":2742,"line_end":2742,"column_start":5,"column_end":65}},{"value":"/     assert_eq!(o.insert(15), 12);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170860,"byte_end":170897,"line_start":2743,"line_end":2743,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170902,"byte_end":170907,"line_start":2744,"line_end":2744,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170912,"byte_end":170915,"line_start":2745,"line_end":2745,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 15);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170920,"byte_end":170957,"line_start":2746,"line_end":2746,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170962,"byte_end":170969,"line_start":2747,"line_end":2747,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171010,"byte_end":171016,"line_start":2748,"line_end":2748,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171718,"byte_end":171724,"line_start":2773,"line_end":2773,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171176,"byte_end":171229,"line_start":2755,"line_end":2755,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171234,"byte_end":171237,"line_start":2756,"line_end":2756,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171242,"byte_end":171256,"line_start":2757,"line_end":2757,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171261,"byte_end":171264,"line_start":2758,"line_end":2758,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171269,"byte_end":171276,"line_start":2759,"line_end":2759,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171281,"byte_end":171308,"line_start":2760,"line_end":2760,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171313,"byte_end":171348,"line_start":2761,"line_end":2761,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171353,"byte_end":171356,"line_start":2762,"line_end":2762,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171361,"byte_end":171414,"line_start":2763,"line_end":2763,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171419,"byte_end":171460,"line_start":2764,"line_end":2764,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171465,"byte_end":171468,"line_start":2765,"line_end":2765,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171473,"byte_end":171529,"line_start":2766,"line_end":2766,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(o.remove(), 12);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171534,"byte_end":171569,"line_start":2767,"line_end":2767,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171574,"byte_end":171579,"line_start":2768,"line_end":2768,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171584,"byte_end":171587,"line_start":2769,"line_end":2769,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.contains_key(\"poneyland\"), false);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171592,"byte_end":171645,"line_start":2770,"line_end":2770,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171650,"byte_end":171657,"line_start":2771,"line_end":2771,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171698,"byte_end":171704,"line_start":2772,"line_end":2772,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":172544,"byte_end":172557,"line_start":2798,"line_end":2798,"column_start":12,"column_end":25},"name":"replace_entry","qualname":"<OccupiedEntry>::replace_entry","value":"pub fn replace_entry(Self, V) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Replaces the entry, returning the old key and value. The new key in the hash map will be\n the key used to create this entry.","sig":null,"attributes":[{"value":"/ Replaces the entry, returning the old key and value. The new key in the hash map will be","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171779,"byte_end":171871,"line_start":2777,"line_end":2777,"column_start":5,"column_end":97}},{"value":"/ the key used to create this entry.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171876,"byte_end":171914,"line_start":2778,"line_end":2778,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171919,"byte_end":171922,"line_start":2779,"line_end":2779,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171927,"byte_end":171941,"line_start":2780,"line_end":2780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171946,"byte_end":171949,"line_start":2781,"line_end":2781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171954,"byte_end":171961,"line_start":2782,"line_end":2782,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap};","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171966,"byte_end":172012,"line_start":2783,"line_end":2783,"column_start":5,"column_end":51}},{"value":"/ use std::rc::Rc;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":172017,"byte_end":172037,"line_start":2784,"line_end":2784,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":172042,"byte_end":172045,"line_start":2785,"line_end":2785,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<String>, u32> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":172050,"byte_end":172109,"line_start":2786,"line_end":2786,"column_start":5,"column_end":64}},{"value":"/ map.insert(Rc::new(\"Stringthing\".to_string()), 15);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":172114,"byte_end":172169,"line_start":2787,"line_end":2787,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":172174,"byte_end":172177,"line_start":2788,"line_end":2788,"column_start":5,"column_end":8}},{"value":"/ let my_key = Rc::new(\"Stringthing\".to_string());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":172182,"byte_end":172234,"line_start":2789,"line_end":2789,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":172239,"byte_end":172242,"line_start":2790,"line_end":2790,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(entry) = map.entry(my_key) {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":172247,"byte_end":172302,"line_start":2791,"line_end":2791,"column_start":5,"column_end":60}},{"value":"/     // Also replace the key with a handle to our other key.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":172307,"byte_end":172370,"line_start":2792,"line_end":2792,"column_start":5,"column_end":68}},{"value":"/     let (old_key, old_value): (Rc<String>, u32) = entry.replace_entry(16);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":172375,"byte_end":172453,"line_start":2793,"line_end":2793,"column_start":5,"column_end":83}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":172458,"byte_end":172463,"line_start":2794,"line_end":2794,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":172468,"byte_end":172471,"line_start":2795,"line_end":2795,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":172476,"byte_end":172483,"line_start":2796,"line_end":2796,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":172524,"byte_end":172530,"line_start":2797,"line_end":2797,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":173718,"byte_end":173729,"line_start":2832,"line_end":2832,"column_start":12,"column_end":23},"name":"replace_key","qualname":"<OccupiedEntry>::replace_key","value":"pub fn replace_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Replaces the key in the hash map with the key used to create this entry.","sig":null,"attributes":[{"value":"/ Replaces the key in the hash map with the key used to create this entry.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":172807,"byte_end":172883,"line_start":2807,"line_end":2807,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":172888,"byte_end":172891,"line_start":2808,"line_end":2808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":172896,"byte_end":172910,"line_start":2809,"line_end":2809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":172915,"byte_end":172918,"line_start":2810,"line_end":2810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":172923,"byte_end":172930,"line_start":2811,"line_end":2811,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap};","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":172935,"byte_end":172981,"line_start":2812,"line_end":2812,"column_start":5,"column_end":51}},{"value":"/ use std::rc::Rc;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":172986,"byte_end":173006,"line_start":2813,"line_end":2813,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":173011,"byte_end":173014,"line_start":2814,"line_end":2814,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<String>, u32> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":173019,"byte_end":173078,"line_start":2815,"line_end":2815,"column_start":5,"column_end":64}},{"value":"/ let mut known_strings: Vec<Rc<String>> = Vec::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":173083,"byte_end":173139,"line_start":2816,"line_end":2816,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":173144,"byte_end":173147,"line_start":2817,"line_end":2817,"column_start":5,"column_end":8}},{"value":"/ // Initialise known strings, run program, etc.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":173152,"byte_end":173202,"line_start":2818,"line_end":2818,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":173207,"byte_end":173210,"line_start":2819,"line_end":2819,"column_start":5,"column_end":8}},{"value":"/ reclaim_memory(&mut map, &known_strings);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":173215,"byte_end":173260,"line_start":2820,"line_end":2820,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":173265,"byte_end":173268,"line_start":2821,"line_end":2821,"column_start":5,"column_end":8}},{"value":"/ fn reclaim_memory(map: &mut HashMap<Rc<String>, u32>, known_strings: &[Rc<String>] ) {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":173273,"byte_end":173363,"line_start":2822,"line_end":2822,"column_start":5,"column_end":95}},{"value":"/     for s in known_strings {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":173368,"byte_end":173400,"line_start":2823,"line_end":2823,"column_start":5,"column_end":37}},{"value":"/         if let Entry::Occupied(entry) = map.entry(s.clone()) {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":173405,"byte_end":173471,"line_start":2824,"line_end":2824,"column_start":5,"column_end":71}},{"value":"/             // Replaces the entry's key with our version of it in `known_strings`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":173476,"byte_end":173562,"line_start":2825,"line_end":2825,"column_start":5,"column_end":91}},{"value":"/             entry.replace_key();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":173567,"byte_end":173603,"line_start":2826,"line_end":2826,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":173608,"byte_end":173621,"line_start":2827,"line_end":2827,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":173626,"byte_end":173635,"line_start":2828,"line_end":2828,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":173640,"byte_end":173645,"line_start":2829,"line_end":2829,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":173650,"byte_end":173657,"line_start":2830,"line_end":2830,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":173698,"byte_end":173704,"line_start":2831,"line_end":2831,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":175373,"byte_end":175391,"line_start":2886,"line_end":2886,"column_start":12,"column_end":30},"name":"replace_entry_with","qualname":"<OccupiedEntry>::replace_entry_with","value":"pub fn replace_entry_with<F>(Self, F) -> Entry where F: FnOnce(&K, V) ->\nOption<V>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n the entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":173859,"byte_end":173929,"line_start":2837,"line_end":2837,"column_start":5,"column_end":75}},{"value":"/ the entry and allows to replace or remove it based on the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":173934,"byte_end":173995,"line_start":2838,"line_end":2838,"column_start":5,"column_end":66}},{"value":"/ value of the returned option.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174000,"byte_end":174033,"line_start":2839,"line_end":2839,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174038,"byte_end":174041,"line_start":2840,"line_end":2840,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174046,"byte_end":174060,"line_start":2841,"line_end":2841,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174065,"byte_end":174068,"line_start":2842,"line_end":2842,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174073,"byte_end":174080,"line_start":2843,"line_end":2843,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174085,"byte_end":174112,"line_start":2844,"line_end":2844,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174117,"byte_end":174152,"line_start":2845,"line_end":2845,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174157,"byte_end":174160,"line_start":2846,"line_end":2846,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174165,"byte_end":174218,"line_start":2847,"line_end":2847,"column_start":5,"column_end":58}},{"value":"/ map.insert(\"poneyland\", 42);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174223,"byte_end":174255,"line_start":2848,"line_end":2848,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174260,"byte_end":174263,"line_start":2849,"line_end":2849,"column_start":5,"column_end":8}},{"value":"/ let entry = match map.entry(\"poneyland\") {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174268,"byte_end":174314,"line_start":2850,"line_end":2850,"column_start":5,"column_end":51}},{"value":"/     Entry::Occupied(e) => {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174319,"byte_end":174350,"line_start":2851,"line_end":2851,"column_start":5,"column_end":36}},{"value":"/         e.replace_entry_with(|k, v| {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174355,"byte_end":174396,"line_start":2852,"line_end":2852,"column_start":5,"column_end":46}},{"value":"/             assert_eq!(k, &\"poneyland\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174401,"byte_end":174445,"line_start":2853,"line_end":2853,"column_start":5,"column_end":49}},{"value":"/             assert_eq!(v, 42);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174450,"byte_end":174484,"line_start":2854,"line_end":2854,"column_start":5,"column_end":39}},{"value":"/             Some(v + 1)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174489,"byte_end":174516,"line_start":2855,"line_end":2855,"column_start":5,"column_end":32}},{"value":"/         })","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174521,"byte_end":174535,"line_start":2856,"line_end":2856,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174540,"byte_end":174549,"line_start":2857,"line_end":2857,"column_start":5,"column_end":14}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174554,"byte_end":174591,"line_start":2858,"line_end":2858,"column_start":5,"column_end":42}},{"value":"/ };","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174596,"byte_end":174602,"line_start":2859,"line_end":2859,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174607,"byte_end":174610,"line_start":2860,"line_end":2860,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174615,"byte_end":174632,"line_start":2861,"line_end":2861,"column_start":5,"column_end":22}},{"value":"/     Entry::Occupied(e) => {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174637,"byte_end":174668,"line_start":2862,"line_end":2862,"column_start":5,"column_end":36}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174673,"byte_end":174719,"line_start":2863,"line_end":2863,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(e.get(), &43);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174724,"byte_end":174761,"line_start":2864,"line_end":2864,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174766,"byte_end":174775,"line_start":2865,"line_end":2865,"column_start":5,"column_end":14}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174780,"byte_end":174817,"line_start":2866,"line_end":2866,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174822,"byte_end":174827,"line_start":2867,"line_end":2867,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174832,"byte_end":174835,"line_start":2868,"line_end":2868,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174840,"byte_end":174877,"line_start":2869,"line_end":2869,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174882,"byte_end":174885,"line_start":2870,"line_end":2870,"column_start":5,"column_end":8}},{"value":"/ let entry = match map.entry(\"poneyland\") {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174890,"byte_end":174936,"line_start":2871,"line_end":2871,"column_start":5,"column_end":51}},{"value":"/     Entry::Occupied(e) => e.replace_entry_with(|_k, _v| None),","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174941,"byte_end":175007,"line_start":2872,"line_end":2872,"column_start":5,"column_end":71}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":175012,"byte_end":175049,"line_start":2873,"line_end":2873,"column_start":5,"column_end":42}},{"value":"/ };","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":175054,"byte_end":175060,"line_start":2874,"line_end":2874,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":175065,"byte_end":175068,"line_start":2875,"line_end":2875,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":175073,"byte_end":175090,"line_start":2876,"line_end":2876,"column_start":5,"column_end":22}},{"value":"/     Entry::Vacant(e) => {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":175095,"byte_end":175124,"line_start":2877,"line_end":2877,"column_start":5,"column_end":34}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":175129,"byte_end":175175,"line_start":2878,"line_end":2878,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":175180,"byte_end":175189,"line_start":2879,"line_end":2879,"column_start":5,"column_end":14}},{"value":"/     Entry::Occupied(_) => panic!(),","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":175194,"byte_end":175233,"line_start":2880,"line_end":2880,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":175238,"byte_end":175243,"line_start":2881,"line_end":2881,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":175248,"byte_end":175251,"line_start":2882,"line_end":2882,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"poneyland\"));","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":175256,"byte_end":175300,"line_start":2883,"line_end":2883,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":175305,"byte_end":175312,"line_start":2884,"line_end":2884,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":175353,"byte_end":175359,"line_start":2885,"line_end":2885,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176654,"byte_end":176657,"line_start":2930,"line_end":2930,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that would be used when inserting a value\n through the `VacantEntry`.","sig":null,"attributes":[{"value":"/ Gets a reference to the key that would be used when inserting a value","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176264,"byte_end":176337,"line_start":2918,"line_end":2918,"column_start":5,"column_end":78}},{"value":"/ through the `VacantEntry`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176342,"byte_end":176372,"line_start":2919,"line_end":2919,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176377,"byte_end":176380,"line_start":2920,"line_end":2920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176385,"byte_end":176399,"line_start":2921,"line_end":2921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176404,"byte_end":176407,"line_start":2922,"line_end":2922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176412,"byte_end":176419,"line_start":2923,"line_end":2923,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176424,"byte_end":176451,"line_start":2924,"line_end":2924,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176456,"byte_end":176459,"line_start":2925,"line_end":2925,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176464,"byte_end":176517,"line_start":2926,"line_end":2926,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176522,"byte_end":176581,"line_start":2927,"line_end":2927,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176586,"byte_end":176593,"line_start":2928,"line_end":2928,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176634,"byte_end":176640,"line_start":2929,"line_end":2929,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":177093,"byte_end":177101,"line_start":2949,"line_end":2949,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"pub fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Take ownership of the key.","sig":null,"attributes":[{"value":"/ Take ownership of the key.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176702,"byte_end":176732,"line_start":2934,"line_end":2934,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176737,"byte_end":176740,"line_start":2935,"line_end":2935,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176745,"byte_end":176759,"line_start":2936,"line_end":2936,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176764,"byte_end":176767,"line_start":2937,"line_end":2937,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176772,"byte_end":176779,"line_start":2938,"line_end":2938,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176784,"byte_end":176811,"line_start":2939,"line_end":2939,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176816,"byte_end":176851,"line_start":2940,"line_end":2940,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176856,"byte_end":176859,"line_start":2941,"line_end":2941,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176864,"byte_end":176917,"line_start":2942,"line_end":2942,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176922,"byte_end":176925,"line_start":2943,"line_end":2943,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(v) = map.entry(\"poneyland\") {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176930,"byte_end":176984,"line_start":2944,"line_end":2944,"column_start":5,"column_end":59}},{"value":"/     v.into_key();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176989,"byte_end":177010,"line_start":2945,"line_end":2945,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":177015,"byte_end":177020,"line_start":2946,"line_end":2946,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":177025,"byte_end":177032,"line_start":2947,"line_end":2947,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":177073,"byte_end":177079,"line_start":2948,"line_end":2948,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1180},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":177652,"byte_end":177658,"line_start":2970,"line_end":2970,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, V) -> &'a mut V where K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":177143,"byte_end":177202,"line_start":2953,"line_end":2953,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":177207,"byte_end":177249,"line_start":2954,"line_end":2954,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":177254,"byte_end":177257,"line_start":2955,"line_end":2955,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":177262,"byte_end":177276,"line_start":2956,"line_end":2956,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":177281,"byte_end":177284,"line_start":2957,"line_end":2957,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":177289,"byte_end":177296,"line_start":2958,"line_end":2958,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":177301,"byte_end":177328,"line_start":2959,"line_end":2959,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":177333,"byte_end":177368,"line_start":2960,"line_end":2960,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":177373,"byte_end":177376,"line_start":2961,"line_end":2961,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":177381,"byte_end":177434,"line_start":2962,"line_end":2962,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":177439,"byte_end":177442,"line_start":2963,"line_end":2963,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(o) = map.entry(\"poneyland\") {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":177447,"byte_end":177501,"line_start":2964,"line_end":2964,"column_start":5,"column_end":59}},{"value":"/     o.insert(37);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":177506,"byte_end":177527,"line_start":2965,"line_end":2965,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":177532,"byte_end":177537,"line_start":2966,"line_end":2966,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[\"poneyland\"], 37);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":177542,"byte_end":177579,"line_start":2967,"line_end":2967,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":177584,"byte_end":177591,"line_start":2968,"line_end":2968,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":177632,"byte_end":177638,"line_start":2969,"line_end":2969,"column_start":41,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1329},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226373,"byte_end":226380,"line_start":114,"line_end":114,"column_start":12,"column_end":19},"name":"HashSet","qualname":"::set::HashSet","value":"HashSet {  }","parent":null,"children":[{"krate":0,"index":1332}],"decl_id":null,"docs":" A hash set implemented as a `HashMap` where the value is `()`.","sig":null,"attributes":[{"value":"/ A hash set implemented as a `HashMap` where the value is `()`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223001,"byte_end":223067,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223068,"byte_end":223071,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ As with the [`HashMap`] type, a `HashSet` requires that the elements","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223072,"byte_end":223144,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ implement the [`Eq`] and [`Hash`] traits. This can frequently be achieved by","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223145,"byte_end":223225,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ using `#[derive(PartialEq, Eq, Hash)]`. If you implement these yourself,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223226,"byte_end":223302,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ it is important that the following property holds:","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223303,"byte_end":223357,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223358,"byte_end":223361,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223362,"byte_end":223373,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ k1 == k2 -> hash(k1) == hash(k2)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223374,"byte_end":223410,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223411,"byte_end":223418,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223419,"byte_end":223422,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In other words, if two keys are equal, their hashes must be equal.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223423,"byte_end":223493,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223494,"byte_end":223497,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223498,"byte_end":223501,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ It is a logic error for an item to be modified in such a way that the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223502,"byte_end":223575,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ item's hash, as determined by the [`Hash`] trait, or its equality, as","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223576,"byte_end":223649,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ determined by the [`Eq`] trait, changes while it is in the set. This is","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223650,"byte_end":223725,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ normally only possible through [`Cell`], [`RefCell`], global state, I/O, or","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223726,"byte_end":223805,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ unsafe code.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223806,"byte_end":223822,"line_start":37,"line_end":37,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223823,"byte_end":223826,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ It is also a logic error for the [`Hash`] implementation of a key to panic.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223827,"byte_end":223906,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ This is generally only possible if the trait is implemented manually. If a","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223907,"byte_end":223985,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ panic does occur then the contents of the `HashSet` may become corrupted and","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223986,"byte_end":224066,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/ some items may be dropped from the table.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224067,"byte_end":224112,"line_start":42,"line_end":42,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224113,"byte_end":224116,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224117,"byte_end":224131,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224132,"byte_end":224135,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224136,"byte_end":224143,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224144,"byte_end":224171,"line_start":47,"line_end":47,"column_start":1,"column_end":28}},{"value":"/ // Type inference lets us omit an explicit type signature (which","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224172,"byte_end":224240,"line_start":48,"line_end":48,"column_start":1,"column_end":69}},{"value":"/ // would be `HashSet<String>` in this example).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224241,"byte_end":224292,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/ let mut books = HashSet::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224293,"byte_end":224328,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224329,"byte_end":224332,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Add some books.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224333,"byte_end":224355,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/ books.insert(\"A Dance With Dragons\".to_string());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224356,"byte_end":224409,"line_start":53,"line_end":53,"column_start":1,"column_end":54}},{"value":"/ books.insert(\"To Kill a Mockingbird\".to_string());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224410,"byte_end":224464,"line_start":54,"line_end":54,"column_start":1,"column_end":55}},{"value":"/ books.insert(\"The Odyssey\".to_string());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224465,"byte_end":224509,"line_start":55,"line_end":55,"column_start":1,"column_end":45}},{"value":"/ books.insert(\"The Great Gatsby\".to_string());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224510,"byte_end":224559,"line_start":56,"line_end":56,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224560,"byte_end":224563,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // Check for a specific one.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224564,"byte_end":224596,"line_start":58,"line_end":58,"column_start":1,"column_end":33}},{"value":"/ if !books.contains(\"The Winds of Winter\") {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224597,"byte_end":224644,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/     println!(\"We have {} books, but The Winds of Winter ain't one.\",","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224645,"byte_end":224717,"line_start":60,"line_end":60,"column_start":1,"column_end":73}},{"value":"/              books.len());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224718,"byte_end":224748,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224749,"byte_end":224754,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224755,"byte_end":224758,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // Remove a book.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224759,"byte_end":224780,"line_start":64,"line_end":64,"column_start":1,"column_end":22}},{"value":"/ books.remove(\"The Odyssey\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224781,"byte_end":224813,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224814,"byte_end":224817,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // Iterate over everything.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224818,"byte_end":224849,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/ for book in &books {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224850,"byte_end":224874,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/     println!(\"{}\", book);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224875,"byte_end":224904,"line_start":69,"line_end":69,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224905,"byte_end":224910,"line_start":70,"line_end":70,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224911,"byte_end":224918,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224919,"byte_end":224922,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The easiest way to use `HashSet` with a custom type is to derive","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224923,"byte_end":224991,"line_start":73,"line_end":73,"column_start":1,"column_end":69}},{"value":"/ [`Eq`] and [`Hash`]. We must also derive [`PartialEq`], this will in the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224992,"byte_end":225068,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ future be implied by [`Eq`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225069,"byte_end":225101,"line_start":75,"line_end":75,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225102,"byte_end":225105,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225106,"byte_end":225113,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225114,"byte_end":225141,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/ #[derive(Hash, Eq, PartialEq, Debug)]","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225142,"byte_end":225183,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/ struct Viking {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225184,"byte_end":225203,"line_start":80,"line_end":80,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225204,"byte_end":225225,"line_start":81,"line_end":81,"column_start":1,"column_end":22}},{"value":"/     power: usize,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225226,"byte_end":225247,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225248,"byte_end":225253,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225254,"byte_end":225257,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ let mut vikings = HashSet::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225258,"byte_end":225295,"line_start":85,"line_end":85,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225296,"byte_end":225299,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ vikings.insert(Viking { name: \"Einar\".to_string(), power: 9 });","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225300,"byte_end":225367,"line_start":87,"line_end":87,"column_start":1,"column_end":68}},{"value":"/ vikings.insert(Viking { name: \"Einar\".to_string(), power: 9 });","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225368,"byte_end":225435,"line_start":88,"line_end":88,"column_start":1,"column_end":68}},{"value":"/ vikings.insert(Viking { name: \"Olaf\".to_string(), power: 4 });","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225436,"byte_end":225502,"line_start":89,"line_end":89,"column_start":1,"column_end":67}},{"value":"/ vikings.insert(Viking { name: \"Harald\".to_string(), power: 8 });","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225503,"byte_end":225571,"line_start":90,"line_end":90,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225572,"byte_end":225575,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ // Use derived implementation to print the vikings.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225576,"byte_end":225631,"line_start":92,"line_end":92,"column_start":1,"column_end":56}},{"value":"/ for x in &vikings {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225632,"byte_end":225655,"line_start":93,"line_end":93,"column_start":1,"column_end":24}},{"value":"/     println!(\"{:?}\", x);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225656,"byte_end":225684,"line_start":94,"line_end":94,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225685,"byte_end":225690,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225691,"byte_end":225698,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225699,"byte_end":225702,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ A `HashSet` with fixed list of elements can be initialized from an array:","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225703,"byte_end":225780,"line_start":98,"line_end":98,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225781,"byte_end":225784,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225785,"byte_end":225792,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225793,"byte_end":225820,"line_start":101,"line_end":101,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225821,"byte_end":225824,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ let viking_names: HashSet<&'static str> =","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225825,"byte_end":225870,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/     [ \"Einar\", \"Olaf\", \"Harald\" ].iter().cloned().collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225871,"byte_end":225935,"line_start":104,"line_end":104,"column_start":1,"column_end":65}},{"value":"/ // use the values stored in the set","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225936,"byte_end":225975,"line_start":105,"line_end":105,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225976,"byte_end":225983,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225984,"byte_end":225987,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`Cell`]: https://doc.rust-lang.org/std/cell/struct.Cell.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225988,"byte_end":226053,"line_start":108,"line_end":108,"column_start":1,"column_end":66}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226054,"byte_end":226113,"line_start":109,"line_end":109,"column_start":1,"column_end":60}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226114,"byte_end":226178,"line_start":110,"line_end":110,"column_start":1,"column_end":65}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226179,"byte_end":226215,"line_start":111,"line_end":111,"column_start":1,"column_end":37}},{"value":"/ [`PartialEq`]: https://doc.rust-lang.org/std/cmp/trait.PartialEq.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226216,"byte_end":226289,"line_start":112,"line_end":112,"column_start":1,"column_end":74}},{"value":"/ [`RefCell`]: https://doc.rust-lang.org/std/cell/struct.RefCell.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226290,"byte_end":226361,"line_start":113,"line_end":113,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227139,"byte_end":227142,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"new","qualname":"<HashSet<T, DefaultHashBuilder>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet`.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226771,"byte_end":226802,"line_start":132,"line_end":132,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226807,"byte_end":226810,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ The hash set is initially created with a capacity of 0, so it will not allocate until it","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226815,"byte_end":226907,"line_start":134,"line_end":134,"column_start":5,"column_end":97}},{"value":"/ is first inserted into.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226912,"byte_end":226939,"line_start":135,"line_end":135,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226944,"byte_end":226947,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226952,"byte_end":226966,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226971,"byte_end":226974,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226979,"byte_end":226986,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226991,"byte_end":227018,"line_start":140,"line_end":140,"column_start":5,"column_end":32}},{"value":"/ let set: HashSet<i32> = HashSet::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227023,"byte_end":227066,"line_start":141,"line_end":141,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227071,"byte_end":227078,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227119,"byte_end":227125,"line_start":143,"line_end":143,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1341},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227695,"byte_end":227708,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<HashSet<T, DefaultHashBuilder>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet` with the specified capacity.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227224,"byte_end":227283,"line_start":150,"line_end":150,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227288,"byte_end":227291,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ The hash set will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227296,"byte_end":227370,"line_start":152,"line_end":152,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash set will not allocate.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227375,"byte_end":227444,"line_start":153,"line_end":153,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227449,"byte_end":227452,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227457,"byte_end":227471,"line_start":155,"line_end":155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227476,"byte_end":227479,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227484,"byte_end":227491,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227496,"byte_end":227523,"line_start":158,"line_end":158,"column_start":5,"column_end":32}},{"value":"/ let set: HashSet<i32> = HashSet::with_capacity(10);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227528,"byte_end":227583,"line_start":159,"line_end":159,"column_start":5,"column_end":60}},{"value":"/ assert!(set.capacity() >= 10);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227588,"byte_end":227622,"line_start":160,"line_end":160,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227627,"byte_end":227634,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227675,"byte_end":227681,"line_start":162,"line_end":162,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228870,"byte_end":228881,"line_start":198,"line_end":198,"column_start":18,"column_end":29},"name":"with_hasher","qualname":"<HashSet<T, S>>::with_hasher","value":"pub const fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty hash set which will use the given hasher to hash\n keys.","sig":null,"attributes":[{"value":"/ Creates a new empty hash set which will use the given hasher to hash","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227852,"byte_end":227924,"line_start":171,"line_end":171,"column_start":5,"column_end":77}},{"value":"/ keys.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227929,"byte_end":227938,"line_start":172,"line_end":172,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227943,"byte_end":227946,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The hash set is also created with the default initial capacity.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227951,"byte_end":228018,"line_start":174,"line_end":174,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228023,"byte_end":228026,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Warning: `hasher` is normally randomly generated, and","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228031,"byte_end":228088,"line_start":176,"line_end":176,"column_start":5,"column_end":62}},{"value":"/ is designed to allow `HashSet`s to be resistant to attacks that","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228093,"byte_end":228160,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228165,"byte_end":228228,"line_start":178,"line_end":178,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228233,"byte_end":228297,"line_start":179,"line_end":179,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228302,"byte_end":228305,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228310,"byte_end":228386,"line_start":181,"line_end":181,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228391,"byte_end":228455,"line_start":182,"line_end":182,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228460,"byte_end":228463,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228468,"byte_end":228471,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228476,"byte_end":228490,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228495,"byte_end":228498,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228503,"byte_end":228510,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228515,"byte_end":228542,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228547,"byte_end":228595,"line_start":189,"line_end":189,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228600,"byte_end":228603,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228608,"byte_end":228650,"line_start":191,"line_end":191,"column_start":5,"column_end":47}},{"value":"/ let mut set = HashSet::with_hasher(s);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228655,"byte_end":228697,"line_start":192,"line_end":192,"column_start":5,"column_end":47}},{"value":"/ set.insert(2);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228702,"byte_end":228720,"line_start":193,"line_end":193,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228725,"byte_end":228732,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228737,"byte_end":228740,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228745,"byte_end":228803,"line_start":196,"line_end":196,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228844,"byte_end":228850,"line_start":197,"line_end":197,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230102,"byte_end":230126,"line_start":231,"line_end":231,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<HashSet<T, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet` with the specified capacity, using\n `hasher` to hash the keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet` with the specified capacity, using","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228986,"byte_end":229051,"line_start":204,"line_end":204,"column_start":5,"column_end":70}},{"value":"/ `hasher` to hash the keys.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229056,"byte_end":229086,"line_start":205,"line_end":205,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229091,"byte_end":229094,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ The hash set will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229099,"byte_end":229173,"line_start":207,"line_end":207,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash set will not allocate.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229178,"byte_end":229247,"line_start":208,"line_end":208,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229252,"byte_end":229255,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Warning: `hasher` is normally randomly generated, and","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229260,"byte_end":229317,"line_start":210,"line_end":210,"column_start":5,"column_end":62}},{"value":"/ is designed to allow `HashSet`s to be resistant to attacks that","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229322,"byte_end":229389,"line_start":211,"line_end":211,"column_start":5,"column_end":72}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229394,"byte_end":229457,"line_start":212,"line_end":212,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229462,"byte_end":229526,"line_start":213,"line_end":213,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229531,"byte_end":229534,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229539,"byte_end":229615,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229620,"byte_end":229684,"line_start":216,"line_end":216,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229689,"byte_end":229692,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229697,"byte_end":229711,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229716,"byte_end":229719,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229724,"byte_end":229731,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229736,"byte_end":229763,"line_start":221,"line_end":221,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229768,"byte_end":229816,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229821,"byte_end":229824,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229829,"byte_end":229871,"line_start":224,"line_end":224,"column_start":5,"column_end":47}},{"value":"/ let mut set = HashSet::with_capacity_and_hasher(10, s);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229876,"byte_end":229935,"line_start":225,"line_end":225,"column_start":5,"column_end":64}},{"value":"/ set.insert(1);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229940,"byte_end":229958,"line_start":226,"line_end":226,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229963,"byte_end":229970,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229975,"byte_end":229978,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229983,"byte_end":230041,"line_start":229,"line_end":229,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230082,"byte_end":230088,"line_start":230,"line_end":230,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1347},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230597,"byte_end":230605,"line_start":247,"line_end":247,"column_start":12,"column_end":20},"name":"capacity","qualname":"<HashSet<T, S>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the set can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the set can hold without reallocating.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230271,"byte_end":230344,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230349,"byte_end":230352,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230357,"byte_end":230371,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230376,"byte_end":230379,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230384,"byte_end":230391,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230396,"byte_end":230423,"line_start":242,"line_end":242,"column_start":5,"column_end":32}},{"value":"/ let set: HashSet<i32> = HashSet::with_capacity(100);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230428,"byte_end":230484,"line_start":243,"line_end":243,"column_start":5,"column_end":61}},{"value":"/ assert!(set.capacity() >= 100);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230489,"byte_end":230524,"line_start":244,"line_end":244,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230529,"byte_end":230536,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230577,"byte_end":230583,"line_start":246,"line_end":246,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1348},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231130,"byte_end":231134,"line_start":268,"line_end":268,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashSet<T, S>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all elements in arbitrary order.\n The iterator element type is `&'a T`.","sig":null,"attributes":[{"value":"/ An iterator visiting all elements in arbitrary order.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230663,"byte_end":230720,"line_start":251,"line_end":251,"column_start":5,"column_end":62}},{"value":"/ The iterator element type is `&'a T`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230725,"byte_end":230766,"line_start":252,"line_end":252,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230771,"byte_end":230774,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230779,"byte_end":230793,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230798,"byte_end":230801,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230806,"byte_end":230813,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230818,"byte_end":230845,"line_start":257,"line_end":257,"column_start":5,"column_end":32}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230850,"byte_end":230883,"line_start":258,"line_end":258,"column_start":5,"column_end":38}},{"value":"/ set.insert(\"a\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230888,"byte_end":230908,"line_start":259,"line_end":259,"column_start":5,"column_end":25}},{"value":"/ set.insert(\"b\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230913,"byte_end":230933,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230938,"byte_end":230941,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ // Will print in an arbitrary order.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230946,"byte_end":230986,"line_start":262,"line_end":262,"column_start":5,"column_end":45}},{"value":"/ for x in set.iter() {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230991,"byte_end":231016,"line_start":263,"line_end":263,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231021,"byte_end":231047,"line_start":264,"line_end":264,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231052,"byte_end":231057,"line_start":265,"line_end":265,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231062,"byte_end":231069,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231110,"byte_end":231116,"line_start":267,"line_end":267,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1349},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231557,"byte_end":231560,"line_start":287,"line_end":287,"column_start":12,"column_end":15},"name":"len","qualname":"<HashSet<T, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the set.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the set.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231230,"byte_end":231276,"line_start":274,"line_end":274,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231281,"byte_end":231284,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231289,"byte_end":231303,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231308,"byte_end":231311,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231316,"byte_end":231323,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231328,"byte_end":231355,"line_start":279,"line_end":279,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231360,"byte_end":231363,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let mut v = HashSet::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231368,"byte_end":231399,"line_start":281,"line_end":281,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(v.len(), 0);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231404,"byte_end":231431,"line_start":282,"line_end":282,"column_start":5,"column_end":32}},{"value":"/ v.insert(1);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231436,"byte_end":231452,"line_start":283,"line_end":283,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(v.len(), 1);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231457,"byte_end":231484,"line_start":284,"line_end":284,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231489,"byte_end":231496,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231537,"byte_end":231543,"line_start":286,"line_end":286,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231944,"byte_end":231952,"line_start":304,"line_end":304,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashSet<T, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no elements.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231613,"byte_end":231664,"line_start":291,"line_end":291,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231669,"byte_end":231672,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231677,"byte_end":231691,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231696,"byte_end":231699,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231704,"byte_end":231711,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231716,"byte_end":231743,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231748,"byte_end":231751,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let mut v = HashSet::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231756,"byte_end":231787,"line_start":298,"line_end":298,"column_start":5,"column_end":36}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231792,"byte_end":231818,"line_start":299,"line_end":299,"column_start":5,"column_end":31}},{"value":"/ v.insert(1);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231823,"byte_end":231839,"line_start":300,"line_end":300,"column_start":5,"column_end":21}},{"value":"/ assert!(!v.is_empty());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231844,"byte_end":231871,"line_start":301,"line_end":301,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231876,"byte_end":231883,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231924,"byte_end":231930,"line_start":303,"line_end":303,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232500,"byte_end":232505,"line_start":326,"line_end":326,"column_start":12,"column_end":17},"name":"drain","qualname":"<HashSet<T, S>>::drain","value":"pub fn drain(&mut Self) -> Drain<, T>","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, returning all elements in an iterator.","sig":null,"attributes":[{"value":"/ Clears the set, returning all elements in an iterator.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232009,"byte_end":232067,"line_start":308,"line_end":308,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232072,"byte_end":232075,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232080,"byte_end":232094,"line_start":310,"line_end":310,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232099,"byte_end":232102,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232107,"byte_end":232114,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232119,"byte_end":232146,"line_start":313,"line_end":313,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232151,"byte_end":232154,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232159,"byte_end":232225,"line_start":315,"line_end":315,"column_start":5,"column_end":71}},{"value":"/ assert!(!set.is_empty());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232230,"byte_end":232259,"line_start":316,"line_end":316,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232264,"byte_end":232267,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ // print 1, 2, 3 in an arbitrary order","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232272,"byte_end":232314,"line_start":318,"line_end":318,"column_start":5,"column_end":47}},{"value":"/ for i in set.drain() {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232319,"byte_end":232345,"line_start":319,"line_end":319,"column_start":5,"column_end":31}},{"value":"/     println!(\"{}\", i);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232350,"byte_end":232376,"line_start":320,"line_end":320,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232381,"byte_end":232386,"line_start":321,"line_end":321,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232391,"byte_end":232394,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ assert!(set.is_empty());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232399,"byte_end":232427,"line_start":323,"line_end":323,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232432,"byte_end":232439,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232480,"byte_end":232486,"line_start":325,"line_end":325,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233036,"byte_end":233042,"line_start":346,"line_end":346,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashSet<T, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[{"value":"/ Retains only the elements specified by the predicate.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232608,"byte_end":232665,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232670,"byte_end":232673,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ In other words, remove all elements `e` such that `f(&e)` returns `false`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232678,"byte_end":232756,"line_start":334,"line_end":334,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232761,"byte_end":232764,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232769,"byte_end":232783,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232788,"byte_end":232791,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232796,"byte_end":232803,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232808,"byte_end":232835,"line_start":339,"line_end":339,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232840,"byte_end":232843,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ let xs = [1,2,3,4,5,6];","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232848,"byte_end":232875,"line_start":341,"line_end":341,"column_start":5,"column_end":32}},{"value":"/ let mut set: HashSet<i32> = xs.iter().cloned().collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232880,"byte_end":232941,"line_start":342,"line_end":342,"column_start":5,"column_end":66}},{"value":"/ set.retain(|&k| k % 2 == 0);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232946,"byte_end":232978,"line_start":343,"line_end":343,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232983,"byte_end":233012,"line_start":344,"line_end":344,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233017,"byte_end":233024,"line_start":345,"line_end":345,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234112,"byte_end":234124,"line_start":379,"line_end":379,"column_start":12,"column_end":24},"name":"drain_filter","qualname":"<HashSet<T, S>>::drain_filter","value":"pub fn drain_filter<F>(&mut Self, F) -> DrainFilter<, T, F> where F: FnMut(&T)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Drains elements which are true under the given predicate,\n and returns an iterator over the removed items.","sig":null,"attributes":[{"value":"/ Drains elements which are true under the given predicate,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233162,"byte_end":233223,"line_start":353,"line_end":353,"column_start":5,"column_end":66}},{"value":"/ and returns an iterator over the removed items.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233228,"byte_end":233279,"line_start":354,"line_end":354,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233284,"byte_end":233287,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ In other words, move all elements `e` such that `f(&e)` returns `true` out","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233292,"byte_end":233370,"line_start":356,"line_end":356,"column_start":5,"column_end":83}},{"value":"/ into another iterator.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233375,"byte_end":233401,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233406,"byte_end":233409,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ When the returned DrainedFilter is dropped, any remaining elements that satisfy","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233414,"byte_end":233497,"line_start":359,"line_end":359,"column_start":5,"column_end":88}},{"value":"/ the predicate are dropped from the set.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233502,"byte_end":233545,"line_start":360,"line_end":360,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233550,"byte_end":233553,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233558,"byte_end":233572,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233577,"byte_end":233580,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233585,"byte_end":233592,"line_start":364,"line_end":364,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233597,"byte_end":233624,"line_start":365,"line_end":365,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233629,"byte_end":233632,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<i32> = (0..8).collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233637,"byte_end":233686,"line_start":367,"line_end":367,"column_start":5,"column_end":54}},{"value":"/ let drained: HashSet<i32> = set.drain_filter(|v| v % 2 == 0).collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233691,"byte_end":233766,"line_start":368,"line_end":368,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233771,"byte_end":233774,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ let mut evens = drained.into_iter().collect::<Vec<_>>();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233779,"byte_end":233839,"line_start":370,"line_end":370,"column_start":5,"column_end":65}},{"value":"/ let mut odds = set.into_iter().collect::<Vec<_>>();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233844,"byte_end":233899,"line_start":371,"line_end":371,"column_start":5,"column_end":60}},{"value":"/ evens.sort();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233904,"byte_end":233921,"line_start":372,"line_end":372,"column_start":5,"column_end":22}},{"value":"/ odds.sort();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233926,"byte_end":233942,"line_start":373,"line_end":373,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233947,"byte_end":233950,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens, vec![0, 2, 4, 6]);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233955,"byte_end":233995,"line_start":375,"line_end":375,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(odds, vec![1, 3, 5, 7]);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234000,"byte_end":234039,"line_start":376,"line_end":376,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234044,"byte_end":234051,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234092,"byte_end":234098,"line_start":378,"line_end":378,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234734,"byte_end":234739,"line_start":405,"line_end":405,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashSet<T, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all values.","sig":null,"attributes":[{"value":"/ Clears the set, removing all values.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234427,"byte_end":234467,"line_start":392,"line_end":392,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234472,"byte_end":234475,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234480,"byte_end":234494,"line_start":394,"line_end":394,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234499,"byte_end":234502,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234507,"byte_end":234514,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234519,"byte_end":234546,"line_start":397,"line_end":397,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234551,"byte_end":234554,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ let mut v = HashSet::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234559,"byte_end":234590,"line_start":399,"line_end":399,"column_start":5,"column_end":36}},{"value":"/ v.insert(1);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234595,"byte_end":234611,"line_start":400,"line_end":400,"column_start":5,"column_end":21}},{"value":"/ v.clear();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234616,"byte_end":234630,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234635,"byte_end":234661,"line_start":402,"line_end":402,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234666,"byte_end":234673,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234714,"byte_end":234720,"line_start":404,"line_end":404,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235316,"byte_end":235322,"line_start":424,"line_end":424,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashSet<T, S>>::hasher","value":"pub fn hasher(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the set's [`BuildHasher`].","sig":null,"attributes":[{"value":"/ Returns a reference to the set's [`BuildHasher`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234789,"byte_end":234842,"line_start":409,"line_end":409,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234847,"byte_end":234850,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234855,"byte_end":234933,"line_start":411,"line_end":411,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234938,"byte_end":234941,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234946,"byte_end":234960,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234965,"byte_end":234968,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234973,"byte_end":234980,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234985,"byte_end":235012,"line_start":416,"line_end":416,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235017,"byte_end":235065,"line_start":417,"line_end":417,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235070,"byte_end":235073,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ let hasher = DefaultHashBuilder::default();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235078,"byte_end":235125,"line_start":419,"line_end":419,"column_start":5,"column_end":52}},{"value":"/ let set: HashSet<i32> = HashSet::with_hasher(hasher);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235130,"byte_end":235187,"line_start":420,"line_end":420,"column_start":5,"column_end":62}},{"value":"/ let hasher: &DefaultHashBuilder = set.hasher();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235192,"byte_end":235243,"line_start":421,"line_end":421,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235248,"byte_end":235255,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235296,"byte_end":235302,"line_start":423,"line_end":423,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235991,"byte_end":235998,"line_start":451,"line_end":451,"column_start":12,"column_end":19},"name":"reserve","qualname":"<HashSet<T, S>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more elements to be inserted\n in the `HashSet`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more elements to be inserted","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235448,"byte_end":235524,"line_start":434,"line_end":434,"column_start":5,"column_end":81}},{"value":"/ in the `HashSet`. The collection may reserve more space to avoid","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235529,"byte_end":235597,"line_start":435,"line_end":435,"column_start":5,"column_end":73}},{"value":"/ frequent reallocations.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235602,"byte_end":235629,"line_start":436,"line_end":436,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235634,"byte_end":235637,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235642,"byte_end":235654,"line_start":438,"line_end":438,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235659,"byte_end":235662,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ Panics if the new allocation size overflows `usize`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235667,"byte_end":235723,"line_start":440,"line_end":440,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235728,"byte_end":235731,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235736,"byte_end":235750,"line_start":442,"line_end":442,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235755,"byte_end":235758,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235763,"byte_end":235770,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235775,"byte_end":235802,"line_start":445,"line_end":445,"column_start":5,"column_end":32}},{"value":"/ let mut set: HashSet<i32> = HashSet::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235807,"byte_end":235854,"line_start":446,"line_end":446,"column_start":5,"column_end":52}},{"value":"/ set.reserve(10);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235859,"byte_end":235879,"line_start":447,"line_end":447,"column_start":5,"column_end":25}},{"value":"/ assert!(set.capacity() >= 10);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235884,"byte_end":235918,"line_start":448,"line_end":448,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235923,"byte_end":235930,"line_start":449,"line_end":449,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235971,"byte_end":235977,"line_start":450,"line_end":450,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236705,"byte_end":236716,"line_start":472,"line_end":472,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<HashSet<T, S>>::try_reserve","value":"pub fn try_reserve(&mut Self, usize) -> Result<(), TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to reserve capacity for at least `additional` more elements to be inserted\n in the given `HashSet<K,V>`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Tries to reserve capacity for at least `additional` more elements to be inserted","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236079,"byte_end":236163,"line_start":455,"line_end":455,"column_start":5,"column_end":89}},{"value":"/ in the given `HashSet<K,V>`. The collection may reserve more space to avoid","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236168,"byte_end":236247,"line_start":456,"line_end":456,"column_start":5,"column_end":84}},{"value":"/ frequent reallocations.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236252,"byte_end":236279,"line_start":457,"line_end":457,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236284,"byte_end":236287,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236292,"byte_end":236304,"line_start":459,"line_end":459,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236309,"byte_end":236312,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ If the capacity overflows, or the allocator reports a failure, then an error","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236317,"byte_end":236397,"line_start":461,"line_end":461,"column_start":5,"column_end":85}},{"value":"/ is returned.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236402,"byte_end":236418,"line_start":462,"line_end":462,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236423,"byte_end":236426,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236431,"byte_end":236445,"line_start":464,"line_end":464,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236450,"byte_end":236453,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236458,"byte_end":236465,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236470,"byte_end":236497,"line_start":467,"line_end":467,"column_start":5,"column_end":32}},{"value":"/ let mut set: HashSet<i32> = HashSet::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236502,"byte_end":236549,"line_start":468,"line_end":468,"column_start":5,"column_end":52}},{"value":"/ set.try_reserve(10).expect(\"why is the test harness OOMing on 10 bytes?\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236554,"byte_end":236632,"line_start":469,"line_end":469,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236637,"byte_end":236644,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236685,"byte_end":236691,"line_start":471,"line_end":471,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237413,"byte_end":237426,"line_start":493,"line_end":493,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<HashSet<T, S>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the set as much as possible. It will drop\n down as much as possible while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the set as much as possible. It will drop","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236832,"byte_end":236901,"line_start":476,"line_end":476,"column_start":5,"column_end":74}},{"value":"/ down as much as possible while maintaining the internal rules","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236906,"byte_end":236971,"line_start":477,"line_end":477,"column_start":5,"column_end":70}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236976,"byte_end":237049,"line_start":478,"line_end":478,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237054,"byte_end":237057,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237062,"byte_end":237076,"line_start":480,"line_end":480,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237081,"byte_end":237084,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237089,"byte_end":237096,"line_start":482,"line_end":482,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237101,"byte_end":237128,"line_start":483,"line_end":483,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237133,"byte_end":237136,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::with_capacity(100);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237141,"byte_end":237187,"line_start":485,"line_end":485,"column_start":5,"column_end":51}},{"value":"/ set.insert(1);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237192,"byte_end":237210,"line_start":486,"line_end":486,"column_start":5,"column_end":23}},{"value":"/ set.insert(2);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237215,"byte_end":237233,"line_start":487,"line_end":487,"column_start":5,"column_end":23}},{"value":"/ assert!(set.capacity() >= 100);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237238,"byte_end":237273,"line_start":488,"line_end":488,"column_start":5,"column_end":40}},{"value":"/ set.shrink_to_fit();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237278,"byte_end":237302,"line_start":489,"line_end":489,"column_start":5,"column_end":29}},{"value":"/ assert!(set.capacity() >= 2);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237307,"byte_end":237340,"line_start":490,"line_end":490,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237345,"byte_end":237352,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237393,"byte_end":237399,"line_start":492,"line_end":492,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238242,"byte_end":238251,"line_start":519,"line_end":519,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<HashSet<T, S>>::shrink_to","value":"pub fn shrink_to(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the set with a lower limit. It will drop\n down no lower than the supplied limit while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the set with a lower limit. It will drop","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237484,"byte_end":237552,"line_start":497,"line_end":497,"column_start":5,"column_end":73}},{"value":"/ down no lower than the supplied limit while maintaining the internal rules","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237557,"byte_end":237635,"line_start":498,"line_end":498,"column_start":5,"column_end":83}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237640,"byte_end":237713,"line_start":499,"line_end":499,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237718,"byte_end":237721,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Panics if the current capacity is smaller than the supplied","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237726,"byte_end":237789,"line_start":501,"line_end":501,"column_start":5,"column_end":68}},{"value":"/ minimum capacity.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237794,"byte_end":237815,"line_start":502,"line_end":502,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237820,"byte_end":237823,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237828,"byte_end":237842,"line_start":504,"line_end":504,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237847,"byte_end":237850,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237855,"byte_end":237862,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237867,"byte_end":237894,"line_start":507,"line_end":507,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237899,"byte_end":237902,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::with_capacity(100);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237907,"byte_end":237953,"line_start":509,"line_end":509,"column_start":5,"column_end":51}},{"value":"/ set.insert(1);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237958,"byte_end":237976,"line_start":510,"line_end":510,"column_start":5,"column_end":23}},{"value":"/ set.insert(2);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237981,"byte_end":237999,"line_start":511,"line_end":511,"column_start":5,"column_end":23}},{"value":"/ assert!(set.capacity() >= 100);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238004,"byte_end":238039,"line_start":512,"line_end":512,"column_start":5,"column_end":40}},{"value":"/ set.shrink_to(10);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238044,"byte_end":238066,"line_start":513,"line_end":513,"column_start":5,"column_end":27}},{"value":"/ assert!(set.capacity() >= 10);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238071,"byte_end":238105,"line_start":514,"line_end":514,"column_start":5,"column_end":39}},{"value":"/ set.shrink_to(0);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238110,"byte_end":238131,"line_start":515,"line_end":515,"column_start":5,"column_end":26}},{"value":"/ assert!(set.capacity() >= 2);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238136,"byte_end":238169,"line_start":516,"line_end":516,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238174,"byte_end":238181,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238222,"byte_end":238228,"line_start":518,"line_end":518,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239193,"byte_end":239203,"line_start":547,"line_end":547,"column_start":12,"column_end":22},"name":"difference","qualname":"<HashSet<T, S>>::difference","value":"pub fn difference<'a>(&'a Self, &'a Self) -> Difference","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the difference,\n i.e., the values that are in `self` but not in `other`.","sig":null,"attributes":[{"value":"/ Visits the values representing the difference,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238338,"byte_end":238388,"line_start":523,"line_end":523,"column_start":5,"column_end":55}},{"value":"/ i.e., the values that are in `self` but not in `other`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238393,"byte_end":238452,"line_start":524,"line_end":524,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238457,"byte_end":238460,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238465,"byte_end":238479,"line_start":526,"line_end":526,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238484,"byte_end":238487,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238492,"byte_end":238499,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238504,"byte_end":238531,"line_start":529,"line_end":529,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238536,"byte_end":238596,"line_start":530,"line_end":530,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238601,"byte_end":238664,"line_start":531,"line_end":531,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238669,"byte_end":238672,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ // Can be seen as `a - b`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238677,"byte_end":238707,"line_start":533,"line_end":533,"column_start":5,"column_end":35}},{"value":"/ for x in a.difference(&b) {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238712,"byte_end":238743,"line_start":534,"line_end":534,"column_start":5,"column_end":36}},{"value":"/     println!(\"{}\", x); // Print 1","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238748,"byte_end":238785,"line_start":535,"line_end":535,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238790,"byte_end":238795,"line_start":536,"line_end":536,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238800,"byte_end":238803,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ let diff: HashSet<_> = a.difference(&b).collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238808,"byte_end":238862,"line_start":538,"line_end":538,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(diff, [1].iter().collect());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238867,"byte_end":238910,"line_start":539,"line_end":539,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238915,"byte_end":238918,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ // Note that difference is not symmetric,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238923,"byte_end":238968,"line_start":541,"line_end":541,"column_start":5,"column_end":50}},{"value":"/ // and `b - a` means something else:","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238973,"byte_end":239013,"line_start":542,"line_end":542,"column_start":5,"column_end":45}},{"value":"/ let diff: HashSet<_> = b.difference(&a).collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239018,"byte_end":239072,"line_start":543,"line_end":543,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(diff, [4].iter().collect());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239077,"byte_end":239120,"line_start":544,"line_end":544,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239125,"byte_end":239132,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239173,"byte_end":239179,"line_start":546,"line_end":546,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240152,"byte_end":240172,"line_start":576,"line_end":576,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<HashSet<T, S>>::symmetric_difference","value":"pub fn symmetric_difference<'a>(&'a Self, &'a Self) -> SymmetricDifference","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the symmetric difference,\n i.e., the values that are in `self` or in `other` but not in both.","sig":null,"attributes":[{"value":"/ Visits the values representing the symmetric difference,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239353,"byte_end":239413,"line_start":554,"line_end":554,"column_start":5,"column_end":65}},{"value":"/ i.e., the values that are in `self` or in `other` but not in both.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239418,"byte_end":239488,"line_start":555,"line_end":555,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239493,"byte_end":239496,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239501,"byte_end":239515,"line_start":557,"line_end":557,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239520,"byte_end":239523,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239528,"byte_end":239535,"line_start":559,"line_end":559,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239540,"byte_end":239567,"line_start":560,"line_end":560,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239572,"byte_end":239632,"line_start":561,"line_end":561,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239637,"byte_end":239700,"line_start":562,"line_end":562,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239705,"byte_end":239708,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ // Print 1, 4 in arbitrary order.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239713,"byte_end":239750,"line_start":564,"line_end":564,"column_start":5,"column_end":42}},{"value":"/ for x in a.symmetric_difference(&b) {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239755,"byte_end":239796,"line_start":565,"line_end":565,"column_start":5,"column_end":46}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239801,"byte_end":239827,"line_start":566,"line_end":566,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239832,"byte_end":239837,"line_start":567,"line_end":567,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239842,"byte_end":239845,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ let diff1: HashSet<_> = a.symmetric_difference(&b).collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239850,"byte_end":239915,"line_start":569,"line_end":569,"column_start":5,"column_end":70}},{"value":"/ let diff2: HashSet<_> = b.symmetric_difference(&a).collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239920,"byte_end":239985,"line_start":570,"line_end":570,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239990,"byte_end":239993,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(diff1, diff2);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239998,"byte_end":240027,"line_start":572,"line_end":572,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(diff1, [1, 4].iter().collect());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240032,"byte_end":240079,"line_start":573,"line_end":573,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240084,"byte_end":240091,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240132,"byte_end":240138,"line_start":575,"line_end":575,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241026,"byte_end":241038,"line_start":601,"line_end":601,"column_start":12,"column_end":24},"name":"intersection","qualname":"<HashSet<T, S>>::intersection","value":"pub fn intersection<'a>(&'a Self, &'a Self) -> Intersection","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the intersection,\n i.e., the values that are both in `self` and `other`.","sig":null,"attributes":[{"value":"/ Visits the values representing the intersection,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240362,"byte_end":240414,"line_start":582,"line_end":582,"column_start":5,"column_end":57}},{"value":"/ i.e., the values that are both in `self` and `other`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240419,"byte_end":240476,"line_start":583,"line_end":583,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240481,"byte_end":240484,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240489,"byte_end":240503,"line_start":585,"line_end":585,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240508,"byte_end":240511,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240516,"byte_end":240523,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240528,"byte_end":240555,"line_start":588,"line_end":588,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240560,"byte_end":240620,"line_start":589,"line_end":589,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240625,"byte_end":240688,"line_start":590,"line_end":590,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240693,"byte_end":240696,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ // Print 2, 3 in arbitrary order.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240701,"byte_end":240738,"line_start":592,"line_end":592,"column_start":5,"column_end":42}},{"value":"/ for x in a.intersection(&b) {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240743,"byte_end":240776,"line_start":593,"line_end":593,"column_start":5,"column_end":38}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240781,"byte_end":240807,"line_start":594,"line_end":594,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240812,"byte_end":240817,"line_start":595,"line_end":595,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240822,"byte_end":240825,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ let intersection: HashSet<_> = a.intersection(&b).collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240830,"byte_end":240894,"line_start":597,"line_end":597,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(intersection, [2, 3].iter().collect());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240899,"byte_end":240953,"line_start":598,"line_end":598,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240958,"byte_end":240965,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241006,"byte_end":241012,"line_start":600,"line_end":600,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241996,"byte_end":242001,"line_start":632,"line_end":632,"column_start":12,"column_end":17},"name":"union","qualname":"<HashSet<T, S>>::union","value":"pub fn union<'a>(&'a Self, &'a Self) -> Union","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the union,\n i.e., all the values in `self` or `other`, without duplicates.","sig":null,"attributes":[{"value":"/ Visits the values representing the union,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241346,"byte_end":241391,"line_start":613,"line_end":613,"column_start":5,"column_end":50}},{"value":"/ i.e., all the values in `self` or `other`, without duplicates.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241396,"byte_end":241462,"line_start":614,"line_end":614,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241467,"byte_end":241470,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241475,"byte_end":241489,"line_start":616,"line_end":616,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241494,"byte_end":241497,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241502,"byte_end":241509,"line_start":618,"line_end":618,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241514,"byte_end":241541,"line_start":619,"line_end":619,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241546,"byte_end":241606,"line_start":620,"line_end":620,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241611,"byte_end":241674,"line_start":621,"line_end":621,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241679,"byte_end":241682,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ // Print 1, 2, 3, 4 in arbitrary order.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241687,"byte_end":241730,"line_start":623,"line_end":623,"column_start":5,"column_end":48}},{"value":"/ for x in a.union(&b) {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241735,"byte_end":241761,"line_start":624,"line_end":624,"column_start":5,"column_end":31}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241766,"byte_end":241792,"line_start":625,"line_end":625,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241797,"byte_end":241802,"line_start":626,"line_end":626,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241807,"byte_end":241810,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ let union: HashSet<_> = a.union(&b).collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241815,"byte_end":241865,"line_start":628,"line_end":628,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(union, [1, 2, 3, 4].iter().collect());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241870,"byte_end":241923,"line_start":629,"line_end":629,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241928,"byte_end":241935,"line_start":630,"line_end":630,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241976,"byte_end":241982,"line_start":631,"line_end":631,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242981,"byte_end":242989,"line_start":662,"line_end":662,"column_start":12,"column_end":20},"name":"contains","qualname":"<HashSet<T, S>>::contains","value":"pub fn contains<Q: ?Sized>(&Self, &Q) -> bool where T: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains a value.","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains a value.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242301,"byte_end":242348,"line_start":643,"line_end":643,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242353,"byte_end":242356,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242361,"byte_end":242428,"line_start":645,"line_end":645,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242433,"byte_end":242500,"line_start":646,"line_end":646,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242505,"byte_end":242524,"line_start":647,"line_end":647,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242529,"byte_end":242532,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242537,"byte_end":242551,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242556,"byte_end":242559,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242564,"byte_end":242571,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242576,"byte_end":242603,"line_start":652,"line_end":652,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242608,"byte_end":242611,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ let set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242616,"byte_end":242678,"line_start":654,"line_end":654,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(set.contains(&1), true);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242683,"byte_end":242722,"line_start":655,"line_end":655,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(set.contains(&4), false);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242727,"byte_end":242767,"line_start":656,"line_end":656,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242772,"byte_end":242779,"line_start":657,"line_end":657,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242784,"byte_end":242787,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242792,"byte_end":242851,"line_start":659,"line_end":659,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242856,"byte_end":242920,"line_start":660,"line_end":660,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242961,"byte_end":242967,"line_start":661,"line_end":661,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243851,"byte_end":243854,"line_start":689,"line_end":689,"column_start":12,"column_end":15},"name":"get","qualname":"<HashSet<T, S>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&T> where T: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value in the set, if any, that is equal to the given value.","sig":null,"attributes":[{"value":"/ Returns a reference to the value in the set, if any, that is equal to the given value.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243135,"byte_end":243225,"line_start":670,"line_end":670,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243230,"byte_end":243233,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243238,"byte_end":243305,"line_start":672,"line_end":672,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243310,"byte_end":243377,"line_start":673,"line_end":673,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243382,"byte_end":243401,"line_start":674,"line_end":674,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243406,"byte_end":243409,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243414,"byte_end":243428,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243433,"byte_end":243436,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243441,"byte_end":243448,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243453,"byte_end":243480,"line_start":679,"line_end":679,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243485,"byte_end":243488,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ let set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243493,"byte_end":243555,"line_start":681,"line_end":681,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(set.get(&2), Some(&2));","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243560,"byte_end":243598,"line_start":682,"line_end":682,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(set.get(&4), None);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243603,"byte_end":243637,"line_start":683,"line_end":683,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243642,"byte_end":243649,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243654,"byte_end":243657,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243662,"byte_end":243721,"line_start":686,"line_end":686,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243726,"byte_end":243790,"line_start":687,"line_end":687,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243831,"byte_end":243837,"line_start":688,"line_end":688,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244683,"byte_end":244696,"line_start":716,"line_end":716,"column_start":12,"column_end":25},"name":"get_or_insert","qualname":"<HashSet<T, S>>::get_or_insert","value":"pub fn get_or_insert(&mut Self, T) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Inserts the given `value` into the set if it is not present, then\n returns a reference to the value in the set.","sig":null,"attributes":[{"value":"/ Inserts the given `value` into the set if it is not present, then","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244146,"byte_end":244215,"line_start":701,"line_end":701,"column_start":5,"column_end":74}},{"value":"/ returns a reference to the value in the set.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244220,"byte_end":244268,"line_start":702,"line_end":702,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244273,"byte_end":244276,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244281,"byte_end":244295,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244300,"byte_end":244303,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244308,"byte_end":244315,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244320,"byte_end":244347,"line_start":707,"line_end":707,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244352,"byte_end":244355,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244360,"byte_end":244426,"line_start":709,"line_end":709,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244431,"byte_end":244460,"line_start":710,"line_end":710,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(set.get_or_insert(2), &2);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244465,"byte_end":244506,"line_start":711,"line_end":711,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(set.get_or_insert(100), &100);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244511,"byte_end":244556,"line_start":712,"line_end":712,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(set.len(), 4); // 100 was inserted","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244561,"byte_end":244610,"line_start":713,"line_end":713,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244615,"byte_end":244622,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244663,"byte_end":244669,"line_start":715,"line_end":715,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245687,"byte_end":245706,"line_start":745,"line_end":745,"column_start":12,"column_end":31},"name":"get_or_insert_owned","qualname":"<HashSet<T, S>>::get_or_insert_owned","value":"pub fn get_or_insert_owned<Q: ?Sized>(&mut Self, &Q) -> &T where T: Borrow<Q>,\nQ: Hash + Eq + ToOwned<Owned = T>","parent":null,"children":[],"decl_id":null,"docs":" Inserts an owned copy of the given `value` into the set if it is not\n present, then returns a reference to the value in the set.","sig":null,"attributes":[{"value":"/ Inserts an owned copy of the given `value` into the set if it is not","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245051,"byte_end":245123,"line_start":726,"line_end":726,"column_start":5,"column_end":77}},{"value":"/ present, then returns a reference to the value in the set.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245128,"byte_end":245190,"line_start":727,"line_end":727,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245195,"byte_end":245198,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245203,"byte_end":245217,"line_start":729,"line_end":729,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245222,"byte_end":245225,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245230,"byte_end":245237,"line_start":731,"line_end":731,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245242,"byte_end":245269,"line_start":732,"line_end":732,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245274,"byte_end":245277,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<String> = [\"cat\", \"dog\", \"horse\"]","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245282,"byte_end":245340,"line_start":734,"line_end":734,"column_start":5,"column_end":63}},{"value":"/     .iter().map(|&pet| pet.to_owned()).collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245345,"byte_end":245398,"line_start":735,"line_end":735,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245403,"byte_end":245406,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245411,"byte_end":245440,"line_start":737,"line_end":737,"column_start":5,"column_end":34}},{"value":"/ for &pet in &[\"cat\", \"dog\", \"fish\"] {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245445,"byte_end":245486,"line_start":738,"line_end":738,"column_start":5,"column_end":46}},{"value":"/     let value = set.get_or_insert_owned(pet);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245491,"byte_end":245540,"line_start":739,"line_end":739,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(value, pet);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245545,"byte_end":245576,"line_start":740,"line_end":740,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245581,"byte_end":245586,"line_start":741,"line_end":741,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(set.len(), 4); // a new \"fish\" was inserted","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245591,"byte_end":245649,"line_start":742,"line_end":742,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245654,"byte_end":245661,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245666,"byte_end":245675,"line_start":744,"line_end":744,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246863,"byte_end":246881,"line_start":778,"line_end":778,"column_start":12,"column_end":30},"name":"get_or_insert_with","qualname":"<HashSet<T, S>>::get_or_insert_with","value":"pub fn get_or_insert_with<Q: ?Sized, F>(&mut Self, &Q, F) -> &T where\nT: Borrow<Q>, Q: Hash + Eq, F: FnOnce(&Q) -> T","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value computed from `f` into the set if the given `value` is\n not present, then returns a reference to the value in the set.","sig":null,"attributes":[{"value":"/ Inserts a value computed from `f` into the set if the given `value` is","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246172,"byte_end":246246,"line_start":759,"line_end":759,"column_start":5,"column_end":79}},{"value":"/ not present, then returns a reference to the value in the set.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246251,"byte_end":246317,"line_start":760,"line_end":760,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246322,"byte_end":246325,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246330,"byte_end":246344,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246349,"byte_end":246352,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246357,"byte_end":246364,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246369,"byte_end":246396,"line_start":765,"line_end":765,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246401,"byte_end":246404,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<String> = [\"cat\", \"dog\", \"horse\"]","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246409,"byte_end":246467,"line_start":767,"line_end":767,"column_start":5,"column_end":63}},{"value":"/     .iter().map(|&pet| pet.to_owned()).collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246472,"byte_end":246525,"line_start":768,"line_end":768,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246530,"byte_end":246533,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246538,"byte_end":246567,"line_start":770,"line_end":770,"column_start":5,"column_end":34}},{"value":"/ for &pet in &[\"cat\", \"dog\", \"fish\"] {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246572,"byte_end":246613,"line_start":771,"line_end":771,"column_start":5,"column_end":46}},{"value":"/     let value = set.get_or_insert_with(pet, str::to_owned);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246618,"byte_end":246681,"line_start":772,"line_end":772,"column_start":5,"column_end":68}},{"value":"/     assert_eq!(value, pet);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246686,"byte_end":246717,"line_start":773,"line_end":773,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246722,"byte_end":246727,"line_start":774,"line_end":774,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(set.len(), 4); // a new \"fish\" was inserted","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246732,"byte_end":246790,"line_start":775,"line_end":775,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246795,"byte_end":246802,"line_start":776,"line_end":776,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246843,"byte_end":246849,"line_start":777,"line_end":777,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":247887,"byte_end":247898,"line_start":810,"line_end":810,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<HashSet<T, S>>::is_disjoint","value":"pub fn is_disjoint(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`.\n This is equivalent to checking for an empty intersection.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":247355,"byte_end":247423,"line_start":793,"line_end":793,"column_start":5,"column_end":73}},{"value":"/ This is equivalent to checking for an empty intersection.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":247428,"byte_end":247489,"line_start":794,"line_end":794,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":247494,"byte_end":247497,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":247502,"byte_end":247516,"line_start":796,"line_end":796,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":247521,"byte_end":247524,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":247529,"byte_end":247536,"line_start":798,"line_end":798,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":247541,"byte_end":247568,"line_start":799,"line_end":799,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":247573,"byte_end":247576,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":247581,"byte_end":247641,"line_start":801,"line_end":801,"column_start":5,"column_end":65}},{"value":"/ let mut b = HashSet::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":247646,"byte_end":247677,"line_start":802,"line_end":802,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":247682,"byte_end":247685,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.is_disjoint(&b), true);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":247690,"byte_end":247730,"line_start":804,"line_end":804,"column_start":5,"column_end":45}},{"value":"/ b.insert(4);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":247735,"byte_end":247751,"line_start":805,"line_end":805,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(a.is_disjoint(&b), true);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":247756,"byte_end":247796,"line_start":806,"line_end":806,"column_start":5,"column_end":45}},{"value":"/ b.insert(1);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":247801,"byte_end":247817,"line_start":807,"line_end":807,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(a.is_disjoint(&b), false);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":247822,"byte_end":247863,"line_start":808,"line_end":808,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":247868,"byte_end":247875,"line_start":809,"line_end":809,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248520,"byte_end":248529,"line_start":831,"line_end":831,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<HashSet<T, S>>::is_subset","value":"pub fn is_subset(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a subset of another,\n i.e., `other` contains at least all the values in `self`.","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a subset of another,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":247989,"byte_end":248042,"line_start":814,"line_end":814,"column_start":5,"column_end":58}},{"value":"/ i.e., `other` contains at least all the values in `self`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248047,"byte_end":248108,"line_start":815,"line_end":815,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248113,"byte_end":248116,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248121,"byte_end":248135,"line_start":817,"line_end":817,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248140,"byte_end":248143,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248148,"byte_end":248155,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248160,"byte_end":248187,"line_start":820,"line_end":820,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248192,"byte_end":248195,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ let sup: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248200,"byte_end":248262,"line_start":822,"line_end":822,"column_start":5,"column_end":67}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248267,"byte_end":248300,"line_start":823,"line_end":823,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248305,"byte_end":248308,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.is_subset(&sup), true);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248313,"byte_end":248355,"line_start":825,"line_end":825,"column_start":5,"column_end":47}},{"value":"/ set.insert(2);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248360,"byte_end":248378,"line_start":826,"line_end":826,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_subset(&sup), true);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248383,"byte_end":248425,"line_start":827,"line_end":827,"column_start":5,"column_end":47}},{"value":"/ set.insert(4);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248430,"byte_end":248448,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_subset(&sup), false);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248453,"byte_end":248496,"line_start":829,"line_end":829,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248501,"byte_end":248508,"line_start":830,"line_end":830,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249273,"byte_end":249284,"line_start":856,"line_end":856,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<HashSet<T, S>>::is_superset","value":"pub fn is_superset(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a superset of another,\n i.e., `self` contains at least all the values in `other`.","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a superset of another,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248648,"byte_end":248703,"line_start":835,"line_end":835,"column_start":5,"column_end":60}},{"value":"/ i.e., `self` contains at least all the values in `other`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248708,"byte_end":248769,"line_start":836,"line_end":836,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248774,"byte_end":248777,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248782,"byte_end":248796,"line_start":838,"line_end":838,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248801,"byte_end":248804,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248809,"byte_end":248816,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248821,"byte_end":248848,"line_start":841,"line_end":841,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248853,"byte_end":248856,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ let sub: HashSet<_> = [1, 2].iter().cloned().collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248861,"byte_end":248920,"line_start":843,"line_end":843,"column_start":5,"column_end":64}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248925,"byte_end":248958,"line_start":844,"line_end":844,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248963,"byte_end":248966,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.is_superset(&sub), false);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248971,"byte_end":249016,"line_start":846,"line_end":846,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249021,"byte_end":249024,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ set.insert(0);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249029,"byte_end":249047,"line_start":848,"line_end":848,"column_start":5,"column_end":23}},{"value":"/ set.insert(1);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249052,"byte_end":249070,"line_start":849,"line_end":849,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_superset(&sub), false);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249075,"byte_end":249120,"line_start":850,"line_end":850,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249125,"byte_end":249128,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ set.insert(2);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249133,"byte_end":249151,"line_start":852,"line_end":852,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_superset(&sub), true);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249156,"byte_end":249200,"line_start":853,"line_end":853,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249205,"byte_end":249212,"line_start":854,"line_end":854,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249253,"byte_end":249259,"line_start":855,"line_end":855,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249865,"byte_end":249871,"line_start":878,"line_end":878,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashSet<T, S>>::insert","value":"pub fn insert(&mut Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set.","sig":null,"attributes":[{"value":"/ Adds a value to the set.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249357,"byte_end":249385,"line_start":860,"line_end":860,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249390,"byte_end":249393,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ If the set did not have this value present, `true` is returned.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249398,"byte_end":249465,"line_start":862,"line_end":862,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249470,"byte_end":249473,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ If the set did have this value present, `false` is returned.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249478,"byte_end":249542,"line_start":864,"line_end":864,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249547,"byte_end":249550,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249555,"byte_end":249569,"line_start":866,"line_end":866,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249574,"byte_end":249577,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249582,"byte_end":249589,"line_start":868,"line_end":868,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249594,"byte_end":249621,"line_start":869,"line_end":869,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249626,"byte_end":249629,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249634,"byte_end":249667,"line_start":871,"line_end":871,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249672,"byte_end":249675,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.insert(2), true);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249680,"byte_end":249716,"line_start":873,"line_end":873,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(set.insert(2), false);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249721,"byte_end":249758,"line_start":874,"line_end":874,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(set.len(), 1);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249763,"byte_end":249792,"line_start":875,"line_end":875,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249797,"byte_end":249804,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249845,"byte_end":249851,"line_start":877,"line_end":877,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":250506,"byte_end":250513,"line_start":898,"line_end":898,"column_start":12,"column_end":19},"name":"replace","qualname":"<HashSet<T, S>>::replace","value":"pub fn replace(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is equal to the given\n one. Returns the replaced value.","sig":null,"attributes":[{"value":"/ Adds a value to the set, replacing the existing value, if any, that is equal to the given","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":249959,"byte_end":250052,"line_start":882,"line_end":882,"column_start":5,"column_end":98}},{"value":"/ one. Returns the replaced value.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":250057,"byte_end":250093,"line_start":883,"line_end":883,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":250098,"byte_end":250101,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":250106,"byte_end":250120,"line_start":885,"line_end":885,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":250125,"byte_end":250128,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":250133,"byte_end":250140,"line_start":887,"line_end":887,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":250145,"byte_end":250172,"line_start":888,"line_end":888,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":250177,"byte_end":250180,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":250185,"byte_end":250218,"line_start":890,"line_end":890,"column_start":5,"column_end":38}},{"value":"/ set.insert(Vec::<i32>::new());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":250223,"byte_end":250257,"line_start":891,"line_end":891,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":250262,"byte_end":250265,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.get(&[][..]).unwrap().capacity(), 0);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":250270,"byte_end":250326,"line_start":893,"line_end":893,"column_start":5,"column_end":61}},{"value":"/ set.replace(Vec::with_capacity(10));","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":250331,"byte_end":250371,"line_start":894,"line_end":894,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(set.get(&[][..]).unwrap().capacity(), 10);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":250376,"byte_end":250433,"line_start":895,"line_end":895,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":250438,"byte_end":250445,"line_start":896,"line_end":896,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":250486,"byte_end":250492,"line_start":897,"line_end":897,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1393},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251521,"byte_end":251527,"line_start":930,"line_end":930,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashSet<T, S>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> bool where T: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Removes a value from the set. Returns whether the value was\n present in the set.","sig":null,"attributes":[{"value":"/ Removes a value from the set. Returns whether the value was","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":250799,"byte_end":250862,"line_start":908,"line_end":908,"column_start":5,"column_end":68}},{"value":"/ present in the set.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":250867,"byte_end":250890,"line_start":909,"line_end":909,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":250895,"byte_end":250898,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":250903,"byte_end":250970,"line_start":911,"line_end":911,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":250975,"byte_end":251042,"line_start":912,"line_end":912,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251047,"byte_end":251066,"line_start":913,"line_end":913,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251071,"byte_end":251074,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251079,"byte_end":251093,"line_start":915,"line_end":915,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251098,"byte_end":251101,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251106,"byte_end":251113,"line_start":917,"line_end":917,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251118,"byte_end":251145,"line_start":918,"line_end":918,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251150,"byte_end":251153,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251158,"byte_end":251191,"line_start":920,"line_end":920,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251196,"byte_end":251199,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ set.insert(2);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251204,"byte_end":251222,"line_start":922,"line_end":922,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.remove(&2), true);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251227,"byte_end":251264,"line_start":923,"line_end":923,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(set.remove(&2), false);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251269,"byte_end":251307,"line_start":924,"line_end":924,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251312,"byte_end":251319,"line_start":925,"line_end":925,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251324,"byte_end":251327,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251332,"byte_end":251391,"line_start":927,"line_end":927,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251396,"byte_end":251460,"line_start":928,"line_end":928,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251501,"byte_end":251507,"line_start":929,"line_end":929,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1395},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252397,"byte_end":252401,"line_start":957,"line_end":957,"column_start":12,"column_end":16},"name":"take","qualname":"<HashSet<T, S>>::take","value":"pub fn take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where T: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the given one.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251681,"byte_end":251766,"line_start":938,"line_end":938,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251771,"byte_end":251774,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251779,"byte_end":251846,"line_start":940,"line_end":940,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251851,"byte_end":251918,"line_start":941,"line_end":941,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251923,"byte_end":251942,"line_start":942,"line_end":942,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251947,"byte_end":251950,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251955,"byte_end":251969,"line_start":944,"line_end":944,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251974,"byte_end":251977,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251982,"byte_end":251989,"line_start":946,"line_end":946,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":251994,"byte_end":252021,"line_start":947,"line_end":947,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252026,"byte_end":252029,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252034,"byte_end":252100,"line_start":949,"line_end":949,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(set.take(&2), Some(2));","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252105,"byte_end":252143,"line_start":950,"line_end":950,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(set.take(&2), None);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252148,"byte_end":252183,"line_start":951,"line_end":951,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252188,"byte_end":252195,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252200,"byte_end":252203,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252208,"byte_end":252267,"line_start":954,"line_end":954,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252272,"byte_end":252336,"line_start":955,"line_end":955,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252377,"byte_end":252383,"line_start":956,"line_end":956,"column_start":41,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1450},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258519,"byte_end":258523,"line_start":1208,"line_end":1208,"column_start":12,"column_end":16},"name":"Iter","qualname":"::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1453}],"decl_id":null,"docs":" An iterator over the items of a `HashSet`.","sig":null,"attributes":[{"value":"/ An iterator over the items of a `HashSet`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258266,"byte_end":258312,"line_start":1201,"line_end":1201,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258313,"byte_end":258316,"line_start":1202,"line_end":1202,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`HashSet`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258317,"byte_end":258384,"line_start":1203,"line_end":1203,"column_start":1,"column_end":68}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258385,"byte_end":258420,"line_start":1204,"line_end":1204,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258421,"byte_end":258424,"line_start":1205,"line_end":1205,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258425,"byte_end":258461,"line_start":1206,"line_end":1206,"column_start":1,"column_end":37}},{"value":"/ [`iter`]: struct.HashSet.html#method.iter","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258462,"byte_end":258507,"line_start":1207,"line_end":1207,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1454},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258877,"byte_end":258885,"line_start":1219,"line_end":1219,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":1456}],"decl_id":null,"docs":" An owning iterator over the items of a `HashSet`.","sig":null,"attributes":[{"value":"/ An owning iterator over the items of a `HashSet`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258563,"byte_end":258616,"line_start":1212,"line_end":1212,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258617,"byte_end":258620,"line_start":1213,"line_end":1213,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`HashSet`]","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258621,"byte_end":258692,"line_start":1214,"line_end":1214,"column_start":1,"column_end":72}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258693,"byte_end":258768,"line_start":1215,"line_end":1215,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258769,"byte_end":258772,"line_start":1216,"line_end":1216,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258773,"byte_end":258809,"line_start":1217,"line_end":1217,"column_start":1,"column_end":37}},{"value":"/ [`into_iter`]: struct.HashSet.html#method.into_iter","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258810,"byte_end":258865,"line_start":1218,"line_end":1218,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1457},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259190,"byte_end":259195,"line_start":1230,"line_end":1230,"column_start":12,"column_end":17},"name":"Drain","qualname":"::set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":1460}],"decl_id":null,"docs":" A draining iterator over the items of a `HashSet`.","sig":null,"attributes":[{"value":"/ A draining iterator over the items of a `HashSet`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258926,"byte_end":258980,"line_start":1223,"line_end":1223,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258981,"byte_end":258984,"line_start":1224,"line_end":1224,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`HashSet`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258985,"byte_end":259053,"line_start":1225,"line_end":1225,"column_start":1,"column_end":69}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259054,"byte_end":259089,"line_start":1226,"line_end":1226,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259090,"byte_end":259093,"line_start":1227,"line_end":1227,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259094,"byte_end":259130,"line_start":1228,"line_end":1228,"column_start":1,"column_end":37}},{"value":"/ [`drain`]: struct.HashSet.html#method.drain","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259131,"byte_end":259178,"line_start":1229,"line_end":1229,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1461},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259562,"byte_end":259573,"line_start":1241,"line_end":1241,"column_start":12,"column_end":23},"name":"DrainFilter","qualname":"::set::DrainFilter","value":"DrainFilter {  }","parent":null,"children":[{"krate":0,"index":1465},{"krate":0,"index":1466}],"decl_id":null,"docs":" A draining iterator over entries of a `HashSet` which don't satisfy the predicate `f`.","sig":null,"attributes":[{"value":"/ A draining iterator over entries of a `HashSet` which don't satisfy the predicate `f`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259241,"byte_end":259331,"line_start":1234,"line_end":1234,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259332,"byte_end":259335,"line_start":1235,"line_end":1235,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain_filter`] method on [`HashSet`]. See its","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259336,"byte_end":259419,"line_start":1236,"line_end":1236,"column_start":1,"column_end":84}},{"value":"/ documentation for more.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259420,"byte_end":259447,"line_start":1237,"line_end":1237,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259448,"byte_end":259451,"line_start":1238,"line_end":1238,"column_start":1,"column_end":4}},{"value":"/ [`drain_filter`]: struct.HashSet.html#method.drain_filter","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259452,"byte_end":259513,"line_start":1239,"line_end":1239,"column_start":1,"column_end":62}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259514,"byte_end":259550,"line_start":1240,"line_end":1240,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1467},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259975,"byte_end":259987,"line_start":1256,"line_end":1256,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::set::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":1471},{"krate":0,"index":1472}],"decl_id":null,"docs":" A lazy iterator producing elements in the intersection of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the intersection of `HashSet`s.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259671,"byte_end":259744,"line_start":1249,"line_end":1249,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259745,"byte_end":259748,"line_start":1250,"line_end":1250,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`intersection`] method on [`HashSet`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259749,"byte_end":259824,"line_start":1251,"line_end":1251,"column_start":1,"column_end":76}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259825,"byte_end":259860,"line_start":1252,"line_end":1252,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259861,"byte_end":259864,"line_start":1253,"line_end":1253,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259865,"byte_end":259901,"line_start":1254,"line_end":1254,"column_start":1,"column_end":37}},{"value":"/ [`intersection`]: struct.HashSet.html#method.intersection","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259902,"byte_end":259963,"line_start":1255,"line_end":1255,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1473},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":260407,"byte_end":260417,"line_start":1270,"line_end":1270,"column_start":12,"column_end":22},"name":"Difference","qualname":"::set::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":1477},{"krate":0,"index":1478}],"decl_id":null,"docs":" A lazy iterator producing elements in the difference of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the difference of `HashSet`s.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":260111,"byte_end":260182,"line_start":1263,"line_end":1263,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":260183,"byte_end":260186,"line_start":1264,"line_end":1264,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`difference`] method on [`HashSet`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":260187,"byte_end":260260,"line_start":1265,"line_end":1265,"column_start":1,"column_end":74}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":260261,"byte_end":260296,"line_start":1266,"line_end":1266,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":260297,"byte_end":260300,"line_start":1267,"line_end":1267,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":260301,"byte_end":260337,"line_start":1268,"line_end":1268,"column_start":1,"column_end":37}},{"value":"/ [`difference`]: struct.HashSet.html#method.difference","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":260338,"byte_end":260395,"line_start":1269,"line_end":1269,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1479},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":260877,"byte_end":260896,"line_start":1284,"line_end":1284,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::set::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":1483}],"decl_id":null,"docs":" A lazy iterator producing elements in the symmetric difference of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the symmetric difference of `HashSet`s.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":260541,"byte_end":260622,"line_start":1277,"line_end":1277,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":260623,"byte_end":260626,"line_start":1278,"line_end":1278,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`symmetric_difference`] method on","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":260627,"byte_end":260697,"line_start":1279,"line_end":1279,"column_start":1,"column_end":71}},{"value":"/ [`HashSet`]. See its documentation for more.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":260698,"byte_end":260746,"line_start":1280,"line_end":1280,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":260747,"byte_end":260750,"line_start":1281,"line_end":1281,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":260751,"byte_end":260787,"line_start":1282,"line_end":1282,"column_start":1,"column_end":37}},{"value":"/ [`symmetric_difference`]: struct.HashSet.html#method.symmetric_difference","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":260788,"byte_end":260865,"line_start":1283,"line_end":1283,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1484},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":261249,"byte_end":261254,"line_start":1295,"line_end":1295,"column_start":12,"column_end":17},"name":"Union","qualname":"::set::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":1488}],"decl_id":null,"docs":" A lazy iterator producing elements in the union of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the union of `HashSet`s.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":260973,"byte_end":261039,"line_start":1288,"line_end":1288,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":261040,"byte_end":261043,"line_start":1289,"line_end":1289,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`union`] method on [`HashSet`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":261044,"byte_end":261112,"line_start":1290,"line_end":1290,"column_start":1,"column_end":69}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":261113,"byte_end":261148,"line_start":1291,"line_end":1291,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":261149,"byte_end":261152,"line_start":1292,"line_end":1292,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":261153,"byte_end":261189,"line_start":1293,"line_end":1293,"column_start":1,"column_end":37}},{"value":"/ [`union`]: struct.HashSet.html#method.union","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":261190,"byte_end":261237,"line_start":1294,"line_end":1294,"column_start":1,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":1657},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":1687,"byte_end":1695,"line_start":65,"line_end":65,"column_start":9,"column_end":17},"name":"hash_map","qualname":"::hash_map","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1658}],"decl_id":null,"docs":" A hash map implemented with quadratic probing and SIMD lookup.\n","sig":null,"attributes":[{"value":"/ A hash map implemented with quadratic probing and SIMD lookup.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":1702,"byte_end":1768,"line_start":66,"line_end":66,"column_start":5,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":1659},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":2242,"byte_end":2250,"line_start":82,"line_end":82,"column_start":9,"column_end":17},"name":"hash_set","qualname":"::hash_set","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1660}],"decl_id":null,"docs":" A hash set implemented as a `HashMap` where the value is `()`.\n","sig":null,"attributes":[{"value":"/ A hash set implemented as a `HashMap` where the value is `()`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":2257,"byte_end":2323,"line_start":83,"line_end":83,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1728},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":3002,"byte_end":3018,"line_start":105,"line_end":105,"column_start":5,"column_end":21},"name":"CapacityOverflow","qualname":"::TryReserveError::CapacityOverflow","value":"TryReserveError::CapacityOverflow","parent":{"krate":0,"index":1727},"children":[],"decl_id":null,"docs":" Error due to the computed capacity exceeding the collection's maximum\n (usually `isize::MAX` bytes).\n","sig":null,"attributes":[{"value":"/ Error due to the computed capacity exceeding the collection's maximum","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":2886,"byte_end":2959,"line_start":103,"line_end":103,"column_start":5,"column_end":78}},{"value":"/ (usually `isize::MAX` bytes).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":2964,"byte_end":2997,"line_start":104,"line_end":104,"column_start":5,"column_end":38}}]},{"kind":"StructVariant","id":{"krate":0,"index":1730},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":3072,"byte_end":3082,"line_start":108,"line_end":108,"column_start":5,"column_end":15},"name":"AllocError","qualname":"::TryReserveError::AllocError","value":"TryReserveError::AllocError { layout }","parent":{"krate":0,"index":1727},"children":[],"decl_id":null,"docs":" The memory allocator returned an error\n","sig":null,"attributes":[{"value":"/ The memory allocator returned an error","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":3025,"byte_end":3067,"line_start":107,"line_end":107,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":1727},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":2864,"byte_end":2879,"line_start":102,"line_end":102,"column_start":10,"column_end":25},"name":"TryReserveError","qualname":"::TryReserveError","value":"pub enum TryReserveError {\n    CapacityOverflow,\n    AllocError {\n        layout: alloc::alloc::Layout,\n    },\n}","parent":null,"children":[{"krate":0,"index":1728},{"krate":0,"index":1730}],"decl_id":null,"docs":" The error type for `try_reserve` methods.\n","sig":null,"attributes":[{"value":"/ The error type for `try_reserve` methods.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":2770,"byte_end":2815,"line_start":100,"line_end":100,"column_start":1,"column_end":46}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/sse2.rs","byte_start":12865366,"byte_end":12865371,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1684},{"krate":0,"index":1685},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/bitmask.rs","byte_start":78141,"byte_end":78148,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/bitmask.rs","byte_start":80762,"byte_end":80769,"line_start":99,"line_end":99,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/bitmask.rs","byte_start":81057,"byte_end":81068,"line_start":113,"line_end":113,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":7417,"byte_end":7428,"line_start":73,"line_end":73,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":10159,"byte_end":10167,"line_start":153,"line_end":153,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":15090,"byte_end":15096,"line_start":282,"line_end":282,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":15122,"byte_end":15128,"line_start":284,"line_end":284,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":15261,"byte_end":15267,"line_start":291,"line_end":291,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":18089,"byte_end":18097,"line_start":378,"line_end":378,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":50403,"byte_end":50411,"line_start":1182,"line_end":1182,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":50456,"byte_end":50464,"line_start":1183,"line_end":1183,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":50511,"byte_end":50519,"line_start":1185,"line_end":1185,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":52943,"byte_end":52951,"line_start":1250,"line_end":1250,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":53734,"byte_end":53742,"line_start":1274,"line_end":1274,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":57695,"byte_end":57703,"line_start":1380,"line_end":1380,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":58125,"byte_end":58133,"line_start":1396,"line_end":1396,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":58975,"byte_end":58987,"line_start":1427,"line_end":1427,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":61810,"byte_end":61822,"line_start":1496,"line_end":1496,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":61853,"byte_end":61865,"line_start":1497,"line_end":1497,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":61891,"byte_end":61903,"line_start":1499,"line_end":1499,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":62193,"byte_end":62205,"line_start":1511,"line_end":1511,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":63672,"byte_end":63684,"line_start":1549,"line_end":1549,"column_start":27,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64579,"byte_end":64586,"line_start":1568,"line_end":1568,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":70525,"byte_end":70532,"line_start":1686,"line_end":1686,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":70740,"byte_end":70747,"line_start":1696,"line_end":1696,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71432,"byte_end":71439,"line_start":1719,"line_end":1719,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71472,"byte_end":71479,"line_start":1720,"line_end":1720,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71676,"byte_end":71687,"line_start":1729,"line_end":1729,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71840,"byte_end":71851,"line_start":1736,"line_end":1736,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71896,"byte_end":71907,"line_start":1737,"line_end":1737,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":72547,"byte_end":72558,"line_start":1759,"line_end":1759,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":73071,"byte_end":73082,"line_start":1778,"line_end":1778,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":73422,"byte_end":73433,"line_start":1792,"line_end":1792,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":73466,"byte_end":73477,"line_start":1793,"line_end":1793,"column_start":27,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":74017,"byte_end":74025,"line_start":1810,"line_end":1810,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":74182,"byte_end":74190,"line_start":1817,"line_end":1817,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":74239,"byte_end":74247,"line_start":1818,"line_end":1818,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":74290,"byte_end":74298,"line_start":1820,"line_end":1820,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":75026,"byte_end":75034,"line_start":1843,"line_end":1843,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":75427,"byte_end":75435,"line_start":1860,"line_end":1860,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":75472,"byte_end":75480,"line_start":1861,"line_end":1861,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":76012,"byte_end":76023,"line_start":1883,"line_end":1883,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":76594,"byte_end":76605,"line_start":1904,"line_end":1904,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","byte_start":82014,"byte_end":82021,"line_start":24,"line_end":24,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","byte_start":82406,"byte_end":82413,"line_start":39,"line_end":39,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","byte_start":82829,"byte_end":82839,"line_start":53,"line_end":53,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","byte_start":84312,"byte_end":84319,"line_start":102,"line_end":102,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","byte_start":84676,"byte_end":84683,"line_start":116,"line_end":116,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","byte_start":85058,"byte_end":85068,"line_start":129,"line_end":129,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","byte_start":86448,"byte_end":86465,"line_start":170,"line_end":170,"column_start":50,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94363,"byte_end":94370,"line_start":193,"line_end":193,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95049,"byte_end":95056,"line_start":217,"line_end":217,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96104,"byte_end":96111,"line_start":251,"line_end":251,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107372,"byte_end":107379,"line_start":642,"line_end":642,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":607},{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":617},{"krate":0,"index":619},{"krate":0,"index":622},{"krate":0,"index":624},{"krate":0,"index":626},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120975,"byte_end":120982,"line_start":1068,"line_end":1068,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123915,"byte_end":123922,"line_start":1126,"line_end":1126,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":124243,"byte_end":124250,"line_start":1142,"line_end":1142,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":124344,"byte_end":124351,"line_start":1150,"line_end":1150,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":124547,"byte_end":124554,"line_start":1160,"line_end":1160,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":124844,"byte_end":124851,"line_start":1171,"line_end":1171,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":671},{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":125697,"byte_end":125701,"line_start":1203,"line_end":1203,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":125939,"byte_end":125943,"line_start":1213,"line_end":1213,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126721,"byte_end":126728,"line_start":1235,"line_end":1235,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126754,"byte_end":126761,"line_start":1237,"line_end":1237,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127425,"byte_end":127433,"line_start":1259,"line_end":1259,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128088,"byte_end":128092,"line_start":1282,"line_end":1282,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128290,"byte_end":128294,"line_start":1291,"line_end":1291,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128818,"byte_end":128824,"line_start":1309,"line_end":1309,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":129024,"byte_end":129030,"line_start":1318,"line_end":1318,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":129500,"byte_end":129505,"line_start":1335,"line_end":1335,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":130256,"byte_end":130267,"line_start":1361,"line_end":1361,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":130661,"byte_end":130677,"line_start":1377,"line_end":1377,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":130827,"byte_end":130838,"line_start":1384,"line_end":1384,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":131209,"byte_end":131220,"line_start":1401,"line_end":1401,"column_start":33,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":131467,"byte_end":131483,"line_start":1409,"line_end":1409,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133581,"byte_end":133600,"line_start":1475,"line_end":1475,"column_start":31,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133693,"byte_end":133712,"line_start":1482,"line_end":1482,"column_start":31,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134335,"byte_end":134353,"line_start":1508,"line_end":1508,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":135178,"byte_end":135196,"line_start":1535,"line_end":1535,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136206,"byte_end":136221,"line_start":1565,"line_end":1565,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":869},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137675,"byte_end":137686,"line_start":1613,"line_end":1613,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":883},{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":143531,"byte_end":143550,"line_start":1807,"line_end":1807,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":147572,"byte_end":147589,"line_start":1925,"line_end":1925,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":917},{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":149615,"byte_end":149633,"line_start":1991,"line_end":1991,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":149810,"byte_end":149821,"line_start":1997,"line_end":1997,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":150155,"byte_end":150174,"line_start":2006,"line_end":2006,"column_start":39,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":936}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":150432,"byte_end":150449,"line_start":2015,"line_end":2015,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":150614,"byte_end":150629,"line_start":2021,"line_end":2021,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151218,"byte_end":151223,"line_start":2041,"line_end":2041,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151795,"byte_end":151808,"line_start":2061,"line_end":2061,"column_start":31,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151901,"byte_end":151914,"line_start":2068,"line_end":2068,"column_start":31,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":152016,"byte_end":152029,"line_start":2076,"line_end":2076,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":152513,"byte_end":152524,"line_start":2095,"line_end":2095,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":153221,"byte_end":153228,"line_start":2121,"line_end":2121,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154007,"byte_end":154011,"line_start":2150,"line_end":2150,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154582,"byte_end":154586,"line_start":2169,"line_end":2169,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154740,"byte_end":154744,"line_start":2176,"line_end":2176,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154787,"byte_end":154794,"line_start":2178,"line_end":2178,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155377,"byte_end":155384,"line_start":2197,"line_end":2197,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155537,"byte_end":155544,"line_start":2203,"line_end":2203,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155585,"byte_end":155592,"line_start":2205,"line_end":2205,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155798,"byte_end":155806,"line_start":2215,"line_end":2215,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156137,"byte_end":156145,"line_start":2227,"line_end":2227,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156294,"byte_end":156302,"line_start":2233,"line_end":2233,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156353,"byte_end":156361,"line_start":2235,"line_end":2235,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156523,"byte_end":156527,"line_start":2241,"line_end":2241,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156999,"byte_end":157003,"line_start":2257,"line_end":2257,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157156,"byte_end":157160,"line_start":2263,"line_end":2263,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157203,"byte_end":157209,"line_start":2265,"line_end":2265,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157681,"byte_end":157687,"line_start":2281,"line_end":2281,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157840,"byte_end":157846,"line_start":2287,"line_end":2287,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157889,"byte_end":157898,"line_start":2289,"line_end":2289,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158378,"byte_end":158387,"line_start":2305,"line_end":2305,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158540,"byte_end":158549,"line_start":2311,"line_end":2311,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158590,"byte_end":158599,"line_start":2313,"line_end":2313,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158815,"byte_end":158820,"line_start":2323,"line_end":2323,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159155,"byte_end":159160,"line_start":2335,"line_end":2335,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159313,"byte_end":159318,"line_start":2341,"line_end":2341,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159359,"byte_end":159364,"line_start":2343,"line_end":2343,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159564,"byte_end":159569,"line_start":2353,"line_end":2353,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1143},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166188,"byte_end":166193,"line_start":2584,"line_end":2584,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166950,"byte_end":166963,"line_start":2611,"line_end":2611,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176233,"byte_end":176244,"line_start":2917,"line_end":2917,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":178539,"byte_end":178546,"line_start":3002,"line_end":3002,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":179119,"byte_end":179126,"line_start":3020,"line_end":3020,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":180573,"byte_end":180580,"line_start":3065,"line_end":3065,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/scopeguard.rs","byte_start":221865,"byte_end":221875,"line_start":20,"line_end":20,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1254},{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/scopeguard.rs","byte_start":222063,"byte_end":222073,"line_start":31,"line_end":31,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/scopeguard.rs","byte_start":222252,"byte_end":222262,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1263}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226487,"byte_end":226494,"line_start":118,"line_end":118,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1336},{"krate":0,"index":1337}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226734,"byte_end":226741,"line_start":131,"line_end":131,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1340},{"krate":0,"index":1341}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227832,"byte_end":227839,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1355},{"krate":0,"index":1357},{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235384,"byte_end":235391,"line_start":429,"line_end":429,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1368},{"krate":0,"index":1370},{"krate":0,"index":1372},{"krate":0,"index":1374},{"krate":0,"index":1376},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1382},{"krate":0,"index":1386},{"krate":0,"index":1388},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1395}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252718,"byte_end":252725,"line_start":970,"line_end":970,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1400}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252973,"byte_end":252980,"line_start":984,"line_end":984,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253062,"byte_end":253069,"line_start":991,"line_end":991,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1408}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253290,"byte_end":253297,"line_start":1001,"line_end":1001,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1412}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253605,"byte_end":253612,"line_start":1014,"line_end":1014,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":254178,"byte_end":254185,"line_start":1037,"line_end":1037,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":254750,"byte_end":254757,"line_start":1060,"line_end":1060,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1429}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":261577,"byte_end":261584,"line_start":1309,"line_end":1309,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1501}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":262459,"byte_end":262463,"line_start":1341,"line_end":1341,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":262647,"byte_end":262651,"line_start":1349,"line_end":1349,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":262980,"byte_end":262984,"line_start":1361,"line_end":1361,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1514}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":263130,"byte_end":263134,"line_start":1367,"line_end":1367,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":263181,"byte_end":263185,"line_start":1369,"line_end":1369,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1519}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":263342,"byte_end":263350,"line_start":1375,"line_end":1375,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1524}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":263802,"byte_end":263810,"line_start":1391,"line_end":1391,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1527}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":263952,"byte_end":263960,"line_start":1397,"line_end":1397,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":264003,"byte_end":264011,"line_start":1399,"line_end":1399,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1532}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":264225,"byte_end":264230,"line_start":1406,"line_end":1406,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":264686,"byte_end":264691,"line_start":1422,"line_end":1422,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":264837,"byte_end":264842,"line_start":1428,"line_end":1428,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":264889,"byte_end":264894,"line_start":1430,"line_end":1430,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1546}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":265115,"byte_end":265126,"line_start":1437,"line_end":1437,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":265437,"byte_end":265448,"line_start":1451,"line_end":1451,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1559}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":265865,"byte_end":265876,"line_start":1470,"line_end":1470,"column_start":30,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":265939,"byte_end":265951,"line_start":1472,"line_end":1472,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1566}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":266170,"byte_end":266182,"line_start":1482,"line_end":1482,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1573}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":266720,"byte_end":266732,"line_start":1506,"line_end":1506,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1577}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":266957,"byte_end":266969,"line_start":1516,"line_end":1516,"column_start":30,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":267050,"byte_end":267060,"line_start":1523,"line_end":1523,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1584}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":267277,"byte_end":267287,"line_start":1533,"line_end":1533,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1589},{"krate":0,"index":1590},{"krate":0,"index":1591}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":267829,"byte_end":267839,"line_start":1557,"line_end":1557,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":267925,"byte_end":267935,"line_start":1564,"line_end":1564,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1598}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":268152,"byte_end":268171,"line_start":1574,"line_end":1574,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1602}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":268377,"byte_end":268396,"line_start":1583,"line_end":1583,"column_start":29,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1609}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":268768,"byte_end":268787,"line_start":1600,"line_end":1600,"column_start":30,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":268873,"byte_end":268892,"line_start":1607,"line_end":1607,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1616}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":269109,"byte_end":269114,"line_start":1617,"line_end":1617,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1620}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":269307,"byte_end":269312,"line_start":1626,"line_end":1626,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":269398,"byte_end":269403,"line_start":1633,"line_end":1633,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1627}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":269627,"byte_end":269632,"line_start":1643,"line_end":1643,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/sse2.rs","byte_start":12865366,"byte_end":12865371,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/bitmask.rs","byte_start":78141,"byte_end":78148,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/bitmask.rs","byte_start":80762,"byte_end":80769,"line_start":99,"line_end":99,"column_start":23,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1711},"to":{"krate":1,"index":7070}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/bitmask.rs","byte_start":81057,"byte_end":81068,"line_start":113,"line_end":113,"column_start":19,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":71},"to":{"krate":1,"index":7233}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":7417,"byte_end":7428,"line_start":73,"line_end":73,"column_start":6,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":10159,"byte_end":10167,"line_start":153,"line_end":153,"column_start":19,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":101},"to":{"krate":1,"index":7233}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":15090,"byte_end":15096,"line_start":282,"line_end":282,"column_start":25,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":112},"to":{"krate":1,"index":2832}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":15122,"byte_end":15128,"line_start":284,"line_end":284,"column_start":19,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":112},"to":{"krate":1,"index":2457}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":15261,"byte_end":15267,"line_start":291,"line_end":291,"column_start":9,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":18089,"byte_end":18097,"line_start":378,"line_end":378,"column_start":9,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":50403,"byte_end":50411,"line_start":1182,"line_end":1182,"column_start":25,"column_end":33},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":134},"to":{"krate":1,"index":2832}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":50456,"byte_end":50464,"line_start":1183,"line_end":1183,"column_start":25,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":134},"to":{"krate":1,"index":2844}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":50511,"byte_end":50519,"line_start":1185,"line_end":1185,"column_start":26,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":134},"to":{"krate":1,"index":2457}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":52943,"byte_end":52951,"line_start":1250,"line_end":1250,"column_start":34,"column_end":42},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":134},"to":{"krate":0,"index":215}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":53734,"byte_end":53742,"line_start":1274,"line_end":1274,"column_start":16,"column_end":24},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":57695,"byte_end":57703,"line_start":1380,"line_end":1380,"column_start":18,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":134},"to":{"krate":1,"index":3078}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":58125,"byte_end":58133,"line_start":1396,"line_end":1396,"column_start":26,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":134},"to":{"krate":1,"index":7070}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":58975,"byte_end":58987,"line_start":1427,"line_end":1427,"column_start":9,"column_end":21},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":61810,"byte_end":61822,"line_start":1496,"line_end":1496,"column_start":25,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":236},"to":{"krate":1,"index":2832}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":61853,"byte_end":61865,"line_start":1497,"line_end":1497,"column_start":25,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":236},"to":{"krate":1,"index":2844}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":61891,"byte_end":61903,"line_start":1499,"line_end":1499,"column_start":19,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":236},"to":{"krate":1,"index":2457}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":62193,"byte_end":62205,"line_start":1511,"line_end":1511,"column_start":22,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":236},"to":{"krate":1,"index":7233}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":63672,"byte_end":63684,"line_start":1549,"line_end":1549,"column_start":27,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":236},"to":{"krate":1,"index":7504}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64579,"byte_end":64586,"line_start":1568,"line_end":1568,"column_start":9,"column_end":16},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":70525,"byte_end":70532,"line_start":1686,"line_end":1686,"column_start":19,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":259},"to":{"krate":1,"index":2457}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":70740,"byte_end":70747,"line_start":1696,"line_end":1696,"column_start":22,"column_end":29},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":259},"to":{"krate":1,"index":7233}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71432,"byte_end":71439,"line_start":1719,"line_end":1719,"column_start":31,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":259},"to":{"krate":1,"index":7122}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71472,"byte_end":71479,"line_start":1720,"line_end":1720,"column_start":27,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":259},"to":{"krate":1,"index":7504}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71676,"byte_end":71687,"line_start":1729,"line_end":1729,"column_start":9,"column_end":20},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71840,"byte_end":71851,"line_start":1736,"line_end":1736,"column_start":25,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":280},"to":{"krate":1,"index":2832}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71896,"byte_end":71907,"line_start":1737,"line_end":1737,"column_start":25,"column_end":36},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":280},"to":{"krate":1,"index":2844}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":72547,"byte_end":72558,"line_start":1759,"line_end":1759,"column_start":18,"column_end":29},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":280},"to":{"krate":1,"index":3078}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":73071,"byte_end":73082,"line_start":1778,"line_end":1778,"column_start":22,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":280},"to":{"krate":1,"index":7233}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":73422,"byte_end":73433,"line_start":1792,"line_end":1792,"column_start":31,"column_end":42},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":280},"to":{"krate":1,"index":7122}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":73466,"byte_end":73477,"line_start":1793,"line_end":1793,"column_start":27,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":280},"to":{"krate":1,"index":7504}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":74017,"byte_end":74025,"line_start":1810,"line_end":1810,"column_start":9,"column_end":17},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":74182,"byte_end":74190,"line_start":1817,"line_end":1817,"column_start":25,"column_end":33},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":304},"to":{"krate":1,"index":2832}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":74239,"byte_end":74247,"line_start":1818,"line_end":1818,"column_start":25,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":304},"to":{"krate":1,"index":2844}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":74290,"byte_end":74298,"line_start":1820,"line_end":1820,"column_start":18,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":304},"to":{"krate":1,"index":3078}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":75026,"byte_end":75034,"line_start":1843,"line_end":1843,"column_start":22,"column_end":30},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":304},"to":{"krate":1,"index":7233}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":75427,"byte_end":75435,"line_start":1860,"line_end":1860,"column_start":31,"column_end":39},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":304},"to":{"krate":1,"index":7122}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":75472,"byte_end":75480,"line_start":1861,"line_end":1861,"column_start":27,"column_end":35},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":304},"to":{"krate":1,"index":7504}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":76012,"byte_end":76023,"line_start":1883,"line_end":1883,"column_start":13,"column_end":24},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":76594,"byte_end":76605,"line_start":1904,"line_end":1904,"column_start":26,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":330},"to":{"krate":1,"index":7233}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","byte_start":82014,"byte_end":82021,"line_start":24,"line_end":24,"column_start":33,"column_end":40},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":560},"to":{"krate":5,"index":2075}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","byte_start":82406,"byte_end":82413,"line_start":39,"line_end":39,"column_start":45,"column_end":52},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":560},"to":{"krate":5,"index":1536}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","byte_start":82829,"byte_end":82839,"line_start":53,"line_end":53,"column_start":49,"column_end":59},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":409},"to":{"krate":5,"index":1620}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","byte_start":84312,"byte_end":84319,"line_start":102,"line_end":102,"column_start":30,"column_end":37},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1329},"to":{"krate":5,"index":2075}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","byte_start":84676,"byte_end":84683,"line_start":116,"line_end":116,"column_start":42,"column_end":49},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1329},"to":{"krate":5,"index":1536}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","byte_start":85058,"byte_end":85068,"line_start":129,"line_end":129,"column_start":46,"column_end":56},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":474},"to":{"krate":5,"index":1620}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/external_trait_impls/serde.rs","byte_start":86448,"byte_end":86465,"line_start":170,"line_end":170,"column_start":50,"column_end":67},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":488},"to":{"krate":5,"index":1620}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94363,"byte_end":94370,"line_start":193,"line_end":193,"column_start":46,"column_end":53},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":2457}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95049,"byte_end":95056,"line_start":217,"line_end":217,"column_start":12,"column_end":19},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96104,"byte_end":96111,"line_start":251,"line_end":251,"column_start":15,"column_end":22},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107372,"byte_end":107379,"line_start":642,"line_end":642,"column_start":15,"column_end":22},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120975,"byte_end":120982,"line_start":1068,"line_end":1068,"column_start":15,"column_end":22},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123915,"byte_end":123922,"line_start":1126,"line_end":1126,"column_start":29,"column_end":36},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":2487}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":124243,"byte_end":124250,"line_start":1142,"line_end":1142,"column_start":22,"column_end":29},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":2492}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":124344,"byte_end":124351,"line_start":1150,"line_end":1150,"column_start":25,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":124547,"byte_end":124554,"line_start":1160,"line_end":1160,"column_start":27,"column_end":34},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":2810}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":124844,"byte_end":124851,"line_start":1171,"line_end":1171,"column_start":40,"column_end":47},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":3139}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":125697,"byte_end":125701,"line_start":1203,"line_end":1203,"column_start":22,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":673},"to":{"krate":1,"index":2457}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":125939,"byte_end":125943,"line_start":1213,"line_end":1213,"column_start":41,"column_end":45},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":673},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126721,"byte_end":126728,"line_start":1235,"line_end":1235,"column_start":40,"column_end":47},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":687},"to":{"krate":1,"index":2832}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126754,"byte_end":126761,"line_start":1237,"line_end":1237,"column_start":12,"column_end":19},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127425,"byte_end":127433,"line_start":1259,"line_end":1259,"column_start":12,"column_end":20},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128088,"byte_end":128092,"line_start":1282,"line_end":1282,"column_start":22,"column_end":26},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":708},"to":{"krate":1,"index":2457}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128290,"byte_end":128294,"line_start":1291,"line_end":1291,"column_start":34,"column_end":38},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":708},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128818,"byte_end":128824,"line_start":1309,"line_end":1309,"column_start":22,"column_end":28},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":721},"to":{"krate":1,"index":2457}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":129024,"byte_end":129030,"line_start":1318,"line_end":1318,"column_start":34,"column_end":40},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":721},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":129500,"byte_end":129505,"line_start":1335,"line_end":1335,"column_start":12,"column_end":17},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":130256,"byte_end":130267,"line_start":1361,"line_end":1361,"column_start":28,"column_end":39},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":743},"to":{"krate":1,"index":3078}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":130661,"byte_end":130677,"line_start":1377,"line_end":1377,"column_start":28,"column_end":44},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":756},"to":{"krate":1,"index":3078}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":130827,"byte_end":130838,"line_start":1384,"line_end":1384,"column_start":28,"column_end":39},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":743},"to":{"krate":1,"index":7233}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":131209,"byte_end":131220,"line_start":1401,"line_end":1401,"column_start":33,"column_end":44},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":743},"to":{"krate":1,"index":7504}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":131467,"byte_end":131483,"line_start":1409,"line_end":1409,"column_start":12,"column_end":28},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133581,"byte_end":133600,"line_start":1475,"line_end":1475,"column_start":31,"column_end":50},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":808},"to":{"krate":1,"index":2832}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133693,"byte_end":133712,"line_start":1482,"line_end":1482,"column_start":31,"column_end":50},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":808},"to":{"krate":1,"index":2844}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134335,"byte_end":134353,"line_start":1508,"line_end":1508,"column_start":19,"column_end":37},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":791},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":135178,"byte_end":135196,"line_start":1535,"line_end":1535,"column_start":19,"column_end":37},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":791},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136206,"byte_end":136221,"line_start":1565,"line_end":1565,"column_start":19,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":831},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137675,"byte_end":137686,"line_start":1613,"line_end":1613,"column_start":19,"column_end":30},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":797},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":143531,"byte_end":143550,"line_start":1807,"line_end":1807,"column_start":19,"column_end":38},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":808},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":147572,"byte_end":147589,"line_start":1925,"line_end":1925,"column_start":19,"column_end":36},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":149615,"byte_end":149633,"line_start":1991,"line_end":1991,"column_start":25,"column_end":43},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":791},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":149810,"byte_end":149821,"line_start":1997,"line_end":1997,"column_start":39,"column_end":50},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":797},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":150155,"byte_end":150174,"line_start":2006,"line_end":2006,"column_start":39,"column_end":58},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":808},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":150432,"byte_end":150449,"line_start":2015,"line_end":2015,"column_start":25,"column_end":42},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":824},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":150614,"byte_end":150629,"line_start":2021,"line_end":2021,"column_start":25,"column_end":40},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":831},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151218,"byte_end":151223,"line_start":2041,"line_end":2041,"column_start":39,"column_end":44},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":947},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151795,"byte_end":151808,"line_start":2061,"line_end":2061,"column_start":31,"column_end":44},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":963},"to":{"krate":1,"index":2832}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151901,"byte_end":151914,"line_start":2068,"line_end":2068,"column_start":31,"column_end":44},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":963},"to":{"krate":1,"index":2844}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":152016,"byte_end":152029,"line_start":2076,"line_end":2076,"column_start":39,"column_end":52},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":963},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":152513,"byte_end":152524,"line_start":2095,"line_end":2095,"column_start":32,"column_end":43},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":985},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":153221,"byte_end":153228,"line_start":2121,"line_end":2121,"column_start":32,"column_end":39},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":7070}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154007,"byte_end":154011,"line_start":2150,"line_end":2150,"column_start":29,"column_end":33},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":673},"to":{"krate":1,"index":7233}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154582,"byte_end":154586,"line_start":2169,"line_end":2169,"column_start":34,"column_end":38},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":673},"to":{"krate":1,"index":7122}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154740,"byte_end":154744,"line_start":2176,"line_end":2176,"column_start":30,"column_end":34},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":673},"to":{"krate":1,"index":7504}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154787,"byte_end":154794,"line_start":2178,"line_end":2178,"column_start":29,"column_end":36},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":687},"to":{"krate":1,"index":7233}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155377,"byte_end":155384,"line_start":2197,"line_end":2197,"column_start":34,"column_end":41},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":687},"to":{"krate":1,"index":7122}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155537,"byte_end":155544,"line_start":2203,"line_end":2203,"column_start":30,"column_end":37},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":687},"to":{"krate":1,"index":7504}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155585,"byte_end":155592,"line_start":2205,"line_end":2205,"column_start":27,"column_end":34},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":687},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155798,"byte_end":155806,"line_start":2215,"line_end":2215,"column_start":25,"column_end":33},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":700},"to":{"krate":1,"index":7233}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156137,"byte_end":156145,"line_start":2227,"line_end":2227,"column_start":34,"column_end":42},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":700},"to":{"krate":1,"index":7122}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156294,"byte_end":156302,"line_start":2233,"line_end":2233,"column_start":30,"column_end":38},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":700},"to":{"krate":1,"index":7504}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156353,"byte_end":156361,"line_start":2235,"line_end":2235,"column_start":41,"column_end":49},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":700},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156523,"byte_end":156527,"line_start":2241,"line_end":2241,"column_start":29,"column_end":33},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":708},"to":{"krate":1,"index":7233}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156999,"byte_end":157003,"line_start":2257,"line_end":2257,"column_start":34,"column_end":38},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":708},"to":{"krate":1,"index":7122}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157156,"byte_end":157160,"line_start":2263,"line_end":2263,"column_start":30,"column_end":34},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":708},"to":{"krate":1,"index":7504}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157203,"byte_end":157209,"line_start":2265,"line_end":2265,"column_start":29,"column_end":35},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":721},"to":{"krate":1,"index":7233}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157681,"byte_end":157687,"line_start":2281,"line_end":2281,"column_start":34,"column_end":40},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":721},"to":{"krate":1,"index":7122}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157840,"byte_end":157846,"line_start":2287,"line_end":2287,"column_start":30,"column_end":36},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":721},"to":{"krate":1,"index":7504}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157889,"byte_end":157898,"line_start":2289,"line_end":2289,"column_start":29,"column_end":38},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":786},"to":{"krate":1,"index":7233}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158378,"byte_end":158387,"line_start":2305,"line_end":2305,"column_start":34,"column_end":43},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":786},"to":{"krate":1,"index":7122}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158540,"byte_end":158549,"line_start":2311,"line_end":2311,"column_start":30,"column_end":39},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":786},"to":{"krate":1,"index":7504}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158590,"byte_end":158599,"line_start":2313,"line_end":2313,"column_start":27,"column_end":36},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":786},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158815,"byte_end":158820,"line_start":2323,"line_end":2323,"column_start":29,"column_end":34},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":734},"to":{"krate":1,"index":7233}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159155,"byte_end":159160,"line_start":2335,"line_end":2335,"column_start":34,"column_end":39},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":734},"to":{"krate":1,"index":7122}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159313,"byte_end":159318,"line_start":2341,"line_end":2341,"column_start":30,"column_end":35},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":734},"to":{"krate":1,"index":7504}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159359,"byte_end":159364,"line_start":2343,"line_end":2343,"column_start":27,"column_end":32},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":734},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159564,"byte_end":159569,"line_start":2353,"line_end":2353,"column_start":19,"column_end":24},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166188,"byte_end":166193,"line_start":2584,"line_end":2584,"column_start":28,"column_end":33},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166950,"byte_end":166963,"line_start":2611,"line_end":2611,"column_start":19,"column_end":32},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":963},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":176233,"byte_end":176244,"line_start":2917,"line_end":2917,"column_start":19,"column_end":30},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":178539,"byte_end":178546,"line_start":3002,"line_end":3002,"column_start":40,"column_end":47},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":7066}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":179119,"byte_end":179126,"line_start":3020,"line_end":3020,"column_start":34,"column_end":41},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":7079}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":180573,"byte_end":180580,"line_start":3065,"line_end":3065,"column_start":46,"column_end":53},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":7079}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/scopeguard.rs","byte_start":221865,"byte_end":221875,"line_start":20,"line_end":20,"column_start":22,"column_end":32},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1243},"to":{"krate":1,"index":3054}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/scopeguard.rs","byte_start":222063,"byte_end":222073,"line_start":31,"line_end":31,"column_start":25,"column_end":35},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1243},"to":{"krate":1,"index":3067}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/scopeguard.rs","byte_start":222252,"byte_end":222262,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1243},"to":{"krate":1,"index":3078}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226487,"byte_end":226494,"line_start":118,"line_end":118,"column_start":36,"column_end":43},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1329},"to":{"krate":1,"index":2457}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226734,"byte_end":226741,"line_start":131,"line_end":131,"column_start":9,"column_end":16},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227832,"byte_end":227839,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235384,"byte_end":235391,"line_start":429,"line_end":429,"column_start":12,"column_end":19},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252718,"byte_end":252725,"line_start":970,"line_end":970,"column_start":26,"column_end":33},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1329},"to":{"krate":1,"index":2487}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252973,"byte_end":252980,"line_start":984,"line_end":984,"column_start":19,"column_end":26},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1329},"to":{"krate":1,"index":2492}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253062,"byte_end":253069,"line_start":991,"line_end":991,"column_start":27,"column_end":34},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1329},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253290,"byte_end":253297,"line_start":1001,"line_end":1001,"column_start":32,"column_end":39},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1329},"to":{"krate":1,"index":7066}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253605,"byte_end":253612,"line_start":1014,"line_end":1014,"column_start":26,"column_end":33},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1329},"to":{"krate":1,"index":7079}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":254178,"byte_end":254185,"line_start":1037,"line_end":1037,"column_start":34,"column_end":41},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1329},"to":{"krate":1,"index":7079}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":254750,"byte_end":254757,"line_start":1060,"line_end":1060,"column_start":24,"column_end":31},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1329},"to":{"krate":1,"index":2810}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":261577,"byte_end":261584,"line_start":1309,"line_end":1309,"column_start":29,"column_end":36},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1329},"to":{"krate":1,"index":7070}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":262459,"byte_end":262463,"line_start":1341,"line_end":1341,"column_start":19,"column_end":23},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1450},"to":{"krate":1,"index":2457}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":262647,"byte_end":262651,"line_start":1349,"line_end":1349,"column_start":26,"column_end":30},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1450},"to":{"krate":1,"index":7233}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":262980,"byte_end":262984,"line_start":1361,"line_end":1361,"column_start":35,"column_end":39},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1450},"to":{"krate":1,"index":7122}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":263130,"byte_end":263134,"line_start":1367,"line_end":1367,"column_start":27,"column_end":31},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1450},"to":{"krate":1,"index":7504}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":263181,"byte_end":263185,"line_start":1369,"line_end":1369,"column_start":36,"column_end":40},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1450},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":263342,"byte_end":263350,"line_start":1375,"line_end":1375,"column_start":22,"column_end":30},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1454},"to":{"krate":1,"index":7233}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":263802,"byte_end":263810,"line_start":1391,"line_end":1391,"column_start":31,"column_end":39},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1454},"to":{"krate":1,"index":7122}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":263952,"byte_end":263960,"line_start":1397,"line_end":1397,"column_start":27,"column_end":35},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1454},"to":{"krate":1,"index":7504}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":264003,"byte_end":264011,"line_start":1399,"line_end":1399,"column_start":36,"column_end":44},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1454},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":264225,"byte_end":264230,"line_start":1406,"line_end":1406,"column_start":22,"column_end":27},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1457},"to":{"krate":1,"index":7233}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":264686,"byte_end":264691,"line_start":1422,"line_end":1422,"column_start":31,"column_end":36},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1457},"to":{"krate":1,"index":7122}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":264837,"byte_end":264842,"line_start":1428,"line_end":1428,"column_start":27,"column_end":32},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1457},"to":{"krate":1,"index":7504}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":264889,"byte_end":264894,"line_start":1430,"line_end":1430,"column_start":36,"column_end":41},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1457},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":265115,"byte_end":265126,"line_start":1437,"line_end":1437,"column_start":25,"column_end":36},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1461},"to":{"krate":1,"index":3078}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":265437,"byte_end":265448,"line_start":1451,"line_end":1451,"column_start":25,"column_end":36},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1461},"to":{"krate":1,"index":7233}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":265865,"byte_end":265876,"line_start":1470,"line_end":1470,"column_start":30,"column_end":41},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1461},"to":{"krate":1,"index":7504}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":265939,"byte_end":265951,"line_start":1472,"line_end":1472,"column_start":22,"column_end":34},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1467},"to":{"krate":1,"index":2457}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":266170,"byte_end":266182,"line_start":1482,"line_end":1482,"column_start":29,"column_end":41},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1467},"to":{"krate":1,"index":7233}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":266720,"byte_end":266732,"line_start":1506,"line_end":1506,"column_start":27,"column_end":39},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1467},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":266957,"byte_end":266969,"line_start":1516,"line_end":1516,"column_start":30,"column_end":42},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1467},"to":{"krate":1,"index":7504}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":267050,"byte_end":267060,"line_start":1523,"line_end":1523,"column_start":22,"column_end":32},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1473},"to":{"krate":1,"index":2457}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":267277,"byte_end":267287,"line_start":1533,"line_end":1533,"column_start":29,"column_end":39},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1473},"to":{"krate":1,"index":7233}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":267829,"byte_end":267839,"line_start":1557,"line_end":1557,"column_start":30,"column_end":40},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1473},"to":{"krate":1,"index":7504}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":267925,"byte_end":267935,"line_start":1564,"line_end":1564,"column_start":27,"column_end":37},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1473},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":268152,"byte_end":268171,"line_start":1574,"line_end":1574,"column_start":22,"column_end":41},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1479},"to":{"krate":1,"index":2457}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":268377,"byte_end":268396,"line_start":1583,"line_end":1583,"column_start":29,"column_end":48},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1479},"to":{"krate":1,"index":7233}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":268768,"byte_end":268787,"line_start":1600,"line_end":1600,"column_start":30,"column_end":49},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1479},"to":{"krate":1,"index":7504}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":268873,"byte_end":268892,"line_start":1607,"line_end":1607,"column_start":27,"column_end":46},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1479},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":269109,"byte_end":269114,"line_start":1617,"line_end":1617,"column_start":22,"column_end":27},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1484},"to":{"krate":1,"index":2457}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":269307,"byte_end":269312,"line_start":1626,"line_end":1626,"column_start":30,"column_end":35},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1484},"to":{"krate":1,"index":7504}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":269398,"byte_end":269403,"line_start":1633,"line_end":1633,"column_start":27,"column_end":32},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1484},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":269627,"byte_end":269632,"line_start":1643,"line_end":1643,"column_start":29,"column_end":34},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1484},"to":{"krate":1,"index":7233}}]}