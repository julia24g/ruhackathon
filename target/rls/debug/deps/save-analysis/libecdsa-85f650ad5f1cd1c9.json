{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1","program":"/Users/julia/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","ecdsa","--edition=2018","/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"arithmetic\"","--cfg","feature=\"der\"","--cfg","feature=\"digest\"","--cfg","feature=\"hazmat\"","--cfg","feature=\"hmac\"","--cfg","feature=\"sign\"","--cfg","feature=\"verify\"","--cfg","feature=\"zeroize\"","-C","metadata=85f650ad5f1cd1c9","-C","extra-filename=-85f650ad5f1cd1c9","--out-dir","/Users/julia/ruhackathon/target/rls/debug/deps","-L","dependency=/Users/julia/ruhackathon/target/rls/debug/deps","--extern","der=/Users/julia/ruhackathon/target/rls/debug/deps/libder-38bd68b87464fa3c.rmeta","--extern","elliptic_curve=/Users/julia/ruhackathon/target/rls/debug/deps/libelliptic_curve-c8f1b2ab578f1cd8.rmeta","--extern","hmac=/Users/julia/ruhackathon/target/rls/debug/deps/libhmac-6a2ba428bda9e375.rmeta","--extern","signature=/Users/julia/ruhackathon/target/rls/debug/deps/libsignature-2236216246b3043d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/julia/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/julia/ruhackathon/target/rls/debug/deps/libecdsa-85f650ad5f1cd1c9.rmeta"},"prelude":{"crate_id":{"name":"ecdsa","disambiguator":[7338668411228836467,8795945554356095763]},"crate_root":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src","external_crates":[{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[17161976177339802527,9637120080719870273]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[12784072134307519025,4657485898025748013]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[8860544973196061204,9932137894390183628]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":4,"id":{"name":"der","disambiguator":[5677014531735393550,15879784774022477508]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":5,"id":{"name":"typenum","disambiguator":[14509014512433398701,5747145694384200891]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":6,"id":{"name":"elliptic_curve","disambiguator":[13807147705136224232,16251544911896674658]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":7,"id":{"name":"subtle","disambiguator":[4522810956575255828,4910096643372407593]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":8,"id":{"name":"std","disambiguator":[14497711731351875891,7574154950596153320]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":9,"id":{"name":"alloc","disambiguator":[15484098214765895148,4360652648143560453]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":10,"id":{"name":"libc","disambiguator":[13802683045354889200,17279120461159080731]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":11,"id":{"name":"unwind","disambiguator":[13733846401634403672,16568137600355934567]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":12,"id":{"name":"cfg_if","disambiguator":[5926527291982439463,7261863668131194074]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":13,"id":{"name":"hashbrown","disambiguator":[2147386378482378397,1448349958257004752]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":14,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8504510625746843556,11549570195915831773]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":15,"id":{"name":"rustc_demangle","disambiguator":[1145582961014725186,16562354883654090131]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":16,"id":{"name":"std_detect","disambiguator":[6582153069738696943,14519107576634371424]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":17,"id":{"name":"addr2line","disambiguator":[15498041504304623936,9266600846380482125]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":18,"id":{"name":"gimli","disambiguator":[12608136573466536856,1503974727608604885]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":19,"id":{"name":"object","disambiguator":[16755883997827362908,2889333423780235391]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":20,"id":{"name":"panic_unwind","disambiguator":[3009561993154964965,13259943199418826037]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":21,"id":{"name":"generic_array","disambiguator":[7429325815917903621,4953779473884636296]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":22,"id":{"name":"ff","disambiguator":[2105630046445953287,12085405015627007269]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":23,"id":{"name":"bitvec","disambiguator":[14851539261954789943,15604764097012981211]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":24,"id":{"name":"funty","disambiguator":[11994280634423852699,10648987090702083785]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":25,"id":{"name":"radium","disambiguator":[16917809150809643676,3878275019157653836]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":26,"id":{"name":"tap","disambiguator":[12632791922117082934,5412440633162020162]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":27,"id":{"name":"wyz","disambiguator":[14138619879403673573,1821794984299287805]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":28,"id":{"name":"rand_core","disambiguator":[11887644693504216196,7259550397967195635]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":29,"id":{"name":"getrandom","disambiguator":[17488875655129187426,16701060034023178929]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":30,"id":{"name":"cfg_if","disambiguator":[6669231008839721604,5451692867657612098]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":31,"id":{"name":"libc","disambiguator":[12590972830871631501,16526445224950325690]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":32,"id":{"name":"zeroize","disambiguator":[5684867084009683894,5518746224732812858]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":33,"id":{"name":"zeroize_derive","disambiguator":[16940183091903201555,668267786870049164]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","num":34,"id":{"name":"group","disambiguator":[2763280832928448759,993267773673036501]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","num":35,"id":{"name":"signature","disambiguator":[7905351374078192889,2230238185018547430]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","num":36,"id":{"name":"digest","disambiguator":[3927988467184982881,5624109746068441640]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/rfc6979.rs","num":37,"id":{"name":"hmac","disambiguator":[18180923617920215345,1055204598753345613]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/rfc6979.rs","num":38,"id":{"name":"crypto_mac","disambiguator":[12762573339546326474,13916984158313580375]}}],"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":0,"byte_end":10605,"line_start":1,"line_end":331,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":6,"index":0},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":2712,"byte_end":2726,"line_start":80,"line_end":80,"column_start":9,"column_end":23},"alias_span":null,"name":"elliptic_curve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":6,"index":889},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":2741,"byte_end":2753,"line_start":80,"line_end":80,"column_start":38,"column_end":50},"alias_span":null,"name":"EncodedPoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":6,"index":204},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":2768,"byte_end":2773,"line_start":80,"line_end":80,"column_start":65,"column_end":70},"alias_span":null,"name":"Curve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":35,"index":0},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":2839,"byte_end":2848,"line_start":83,"line_end":83,"column_start":9,"column_end":18},"alias_span":null,"name":"signature","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":35,"index":128},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":2857,"byte_end":2862,"line_start":83,"line_end":83,"column_start":27,"column_end":32},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":341},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":2953,"byte_end":2963,"line_start":87,"line_end":87,"column_start":15,"column_end":25},"alias_span":null,"name":"SigningKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":629},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":3059,"byte_end":3071,"line_start":91,"line_end":91,"column_start":17,"column_end":29},"alias_span":null,"name":"VerifyingKey","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":0,"byte_end":10605,"line_start":1,"line_end":331,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":89},{"krate":0,"index":163},{"krate":0,"index":233},{"krate":0,"index":378},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":578},{"krate":0,"index":581},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":648},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":591},{"krate":0,"index":598},{"krate":0,"index":607},{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":623},{"krate":0,"index":627}],"decl_id":null,"docs":" Elliptic Curve Digital Signature Algorithm (ECDSA) as specified in\n [FIPS 186-4] (Digital Signature Standard)","sig":null,"attributes":[{"value":"/ Elliptic Curve Digital Signature Algorithm (ECDSA) as specified in","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":0,"byte_end":70,"line_start":1,"line_end":1,"column_start":1,"column_end":71}},{"value":"/ [FIPS 186-4] (Digital Signature Standard)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":71,"byte_end":116,"line_start":2,"line_end":2,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":117,"byte_end":120,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ ## About","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":121,"byte_end":133,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":134,"byte_end":137,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This crate provides generic ECDSA support which can be used in the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":138,"byte_end":208,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ following ways:","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":209,"byte_end":228,"line_start":7,"line_end":7,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":229,"byte_end":232,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ - Generic implementation of ECDSA usable with the following crates:","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":233,"byte_end":304,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"/   - [`k256`] (secp256k1)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":305,"byte_end":333,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"/   - [`p256`] (NIST P-256)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":334,"byte_end":363,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"/ - ECDSA signature types alone which can be used to provide interoperability","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":364,"byte_end":443,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/   between other crates that provide an ECDSA implementation:","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":444,"byte_end":508,"line_start":13,"line_end":13,"column_start":1,"column_end":65}},{"value":"/   - [`p384`] (NIST P-384)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":509,"byte_end":538,"line_start":14,"line_end":14,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":539,"byte_end":542,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Any crates which provide an implementation of ECDSA for a particular","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":543,"byte_end":615,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ elliptic curve can leverage the types from this crate, along with the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":616,"byte_end":689,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ [`k256`], [`p256`], and/or [`p384`] crates to expose ECDSA functionality in","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":690,"byte_end":769,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ a generic, interoperable way by leveraging the [`Signature`] type with in","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":770,"byte_end":847,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ conjunction with the [`signature::Signer`] and [`signature::Verifier`]","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":848,"byte_end":922,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ traits.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":923,"byte_end":934,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":935,"byte_end":938,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ For example, the [`ring-compat`] crate implements the [`signature::Signer`]","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":939,"byte_end":1018,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ and [`signature::Verifier`] traits in conjunction with the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":1019,"byte_end":1081,"line_start":24,"line_end":24,"column_start":1,"column_end":63}},{"value":"/ [`p256::ecdsa::Signature`] and [`p384::ecdsa::Signature`] types to","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":1082,"byte_end":1152,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/ wrap the ECDSA implementations from [*ring*] in a generic, interoperable","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":1153,"byte_end":1229,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ API.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":1230,"byte_end":1238,"line_start":27,"line_end":27,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":1239,"byte_end":1242,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Minimum Supported Rust Version","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":1243,"byte_end":1280,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":1281,"byte_end":1284,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Rust **1.47** or higher.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":1285,"byte_end":1313,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":1314,"byte_end":1317,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Minimum supported Rust version may be changed in the future, but it will be","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":1318,"byte_end":1397,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ accompanied with a minor version bump.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":1398,"byte_end":1440,"line_start":34,"line_end":34,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":1441,"byte_end":1444,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [FIPS 186-4]: https://csrc.nist.gov/publications/detail/fips/186/4/final","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":1445,"byte_end":1521,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"/ [`k256`]: https://docs.rs/k256","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":1522,"byte_end":1556,"line_start":37,"line_end":37,"column_start":1,"column_end":35}},{"value":"/ [`p256`]: https://docs.rs/p256","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":1557,"byte_end":1591,"line_start":38,"line_end":38,"column_start":1,"column_end":35}},{"value":"/ [`p256::ecdsa::Signature`]: https://docs.rs/p256/latest/p256/ecdsa/type.Signature.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":1592,"byte_end":1682,"line_start":39,"line_end":39,"column_start":1,"column_end":91}},{"value":"/ [`p384`]: https://docs.rs/p384","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":1683,"byte_end":1717,"line_start":40,"line_end":40,"column_start":1,"column_end":35}},{"value":"/ [`p384::ecdsa::Signature`]: https://docs.rs/p384/latest/p384/ecdsa/type.Signature.html","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":1718,"byte_end":1808,"line_start":41,"line_end":41,"column_start":1,"column_end":91}},{"value":"/ [`ring-compat`]: https://docs.rs/ring-compat","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":1809,"byte_end":1857,"line_start":42,"line_end":42,"column_start":1,"column_end":49}},{"value":"/ [*ring*]: https://docs.rs/ring","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":1858,"byte_end":1892,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"no_std","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":1894,"byte_end":1904,"line_start":45,"line_end":45,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":1944,"byte_end":1967,"line_start":47,"line_end":47,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, rust_2018_idioms)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":1968,"byte_end":2008,"line_start":48,"line_end":48,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"der","qualname":"::der","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":85},{"krate":0,"index":86}],"decl_id":null,"docs":" Support for ECDSA signatures encoded as ASN.1 DER.\n","sig":null,"attributes":[{"value":"cfg(feature = \"der\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":2214,"byte_end":2237,"line_start":57,"line_end":57,"column_start":1,"column_end":24}},{"value":"/ Support for ECDSA signatures encoded as ASN.1 DER.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":10607,"byte_end":10661,"line_start":1,"line_end":1,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":49},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":11441,"byte_end":11452,"line_start":34,"line_end":34,"column_start":10,"column_end":21},"name":"MaxOverhead","qualname":"::der::MaxOverhead","value":"U9","parent":null,"children":[],"decl_id":null,"docs":" Maximum overhead of an ASN.1 DER-encoded ECDSA signature for a given curve:\n 9-bytes.","sig":null,"attributes":[{"value":"/ Maximum overhead of an ASN.1 DER-encoded ECDSA signature for a given curve:","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":10974,"byte_end":11053,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ 9-bytes.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":11054,"byte_end":11066,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":11067,"byte_end":11070,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Includes 3-byte ASN.1 DER header:","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":11071,"byte_end":11108,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":11109,"byte_end":11112,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ - 1-byte: ASN.1 `SEQUENCE` tag (0x30)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":11113,"byte_end":11154,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ - 2-byte: length","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":11155,"byte_end":11175,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":11176,"byte_end":11179,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ...followed by two ASN.1 `INTEGER` values, which each have a header whose","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":11180,"byte_end":11257,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ maximum length is the following:","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":11258,"byte_end":11294,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":11295,"byte_end":11298,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ - 1-byte: ASN.1 `INTEGER` tag (0x02)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":11299,"byte_end":11339,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/ - 1-byte: length","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":11340,"byte_end":11360,"line_start":32,"line_end":32,"column_start":1,"column_end":21}},{"value":"/ - 1-byte: zero to indicate value is positive (`INTEGER` is signed)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":11361,"byte_end":11431,"line_start":33,"line_end":33,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":50},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":11550,"byte_end":11557,"line_start":37,"line_end":37,"column_start":10,"column_end":17},"name":"MaxSize","qualname":"::der::MaxSize","value":"<<<C as elliptic_curve::Curve>::FieldSize as Add>::Output as\nAdd<MaxOverhead>>::Output","parent":null,"children":[],"decl_id":null,"docs":" Maximum size of an ASN.1 DER encoded signature for the given elliptic curve.\n","sig":null,"attributes":[{"value":"/ Maximum size of an ASN.1 DER encoded signature for the given elliptic curve.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":11460,"byte_end":11540,"line_start":36,"line_end":36,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":58},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":12109,"byte_end":12118,"line_start":52,"line_end":52,"column_start":12,"column_end":21},"name":"Signature","qualname":"::der::Signature","value":"Signature {  }","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62}],"decl_id":null,"docs":" ASN.1 DER-encoded signature.","sig":null,"attributes":[{"value":"/ ASN.1 DER-encoded signature.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":12005,"byte_end":12037,"line_start":49,"line_end":49,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":12038,"byte_end":12041,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Generic over the scalar size of the elliptic curve.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":12042,"byte_end":12097,"line_start":51,"line_end":51,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":13237,"byte_end":13240,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"len","qualname":"<Signature<C>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the signature in bytes\n","sig":null,"attributes":[{"value":"/ Get the length of the signature in bytes","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":13181,"byte_end":13225,"line_start":90,"line_end":90,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":13348,"byte_end":13356,"line_start":96,"line_end":96,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Signature<C>>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow this signature as a byte slice\n","sig":null,"attributes":[{"value":"/ Borrow this signature as a byte slice","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":13295,"byte_end":13336,"line_start":95,"line_end":95,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":89},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hazmat","qualname":"::hazmat","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":141},{"krate":0,"index":145},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":160}],"decl_id":null,"docs":" Low-level ECDSA primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"hazmat\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":2384,"byte_end":2410,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/ Low-level ECDSA primitives.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":19660,"byte_end":19691,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":19692,"byte_end":19695,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # ⚠️ Warning: Hazmat!","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":19696,"byte_end":19725,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":19726,"byte_end":19729,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ YOU PROBABLY DON'T WANT TO USE THESE!","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":19730,"byte_end":19771,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":19772,"byte_end":19775,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ These primitives are easy-to-misuse low-level interfaces intended to be","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":19776,"byte_end":19851,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ implemented by elliptic curve crates and consumed only by this crate!","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":19852,"byte_end":19925,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":19926,"byte_end":19929,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ If you are an end user / non-expert in cryptography, do not use these!","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":19930,"byte_end":20004,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ Failure to use them correctly can lead to catastrophic failures including","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":20005,"byte_end":20082,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ FULL PRIVATE KEY RECOVERY!","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":20083,"byte_end":20113,"line_start":12,"line_end":12,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":137},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":20931,"byte_end":20944,"line_start":38,"line_end":38,"column_start":11,"column_end":24},"name":"SignPrimitive","qualname":"::hazmat::SignPrimitive","value":"SignPrimitive<C>","parent":null,"children":[{"krate":0,"index":139}],"decl_id":null,"docs":" Try to sign the given prehashed message using ECDSA.","sig":null,"attributes":[{"value":"/ Try to sign the given prehashed message using ECDSA.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":20574,"byte_end":20630,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":20631,"byte_end":20634,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait is intended to be implemented on a type with access","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":20635,"byte_end":20701,"line_start":33,"line_end":33,"column_start":1,"column_end":67}},{"value":"/ to the secret scalar via `&self`, such as particular curve's `Scalar` type,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":20702,"byte_end":20781,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ or potentially a key handle to a hardware device.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":20782,"byte_end":20835,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":20836,"byte_end":20866,"line_start":36,"line_end":36,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":21429,"byte_end":21447,"line_start":51,"line_end":51,"column_start":8,"column_end":26},"name":"try_sign_prehashed","qualname":"::hazmat::SignPrimitive::try_sign_prehashed","value":"pub fn try_sign_prehashed<K: Borrow<Scalar<C>> + Invert<Output =\n                          Scalar<C>>>(&Self, &K, &Scalar<C>)\n-> Result<Signature<C>, Error>","parent":{"krate":0,"index":137},"children":[],"decl_id":null,"docs":" Try to sign the prehashed message.","sig":null,"attributes":[{"value":"/ Try to sign the prehashed message.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":21093,"byte_end":21131,"line_start":44,"line_end":44,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":21136,"byte_end":21139,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Accepts the following arguments:","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":21144,"byte_end":21180,"line_start":46,"line_end":46,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":21185,"byte_end":21188,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ - `ephemeral_scalar`: ECDSA `k` value. MUST BE UNIFORMLY RANDOM!!!","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":21193,"byte_end":21263,"line_start":48,"line_end":48,"column_start":5,"column_end":75}},{"value":"/ - `hashed_msg`: scalar computed from a hashed message digest to be signed.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":21268,"byte_end":21346,"line_start":49,"line_end":49,"column_start":5,"column_end":83}},{"value":"/   MUST BE OUTPUT OF A CRYPTOGRAPHICALLY SECURE DIGEST ALGORITHM!!!","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":21351,"byte_end":21421,"line_start":50,"line_end":50,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":141},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":21822,"byte_end":21846,"line_start":62,"line_end":62,"column_start":11,"column_end":35},"name":"RecoverableSignPrimitive","qualname":"::hazmat::RecoverableSignPrimitive","value":"RecoverableSignPrimitive<C>","parent":null,"children":[{"krate":0,"index":143}],"decl_id":null,"docs":" [`SignPrimitive`] for signature implementations that can provide public key\n recovery implementation.\n","sig":null,"attributes":[{"value":"/ [`SignPrimitive`] for signature implementations that can provide public key","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":21618,"byte_end":21697,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ recovery implementation.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":21698,"byte_end":21726,"line_start":59,"line_end":59,"column_start":1,"column_end":29}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":21727,"byte_end":21757,"line_start":60,"line_end":60,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":22327,"byte_end":22357,"line_start":74,"line_end":74,"column_start":8,"column_end":38},"name":"try_sign_recoverable_prehashed","qualname":"::hazmat::RecoverableSignPrimitive::try_sign_recoverable_prehashed","value":"pub fn try_sign_recoverable_prehashed<K: Borrow<Scalar<C>> + Invert<Output =\n                                      Scalar<C>>>(&Self, &K, &Scalar<C>)\n-> Result<(Signature<C>, bool), Error>","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Try to sign the prehashed message.","sig":null,"attributes":[{"value":"/ Try to sign the prehashed message.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":21995,"byte_end":22033,"line_start":68,"line_end":68,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":22038,"byte_end":22041,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Accepts the same arguments as [`SignPrimitive::try_sign_prehashed`]","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":22046,"byte_end":22117,"line_start":70,"line_end":70,"column_start":5,"column_end":76}},{"value":"/ but returns a boolean flag which indicates whether or not the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":22122,"byte_end":22187,"line_start":71,"line_end":71,"column_start":5,"column_end":70}},{"value":"/ y-coordinate of the computed 𝐑 = 𝑘×𝑮 point is odd, which can be","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":22192,"byte_end":22269,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/ incorporated into recoverable signatures.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":22274,"byte_end":22319,"line_start":73,"line_end":73,"column_start":5,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":151},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":23420,"byte_end":23435,"line_start":106,"line_end":106,"column_start":11,"column_end":26},"name":"VerifyPrimitive","qualname":"::hazmat::VerifyPrimitive","value":"VerifyPrimitive<C>","parent":null,"children":[{"krate":0,"index":153}],"decl_id":null,"docs":" Verify the given prehashed message using ECDSA.","sig":null,"attributes":[{"value":"/ Verify the given prehashed message using ECDSA.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":23085,"byte_end":23136,"line_start":99,"line_end":99,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":23137,"byte_end":23140,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ This trait is intended to be implemented on type which can access","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":23141,"byte_end":23210,"line_start":101,"line_end":101,"column_start":1,"column_end":70}},{"value":"/ the affine point represeting the public key via `&self`, such as a","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":23211,"byte_end":23281,"line_start":102,"line_end":102,"column_start":1,"column_end":71}},{"value":"/ particular curve's `AffinePoint` type.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":23282,"byte_end":23324,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":23325,"byte_end":23355,"line_start":104,"line_end":104,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":23845,"byte_end":23861,"line_start":118,"line_end":118,"column_start":8,"column_end":24},"name":"verify_prehashed","qualname":"::hazmat::VerifyPrimitive::verify_prehashed","value":"pub fn verify_prehashed(&Self, &Scalar<C>, &Signature<C>) -> Result<(), Error>","parent":{"krate":0,"index":151},"children":[],"decl_id":null,"docs":" Verify the prehashed message against the provided signature","sig":null,"attributes":[{"value":"/ Verify the prehashed message against the provided signature","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":23584,"byte_end":23647,"line_start":112,"line_end":112,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":23652,"byte_end":23655,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Accepts the following arguments:","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":23660,"byte_end":23696,"line_start":114,"line_end":114,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":23701,"byte_end":23704,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ - `hashed_msg`: prehashed message to be verified","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":23709,"byte_end":23761,"line_start":116,"line_end":116,"column_start":5,"column_end":57}},{"value":"/ - `signature`: signature to be verified against the key and message","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":23766,"byte_end":23837,"line_start":117,"line_end":117,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":154},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":24537,"byte_end":24552,"line_start":137,"line_end":137,"column_start":11,"column_end":26},"name":"DigestPrimitive","qualname":"::hazmat::DigestPrimitive","value":"DigestPrimitive: Curve + Order","parent":null,"children":[{"krate":0,"index":155}],"decl_id":null,"docs":" Bind a preferred [`Digest`] algorithm to an elliptic curve type.","sig":null,"attributes":[{"value":"/ Bind a preferred [`Digest`] algorithm to an elliptic curve type.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":23975,"byte_end":24043,"line_start":125,"line_end":125,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":24044,"byte_end":24047,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ Generally there is a preferred variety of the SHA-2 family used with ECDSA","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":24048,"byte_end":24126,"line_start":127,"line_end":127,"column_start":1,"column_end":79}},{"value":"/ for a particular elliptic curve.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":24127,"byte_end":24163,"line_start":128,"line_end":128,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":24164,"byte_end":24167,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This trait can be used to specify it, and with it receive a blanket impl of","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":24168,"byte_end":24247,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ [`PrehashSignature`], used by [`signature_derive`][1]) for the [`Signature`]","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":24248,"byte_end":24328,"line_start":131,"line_end":131,"column_start":1,"column_end":81}},{"value":"/ type for a particular elliptic curve.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":24329,"byte_end":24370,"line_start":132,"line_end":132,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":24371,"byte_end":24374,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/RustCrypto/traits/tree/master/signature/derive","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":24375,"byte_end":24449,"line_start":134,"line_end":134,"column_start":1,"column_end":75}},{"value":"cfg(feature = \"digest\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":24450,"byte_end":24476,"line_start":135,"line_end":135,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":155},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":24721,"byte_end":24727,"line_start":140,"line_end":140,"column_start":10,"column_end":16},"name":"Digest","qualname":"::hazmat::DigestPrimitive::Digest","value":"type Digest: Digest;","parent":{"krate":0,"index":154},"children":[],"decl_id":null,"docs":" Preferred digest to use when computing ECDSA signatures for this\n elliptic curve. This should be a member of the SHA-2 family.\n","sig":null,"attributes":[{"value":"/ Preferred digest to use when computing ECDSA signatures for this","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":24574,"byte_end":24642,"line_start":138,"line_end":138,"column_start":5,"column_end":73}},{"value":"/ elliptic curve. This should be a member of the SHA-2 family.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":24647,"byte_end":24711,"line_start":139,"line_end":139,"column_start":5,"column_end":69}}]},{"kind":"Trait","id":{"krate":0,"index":156},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":25193,"byte_end":25203,"line_start":153,"line_end":153,"column_start":11,"column_end":21},"name":"FromDigest","qualname":"::hazmat::FromDigest","value":"FromDigest<C: Curve>","parent":null,"children":[{"krate":0,"index":158}],"decl_id":null,"docs":" Instantiate this type from the output of a digest.","sig":null,"attributes":[{"value":"/ Instantiate this type from the output of a digest.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":24740,"byte_end":24794,"line_start":143,"line_end":143,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":24795,"byte_end":24798,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ This trait is intended for use in ECDSA and should perform a conversion","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":24799,"byte_end":24874,"line_start":145,"line_end":145,"column_start":1,"column_end":76}},{"value":"/ which is compatible with the rules for calculating `h` from `H(M)` set out","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":24875,"byte_end":24953,"line_start":146,"line_end":146,"column_start":1,"column_end":79}},{"value":"/ in RFC6979 section 2.4. This conversion cannot fail.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":24954,"byte_end":25010,"line_start":147,"line_end":147,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":25011,"byte_end":25014,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ This trait may also be useful for other hash-to-scalar or hash-to-curve","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":25015,"byte_end":25090,"line_start":149,"line_end":149,"column_start":1,"column_end":76}},{"value":"/ use cases.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":25091,"byte_end":25105,"line_start":150,"line_end":150,"column_start":1,"column_end":15}},{"value":"cfg(feature = \"digest\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":25106,"byte_end":25132,"line_start":151,"line_end":151,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":25280,"byte_end":25291,"line_start":155,"line_end":155,"column_start":8,"column_end":19},"name":"from_digest","qualname":"::hazmat::FromDigest::from_digest","value":"pub fn from_digest<D>(D) -> Self where D: Digest<OutputSize = C::FieldSize>","parent":{"krate":0,"index":156},"children":[],"decl_id":null,"docs":" Instantiate this type from a [`Digest`] instance\n","sig":null,"attributes":[{"value":"/ Instantiate this type from a [`Digest`] instance","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":25220,"byte_end":25272,"line_start":154,"line_end":154,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":163},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/rfc6979.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rfc6979","qualname":"::rfc6979","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/rfc6979.rs","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":225},{"krate":0,"index":229}],"decl_id":null,"docs":" Support for computing deterministic ECDSA ephemeral scalar (`k`).","sig":null,"attributes":[{"value":"cfg(feature = \"sign\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":2478,"byte_end":2502,"line_start":69,"line_end":69,"column_start":1,"column_end":25}},{"value":"/ Support for computing deterministic ECDSA ephemeral scalar (`k`).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/rfc6979.rs","byte_start":25569,"byte_end":25638,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/rfc6979.rs","byte_start":25639,"byte_end":25642,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Implementation of the algorithm described in RFC 6979 (Section 3.2):","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/rfc6979.rs","byte_start":25643,"byte_end":25715,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ <https://tools.ietf.org/html/rfc6979#section-3>","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/rfc6979.rs","byte_start":25716,"byte_end":25767,"line_start":4,"line_end":4,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":222},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/rfc6979.rs","byte_start":26215,"byte_end":26225,"line_start":20,"line_end":20,"column_start":8,"column_end":18},"name":"generate_k","qualname":"::rfc6979::generate_k","value":"pub fn generate_k<C, D>(&NonZeroScalar<C>, D, &[u8])\n-> Zeroizing<NonZeroScalar<C>> where C: Curve + ProjectiveArithmetic,\nD: FixedOutput<OutputSize = C::FieldSize> + BlockInput + Clone + Default +\nReset + Update, Scalar<C>: PrimeField<Repr = FieldBytes<C>> + FromDigest<C> +\nInvert<Output = Scalar<C>> + Zeroize","parent":null,"children":[],"decl_id":null,"docs":" Generate ephemeral scalar `k` from the secret scalar and a digest of the\n input message.\n","sig":null,"attributes":[{"value":"/ Generate ephemeral scalar `k` from the secret scalar and a digest of the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/rfc6979.rs","byte_start":26112,"byte_end":26188,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ input message.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/rfc6979.rs","byte_start":26189,"byte_end":26207,"line_start":19,"line_end":19,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":341},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":31082,"byte_end":31092,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"SigningKey","qualname":"::sign::SigningKey","value":"SigningKey {  }","parent":null,"children":[{"krate":0,"index":343}],"decl_id":null,"docs":" ECDSA signing key. Generic over elliptic curves.","sig":null,"attributes":[{"value":"/ ECDSA signing key. Generic over elliptic curves.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":30824,"byte_end":30876,"line_start":39,"line_end":39,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":30877,"byte_end":30880,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Requires an [`elliptic_curve::ProjectiveArithmetic`] impl on the curve, and a","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":30881,"byte_end":30962,"line_start":41,"line_end":41,"column_start":1,"column_end":82}},{"value":"/ [`SignPrimitive`] impl on its associated `Scalar` type.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":30963,"byte_end":31022,"line_start":42,"line_end":42,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":31711,"byte_end":31717,"line_start":68,"line_end":68,"column_start":12,"column_end":18},"name":"random","qualname":"<SigningKey<C>>::random","value":"pub fn random<impl CryptoRng + RngCore: CryptoRng +\n              RngCore>(impl CryptoRng + RngCore) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate a cryptographically random [`SigningKey`].\n","sig":null,"attributes":[{"value":"/ Generate a cryptographically random [`SigningKey`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":31644,"byte_end":31699,"line_start":67,"line_end":67,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":31922,"byte_end":31932,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<SigningKey<C>>::from_bytes","value":"pub fn from_bytes(&[u8]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Initialize signing key from a raw scalar serialized as a byte slice.\n","sig":null,"attributes":[{"value":"/ Initialize signing key from a raw scalar serialized as a byte slice.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":31838,"byte_end":31910,"line_start":74,"line_end":74,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":32267,"byte_end":32280,"line_start":84,"line_end":84,"column_start":12,"column_end":25},"name":"verifying_key","qualname":"<SigningKey<C>>::verifying_key","value":"pub fn verifying_key(&Self) -> VerifyingKey<C> where AffinePoint<C>: Copy +\nClone + Debug + Default, ProjectivePoint<C>: From<AffinePoint<C>>","parent":null,"children":[],"decl_id":null,"docs":" Get the [`VerifyingKey`] which corresponds to this [`SigningKey`]\n","sig":null,"attributes":[{"value":"/ Get the [`VerifyingKey`] which corresponds to this [`SigningKey`]","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":32101,"byte_end":32170,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"cfg(feature = \"verify\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":32175,"byte_end":32201,"line_start":82,"line_end":82,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":32571,"byte_end":32579,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<SigningKey<C>>::to_bytes","value":"pub fn to_bytes(&Self) -> FieldBytes<C>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this [`SigningKey`] as bytes\n","sig":null,"attributes":[{"value":"/ Serialize this [`SigningKey`] as bytes","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":32517,"byte_end":32559,"line_start":94,"line_end":94,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":629},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":39857,"byte_end":39869,"line_start":35,"line_end":35,"column_start":12,"column_end":24},"name":"VerifyingKey","qualname":"::verify::VerifyingKey","value":"VerifyingKey {  }","parent":null,"children":[{"krate":0,"index":631}],"decl_id":null,"docs":" ECDSA verification key (i.e. public key). Generic over elliptic curves.","sig":null,"attributes":[{"value":"/ ECDSA verification key (i.e. public key). Generic over elliptic curves.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":39537,"byte_end":39612,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":39613,"byte_end":39616,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Requires an [`elliptic_curve::ProjectiveArithmetic`] impl on the curve, and a","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":39617,"byte_end":39698,"line_start":31,"line_end":31,"column_start":1,"column_end":82}},{"value":"/ [`VerifyPrimitive`] impl on its associated `AffinePoint` type.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":39699,"byte_end":39765,"line_start":32,"line_end":32,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":40501,"byte_end":40516,"line_start":54,"line_end":54,"column_start":12,"column_end":27},"name":"from_sec1_bytes","qualname":"<VerifyingKey<C>>::from_sec1_bytes","value":"pub fn from_sec1_bytes(&[u8]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Initialize [`VerifyingKey`] from a SEC1-encoded public key.\n","sig":null,"attributes":[{"value":"/ Initialize [`VerifyingKey`] from a SEC1-encoded public key.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":40426,"byte_end":40489,"line_start":53,"line_end":53,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":40759,"byte_end":40777,"line_start":61,"line_end":61,"column_start":12,"column_end":30},"name":"from_encoded_point","qualname":"<VerifyingKey<C>>::from_encoded_point","value":"pub fn from_encoded_point(&EncodedPoint<C>) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Initialize [`VerifyingKey`] from an [`EncodedPoint`].\n","sig":null,"attributes":[{"value":"/ Initialize [`VerifyingKey`] from an [`EncodedPoint`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":40690,"byte_end":40747,"line_start":60,"line_end":60,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":41115,"byte_end":41131,"line_start":69,"line_end":69,"column_start":12,"column_end":28},"name":"to_encoded_point","qualname":"<VerifyingKey<C>>::to_encoded_point","value":"pub fn to_encoded_point(&Self, bool) -> EncodedPoint<C>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this [`VerifyingKey`] as a SEC1 [`EncodedPoint`], optionally\n applying point compression.\n","sig":null,"attributes":[{"value":"/ Serialize this [`VerifyingKey`] as a SEC1 [`EncodedPoint`], optionally","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":40993,"byte_end":41067,"line_start":67,"line_end":67,"column_start":5,"column_end":79}},{"value":"/ applying point compression.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":41072,"byte_end":41103,"line_start":68,"line_end":68,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":587},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":3564,"byte_end":3577,"line_start":110,"line_end":110,"column_start":10,"column_end":23},"name":"SignatureSize","qualname":"::SignatureSize","value":"<<C as elliptic_curve::Curve>::FieldSize as Add>::Output","parent":null,"children":[],"decl_id":null,"docs":" Size of a fixed sized signature for the given elliptic curve.\n","sig":null,"attributes":[{"value":"/ Size of a fixed sized signature for the given elliptic curve.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":3489,"byte_end":3554,"line_start":109,"line_end":109,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":589},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":3707,"byte_end":3721,"line_start":113,"line_end":113,"column_start":10,"column_end":24},"name":"SignatureBytes","qualname":"::SignatureBytes","value":"GenericArray<u8, SignatureSize<C>>","parent":null,"children":[],"decl_id":null,"docs":" Fixed-size byte array containing an ECDSA signature\n","sig":null,"attributes":[{"value":"/ Fixed-size byte array containing an ECDSA signature","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":3642,"byte_end":3697,"line_start":112,"line_end":112,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":640},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":4388,"byte_end":4397,"line_start":129,"line_end":129,"column_start":12,"column_end":21},"name":"Signature","qualname":"::Signature","value":"Signature {  }","parent":null,"children":[{"krate":0,"index":642}],"decl_id":null,"docs":" ECDSA signature (fixed-size). Generic over elliptic curve types.","sig":null,"attributes":[{"value":"/ ECDSA signature (fixed-size). Generic over elliptic curve types.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":3764,"byte_end":3832,"line_start":115,"line_end":115,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":3833,"byte_end":3836,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ Serialized as fixed-sized big endian scalar values with no added framing:","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":3837,"byte_end":3914,"line_start":117,"line_end":117,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":3915,"byte_end":3918,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ - `r`: field element size for the given curve, big-endian","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":3919,"byte_end":3980,"line_start":119,"line_end":119,"column_start":1,"column_end":62}},{"value":"/ - `s`: field element size for the given curve, big-endian","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":3981,"byte_end":4042,"line_start":120,"line_end":120,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":4043,"byte_end":4046,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ For example, in a curve with a 256-bit modulus like NIST P-256 or","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":4047,"byte_end":4116,"line_start":122,"line_end":122,"column_start":1,"column_end":70}},{"value":"/ secp256k1, `r` and `s` will both be 32-bytes, resulting in a signature","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":4117,"byte_end":4191,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/ with a total of 64-bytes.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":4192,"byte_end":4221,"line_start":124,"line_end":124,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":4222,"byte_end":4225,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ASN.1 DER-encoded signatures also supported via the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":4226,"byte_end":4281,"line_start":126,"line_end":126,"column_start":1,"column_end":56}},{"value":"/ [`Signature::from_der`] and [`Signature::to_der`] methods.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":4282,"byte_end":4344,"line_start":127,"line_end":127,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":4712,"byte_end":4724,"line_start":143,"line_end":143,"column_start":12,"column_end":24},"name":"from_scalars","qualname":"<Signature<C>>::from_scalars","value":"pub fn from_scalars<impl Into<FieldBytes<C>>: Into<FieldBytes<C>>,\n                    impl Into<FieldBytes<C>>: Into<FieldBytes<C>>>(impl Into<FieldBytes<C>>,\n                                                                   impl Into<FieldBytes<C>>)\n-> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`Signature`] from the serialized `r` and `s` scalar values\n which comprise the signature.\n","sig":null,"attributes":[{"value":"/ Create a [`Signature`] from the serialized `r` and `s` scalar values","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":4590,"byte_end":4662,"line_start":141,"line_end":141,"column_start":5,"column_end":77}},{"value":"/ which comprise the signature.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":4667,"byte_end":4700,"line_start":142,"line_end":142,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":5030,"byte_end":5038,"line_start":153,"line_end":153,"column_start":12,"column_end":20},"name":"from_der","qualname":"<Signature<C>>::from_der","value":"pub fn from_der(&[u8]) -> Result<Self, Error> where C::FieldSize: Add +\nArrayLength<u8> + NonZero, der::MaxSize<C>: ArrayLength<u8>,\n<C::FieldSize as Add>::Output: Add<der::MaxOverhead> + ArrayLength<u8>","parent":null,"children":[],"decl_id":null,"docs":" Parse a signature from ASN.1 DER\n","sig":null,"attributes":[{"value":"/ Parse a signature from ASN.1 DER","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":4903,"byte_end":4939,"line_start":150,"line_end":150,"column_start":5,"column_end":41}},{"value":"cfg(feature = \"der\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":4944,"byte_end":4967,"line_start":151,"line_end":151,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":5482,"byte_end":5488,"line_start":165,"line_end":165,"column_start":12,"column_end":18},"name":"to_der","qualname":"<Signature<C>>::to_der","value":"pub fn to_der(&Self) -> der::Signature<C> where C::FieldSize: Add +\nArrayLength<u8> + NonZero, der::MaxSize<C>: ArrayLength<u8>,\n<C::FieldSize as Add>::Output: Add<der::MaxOverhead> + ArrayLength<u8>","parent":null,"children":[],"decl_id":null,"docs":" Serialize this signature as ASN.1 DER\n","sig":null,"attributes":[{"value":"/ Serialize this signature as ASN.1 DER","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":5350,"byte_end":5391,"line_start":162,"line_end":162,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"der\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":5396,"byte_end":5419,"line_start":163,"line_end":163,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":6225,"byte_end":6226,"line_start":186,"line_end":186,"column_start":12,"column_end":13},"name":"r","qualname":"<Signature<C>>::r","value":"pub fn r(&Self) -> NonZeroScalar<C>","parent":null,"children":[],"decl_id":null,"docs":" Get the `r` component of this signature\n","sig":null,"attributes":[{"value":"/ Get the `r` component of this signature","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":6170,"byte_end":6213,"line_start":185,"line_end":185,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":6548,"byte_end":6549,"line_start":193,"line_end":193,"column_start":12,"column_end":13},"name":"s","qualname":"<Signature<C>>::s","value":"pub fn s(&Self) -> NonZeroScalar<C>","parent":null,"children":[],"decl_id":null,"docs":" Get the `s` component of this signature\n","sig":null,"attributes":[{"value":"/ Get the `s` component of this signature","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":6493,"byte_end":6536,"line_start":192,"line_end":192,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":7019,"byte_end":7030,"line_start":203,"line_end":203,"column_start":12,"column_end":23},"name":"normalize_s","qualname":"<Signature<C>>::normalize_s","value":"pub fn normalize_s(&mut Self) -> Result<bool, Error> where\nScalar<C>: NormalizeLow","parent":null,"children":[],"decl_id":null,"docs":" Normalize signature into \"low S\" form as described in\n [BIP 0062: Dealing with Malleability][1].","sig":null,"attributes":[{"value":"/ Normalize signature into \"low S\" form as described in","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":6816,"byte_end":6873,"line_start":199,"line_end":199,"column_start":5,"column_end":62}},{"value":"/ [BIP 0062: Dealing with Malleability][1].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":6878,"byte_end":6923,"line_start":200,"line_end":200,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":6928,"byte_end":6931,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/bitcoin/bips/blob/master/bip-0062.mediawiki","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":6936,"byte_end":7007,"line_start":202,"line_end":202,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":627},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":10225,"byte_end":10237,"line_start":323,"line_end":323,"column_start":11,"column_end":23},"name":"NormalizeLow","qualname":"::NormalizeLow","value":"NormalizeLow: Sized","parent":null,"children":[{"krate":0,"index":628}],"decl_id":null,"docs":" Normalize a scalar (i.e. ECDSA S) to the lower half the field, as described\n in [BIP 0062: Dealing with Malleability][1].","sig":null,"attributes":[{"value":"/ Normalize a scalar (i.e. ECDSA S) to the lower half the field, as described","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":10010,"byte_end":10089,"line_start":319,"line_end":319,"column_start":1,"column_end":80}},{"value":"/ in [BIP 0062: Dealing with Malleability][1].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":10090,"byte_end":10138,"line_start":320,"line_end":320,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":10139,"byte_end":10142,"line_start":321,"line_end":321,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/bitcoin/bips/blob/master/bip-0062.mediawiki","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":10143,"byte_end":10214,"line_start":322,"line_end":322,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":10566,"byte_end":10579,"line_start":330,"line_end":330,"column_start":8,"column_end":21},"name":"normalize_low","qualname":"::NormalizeLow::normalize_low","value":"pub fn normalize_low(&Self) -> (Self, bool)","parent":{"krate":0,"index":627},"children":[],"decl_id":null,"docs":" Normalize scalar to the lower half of the field (i.e. negate it if it's\n larger than half the curve's order).\n Returns a tuple with the new scalar and a boolean indicating whether the given scalar\n was in the higher half.","sig":null,"attributes":[{"value":"/ Normalize scalar to the lower half of the field (i.e. negate it if it's","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":10251,"byte_end":10326,"line_start":324,"line_end":324,"column_start":5,"column_end":80}},{"value":"/ larger than half the curve's order).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":10331,"byte_end":10371,"line_start":325,"line_end":325,"column_start":5,"column_end":45}},{"value":"/ Returns a tuple with the new scalar and a boolean indicating whether the given scalar","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":10376,"byte_end":10465,"line_start":326,"line_end":326,"column_start":5,"column_end":94}},{"value":"/ was in the higher half.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":10470,"byte_end":10497,"line_start":327,"line_end":327,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":10502,"byte_end":10505,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ May be implemented to work in variable time.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":10510,"byte_end":10558,"line_start":329,"line_end":329,"column_start":5,"column_end":53}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":12574,"byte_end":12583,"line_start":69,"line_end":69,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":12979,"byte_end":12988,"line_start":83,"line_end":83,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":14555,"byte_end":14564,"line_start":134,"line_end":134,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":14841,"byte_end":14850,"line_start":146,"line_end":146,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":15272,"byte_end":15281,"line_start":161,"line_end":161,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":16804,"byte_end":16813,"line_start":209,"line_end":209,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":22599,"byte_end":22600,"line_start":82,"line_end":82,"column_start":33,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":25429,"byte_end":25438,"line_start":161,"line_end":161,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/rfc6979.rs","byte_start":27646,"byte_end":27654,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":31379,"byte_end":31389,"line_start":57,"line_end":57,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":32676,"byte_end":32686,"line_start":100,"line_end":100,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":33099,"byte_end":33109,"line_start":116,"line_end":116,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":34031,"byte_end":34041,"line_start":140,"line_end":140,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":34560,"byte_end":34570,"line_start":156,"line_end":156,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":35659,"byte_end":35669,"line_start":187,"line_end":187,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":36252,"byte_end":36262,"line_start":207,"line_end":207,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":36712,"byte_end":36724,"line_start":225,"line_end":225,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":40064,"byte_end":40076,"line_start":44,"line_end":44,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":41278,"byte_end":41290,"line_start":74,"line_end":74,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":41865,"byte_end":41877,"line_start":90,"line_end":90,"column_start":47,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":42408,"byte_end":42420,"line_start":104,"line_end":104,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":42950,"byte_end":42962,"line_start":118,"line_end":118,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":43253,"byte_end":43265,"line_start":129,"line_end":129,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":43550,"byte_end":43559,"line_start":140,"line_end":140,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":43841,"byte_end":43850,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":44122,"byte_end":44134,"line_start":162,"line_end":162,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":44505,"byte_end":44517,"line_start":173,"line_end":173,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":44972,"byte_end":44984,"line_start":187,"line_end":187,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":45462,"byte_end":45474,"line_start":201,"line_end":201,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":4504,"byte_end":4513,"line_start":136,"line_end":136,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":596},{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":5928,"byte_end":5937,"line_start":178,"line_end":178,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":7572,"byte_end":7581,"line_start":222,"line_end":222,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":7774,"byte_end":7783,"line_start":232,"line_end":232,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":7944,"byte_end":7953,"line_start":242,"line_end":242,"column_start":18,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":8107,"byte_end":8116,"line_start":250,"line_end":250,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":8425,"byte_end":8434,"line_start":265,"line_end":265,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":9290,"byte_end":9299,"line_start":298,"line_end":298,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":2293,"byte_end":2296,"line_start":59,"line_end":59,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":2469,"byte_end":2475,"line_start":67,"line_end":67,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":89}},{"kind":"Mod","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":2559,"byte_end":2566,"line_start":71,"line_end":71,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":163}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":12574,"byte_end":12583,"line_start":69,"line_end":69,"column_start":34,"column_end":43},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":58},"to":{"krate":35,"index":60}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":12979,"byte_end":12988,"line_start":83,"line_end":83,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":58},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":14555,"byte_end":14564,"line_start":134,"line_end":134,"column_start":25,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":58},"to":{"krate":1,"index":2729}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":14841,"byte_end":14850,"line_start":146,"line_end":146,"column_start":24,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":58},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":15272,"byte_end":15281,"line_start":161,"line_end":161,"column_start":28,"column_end":37},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":58},"to":{"krate":1,"index":2745}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/der.rs","byte_start":16804,"byte_end":16813,"line_start":209,"line_end":209,"column_start":41,"column_end":50},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":58},"to":{"krate":35,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":22599,"byte_end":22600,"line_start":82,"line_end":82,"column_start":33,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":147},"to":{"krate":0,"index":137}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":24554,"byte_end":24559,"line_start":137,"line_end":137,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":6,"index":204},"to":{"krate":0,"index":154}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":24562,"byte_end":24567,"line_start":137,"line_end":137,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":6,"index":229},"to":{"krate":0,"index":154}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/hazmat.rs","byte_start":25429,"byte_end":25438,"line_start":161,"line_end":161,"column_start":30,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":640},"to":{"krate":35,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/rfc6979.rs","byte_start":27646,"byte_end":27654,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":31379,"byte_end":31389,"line_start":57,"line_end":57,"column_start":9,"column_end":19},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":341},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":32676,"byte_end":32686,"line_start":100,"line_end":100,"column_start":32,"column_end":42},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":341},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":33099,"byte_end":33109,"line_start":116,"line_end":116,"column_start":46,"column_end":56},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":341},"to":{"krate":35,"index":87}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":34031,"byte_end":34041,"line_start":140,"line_end":140,"column_start":45,"column_end":55},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":341},"to":{"krate":35,"index":83}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":34560,"byte_end":34570,"line_start":156,"line_end":156,"column_start":56,"column_end":66},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":341},"to":{"krate":35,"index":98}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":35659,"byte_end":35669,"line_start":187,"line_end":187,"column_start":44,"column_end":54},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":341},"to":{"krate":35,"index":92}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":36252,"byte_end":36262,"line_start":207,"line_end":207,"column_start":36,"column_end":46},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":341},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/sign.rs","byte_start":36712,"byte_end":36724,"line_start":225,"line_end":225,"column_start":34,"column_end":46},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":629},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":40064,"byte_end":40076,"line_start":44,"line_end":44,"column_start":9,"column_end":21},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":41278,"byte_end":41290,"line_start":74,"line_end":74,"column_start":48,"column_end":60},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":629},"to":{"krate":35,"index":119}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":41865,"byte_end":41877,"line_start":90,"line_end":90,"column_start":47,"column_end":59},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":629},"to":{"krate":35,"index":116}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":42408,"byte_end":42420,"line_start":104,"line_end":104,"column_start":36,"column_end":48},"kind":{"Impl":{"id":20}},"from":{"krate":6,"index":889},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":42950,"byte_end":42962,"line_start":118,"line_end":118,"column_start":32,"column_end":44},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":629},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":43253,"byte_end":43265,"line_start":129,"line_end":129,"column_start":33,"column_end":45},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":629},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":43550,"byte_end":43559,"line_start":140,"line_end":140,"column_start":35,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":6,"index":1009},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":43841,"byte_end":43850,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"kind":{"Impl":{"id":24}},"from":{"krate":6,"index":1009},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":44122,"byte_end":44134,"line_start":162,"line_end":162,"column_start":16,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":629},"to":{"krate":1,"index":2492}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":44505,"byte_end":44517,"line_start":173,"line_end":173,"column_start":23,"column_end":35},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":629},"to":{"krate":1,"index":2487}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":44972,"byte_end":44984,"line_start":187,"line_end":187,"column_start":24,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":629},"to":{"krate":1,"index":2530}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/verify.rs","byte_start":45462,"byte_end":45474,"line_start":201,"line_end":201,"column_start":17,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":629},"to":{"krate":1,"index":2519}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":4504,"byte_end":4513,"line_start":136,"line_end":136,"column_start":9,"column_end":18},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":5928,"byte_end":5937,"line_start":178,"line_end":178,"column_start":9,"column_end":18},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":7572,"byte_end":7581,"line_start":222,"line_end":222,"column_start":34,"column_end":43},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":640},"to":{"krate":35,"index":60}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":7774,"byte_end":7783,"line_start":232,"line_end":232,"column_start":25,"column_end":34},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":2729}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":7944,"byte_end":7953,"line_start":242,"line_end":242,"column_start":18,"column_end":27},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":2842}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":8107,"byte_end":8116,"line_start":250,"line_end":250,"column_start":19,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":8425,"byte_end":8434,"line_start":265,"line_end":265,"column_start":28,"column_end":37},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":2745}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":9290,"byte_end":9299,"line_start":298,"line_end":298,"column_start":40,"column_end":49},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":2745}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/ecdsa-0.11.1/src/lib.rs","byte_start":10239,"byte_end":10244,"line_start":323,"line_end":323,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":1,"index":2837},"to":{"krate":0,"index":627}}]}