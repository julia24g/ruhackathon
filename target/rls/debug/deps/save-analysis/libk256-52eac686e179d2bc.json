{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1","program":"/Users/julia/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","k256","--edition=2018","/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"arithmetic\"","--cfg","feature=\"digest\"","--cfg","feature=\"ecdh\"","--cfg","feature=\"ecdsa\"","--cfg","feature=\"ecdsa-core\"","--cfg","feature=\"sha2\"","--cfg","feature=\"sha256\"","--cfg","feature=\"zeroize\"","-C","metadata=52eac686e179d2bc","-C","extra-filename=-52eac686e179d2bc","--out-dir","/Users/julia/ruhackathon/target/rls/debug/deps","-L","dependency=/Users/julia/ruhackathon/target/rls/debug/deps","--extern","cfg_if=/Users/julia/ruhackathon/target/rls/debug/deps/libcfg_if-82e909939301abc6.rmeta","--extern","ecdsa_core=/Users/julia/ruhackathon/target/rls/debug/deps/libecdsa-85f650ad5f1cd1c9.rmeta","--extern","elliptic_curve=/Users/julia/ruhackathon/target/rls/debug/deps/libelliptic_curve-c8f1b2ab578f1cd8.rmeta","--extern","sha2=/Users/julia/ruhackathon/target/rls/debug/deps/libsha2-15648f0a97f1b29b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/julia/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/julia/ruhackathon/target/rls/debug/deps/libk256-52eac686e179d2bc.rmeta"},"prelude":{"crate_id":{"name":"k256","disambiguator":[15708109366860734785,12353137243833286860]},"crate_root":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src","external_crates":[{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[17161976177339802527,9637120080719870273]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[12784072134307519025,4657485898025748013]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[8860544973196061204,9932137894390183628]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":4,"id":{"name":"elliptic_curve","disambiguator":[13807147705136224232,16251544911896674658]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":5,"id":{"name":"subtle","disambiguator":[4522810956575255828,4910096643372407593]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":6,"id":{"name":"std","disambiguator":[14497711731351875891,7574154950596153320]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":7,"id":{"name":"alloc","disambiguator":[15484098214765895148,4360652648143560453]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":8,"id":{"name":"libc","disambiguator":[13802683045354889200,17279120461159080731]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":9,"id":{"name":"unwind","disambiguator":[13733846401634403672,16568137600355934567]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":10,"id":{"name":"cfg_if","disambiguator":[5926527291982439463,7261863668131194074]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":11,"id":{"name":"hashbrown","disambiguator":[2147386378482378397,1448349958257004752]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8504510625746843556,11549570195915831773]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":13,"id":{"name":"rustc_demangle","disambiguator":[1145582961014725186,16562354883654090131]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":14,"id":{"name":"std_detect","disambiguator":[6582153069738696943,14519107576634371424]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":15,"id":{"name":"addr2line","disambiguator":[15498041504304623936,9266600846380482125]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":16,"id":{"name":"gimli","disambiguator":[12608136573466536856,1503974727608604885]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":17,"id":{"name":"object","disambiguator":[16755883997827362908,2889333423780235391]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[3009561993154964965,13259943199418826037]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":19,"id":{"name":"generic_array","disambiguator":[7429325815917903621,4953779473884636296]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":20,"id":{"name":"typenum","disambiguator":[14509014512433398701,5747145694384200891]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":21,"id":{"name":"ff","disambiguator":[2105630046445953287,12085405015627007269]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":22,"id":{"name":"bitvec","disambiguator":[14851539261954789943,15604764097012981211]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":23,"id":{"name":"funty","disambiguator":[11994280634423852699,10648987090702083785]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":24,"id":{"name":"radium","disambiguator":[16917809150809643676,3878275019157653836]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":25,"id":{"name":"tap","disambiguator":[12632791922117082934,5412440633162020162]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":26,"id":{"name":"wyz","disambiguator":[14138619879403673573,1821794984299287805]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":27,"id":{"name":"rand_core","disambiguator":[11887644693504216196,7259550397967195635]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":28,"id":{"name":"getrandom","disambiguator":[17488875655129187426,16701060034023178929]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","num":29,"id":{"name":"cfg_if","disambiguator":[6669231008839721604,5451692867657612098]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":30,"id":{"name":"libc","disambiguator":[12590972830871631501,16526445224950325690]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":31,"id":{"name":"zeroize","disambiguator":[5684867084009683894,5518746224732812858]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":32,"id":{"name":"zeroize_derive","disambiguator":[16940183091903201555,668267786870049164]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","num":33,"id":{"name":"group","disambiguator":[2763280832928448759,993267773673036501]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","num":34,"id":{"name":"ecdsa","disambiguator":[7338668411228836467,8795945554356095763]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","num":35,"id":{"name":"der","disambiguator":[5677014531735393550,15879784774022477508]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","num":36,"id":{"name":"signature","disambiguator":[7905351374078192889,2230238185018547430]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","num":37,"id":{"name":"digest","disambiguator":[3927988467184982881,5624109746068441640]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","num":38,"id":{"name":"hmac","disambiguator":[18180923617920215345,1055204598753345613]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","num":39,"id":{"name":"crypto_mac","disambiguator":[12762573339546326474,13916984158313580375]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","num":40,"id":{"name":"sha2","disambiguator":[3603047401422155337,15033287120978326373]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","num":41,"id":{"name":"block_buffer","disambiguator":[11845008171940352686,11154490960423585393]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","num":42,"id":{"name":"opaque_debug","disambiguator":[6869146354205411725,14578945065621010849]}},{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","num":43,"id":{"name":"cpufeatures","disambiguator":[1921380856350325828,8573609445825541645]}}],"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":0,"byte_end":5896,"line_start":1,"line_end":186,"column_start":1,"column_end":62}},"imports":[{"kind":"Use","ref_id":{"krate":36,"index":0},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":84697,"byte_end":84706,"line_start":76,"line_end":76,"column_start":21,"column_end":30},"alias_span":null,"name":"signature","value":"","parent":{"krate":0,"index":647}},{"kind":"Use","ref_id":{"krate":36,"index":128},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":84715,"byte_end":84720,"line_start":76,"line_end":76,"column_start":39,"column_end":44},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":647}},{"kind":"Use","ref_id":{"krate":37,"index":0},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":84782,"byte_end":84788,"line_start":79,"line_end":79,"column_start":32,"column_end":38},"alias_span":null,"name":"digest","value":"","parent":{"krate":0,"index":647}},{"kind":"Use","ref_id":{"krate":0,"index":853},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":84838,"byte_end":84848,"line_start":82,"line_end":82,"column_start":22,"column_end":32},"alias_span":null,"name":"SigningKey","value":"","parent":{"krate":0,"index":647}},{"kind":"Use","ref_id":{"krate":0,"index":1419},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":84858,"byte_end":84870,"line_start":82,"line_end":82,"column_start":42,"column_end":54},"alias_span":null,"name":"VerifyingKey","value":"","parent":{"krate":0,"index":647}},{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":2410,"byte_end":2424,"line_start":67,"line_end":67,"column_start":9,"column_end":23},"alias_span":null,"name":"elliptic_curve","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1071},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":2492,"byte_end":2503,"line_start":71,"line_end":71,"column_start":13,"column_end":24},"alias_span":null,"name":"AffinePoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1227},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":2521,"byte_end":2536,"line_start":72,"line_end":72,"column_start":17,"column_end":32},"alias_span":null,"name":"ProjectivePoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":497},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":2551,"byte_end":2564,"line_start":73,"line_end":73,"column_start":14,"column_end":27},"alias_span":null,"name":"NonZeroScalar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1384},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":2566,"byte_end":2572,"line_start":73,"line_end":73,"column_start":29,"column_end":35},"alias_span":null,"name":"Scalar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":498},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":2574,"byte_end":2584,"line_start":73,"line_end":73,"column_start":37,"column_end":47},"alias_span":null,"name":"ScalarBits","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":0,"byte_end":5896,"line_start":1,"line_end":186,"column_start":1,"column_end":62},"name":"","qualname":"::","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":635},{"krate":0,"index":647},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1039},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1046},{"krate":0,"index":1049},{"krate":0,"index":1052},{"krate":0,"index":1432},{"krate":0,"index":1434},{"krate":0,"index":1436},{"krate":0,"index":1438},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1446},{"krate":0,"index":1448},{"krate":0,"index":1055},{"krate":0,"index":1057},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1064},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070}],"decl_id":null,"docs":" Pure Rust implementation of the [secp256k1] (K-256) elliptic curve,\n including support for the\n [Elliptic Curve Digital Signature Algorithm (ECDSA)][ECDSA],\n [Elliptic Curve Diffie-Hellman (ECDH)][ECDH], and general purpose\n elliptic curve/field arithmetic which can be used to implement\n protocols based on group operations.","sig":null,"attributes":[{"value":"/ Pure Rust implementation of the [secp256k1] (K-256) elliptic curve,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":0,"byte_end":71,"line_start":1,"line_end":1,"column_start":1,"column_end":72}},{"value":"/ including support for the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":72,"byte_end":101,"line_start":2,"line_end":2,"column_start":1,"column_end":30}},{"value":"/ [Elliptic Curve Digital Signature Algorithm (ECDSA)][ECDSA],","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":102,"byte_end":166,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ [Elliptic Curve Diffie-Hellman (ECDH)][ECDH], and general purpose","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":167,"byte_end":236,"line_start":4,"line_end":4,"column_start":1,"column_end":70}},{"value":"/ elliptic curve/field arithmetic which can be used to implement","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":237,"byte_end":303,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/ protocols based on group operations.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":304,"byte_end":344,"line_start":6,"line_end":6,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":345,"byte_end":348,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## About secp256k1 (K-256)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":349,"byte_end":379,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":380,"byte_end":383,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ secp256k1 is a Koblitz curve commonly used in cryptocurrency applications.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":384,"byte_end":462,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ The \"K-256\" name follows NIST notation where P = prime fields,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":463,"byte_end":529,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/ B = binary fields, and K = Koblitz curves.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":530,"byte_end":576,"line_start":12,"line_end":12,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":577,"byte_end":580,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The curve is specified as `secp256k1` by Certicom's SECG in","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":581,"byte_end":644,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ \"SEC 2: Recommended Elliptic Curve Domain Parameters\":","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":645,"byte_end":703,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":704,"byte_end":707,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ <https://www.secg.org/sec2-v2.pdf>","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":708,"byte_end":746,"line_start":17,"line_end":17,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":747,"byte_end":750,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ## ⚠️ Security Warning","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":751,"byte_end":781,"line_start":19,"line_end":19,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":782,"byte_end":785,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The elliptic curve arithmetic contained in this crate has never been","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":786,"byte_end":858,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ independently audited!","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":859,"byte_end":885,"line_start":22,"line_end":22,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":886,"byte_end":889,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This crate has been designed with the goal of ensuring that secret-dependent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":890,"byte_end":970,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ operations are performed in constant time (using the `subtle` crate and","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":971,"byte_end":1046,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ constant-time formulas). However, it has not been thoroughly assessed to ensure","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":1047,"byte_end":1130,"line_start":26,"line_end":26,"column_start":1,"column_end":84}},{"value":"/ that generated assembly is constant time on common CPU architectures.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":1131,"byte_end":1204,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":1205,"byte_end":1208,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ USE AT YOUR OWN RISK!","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":1209,"byte_end":1234,"line_start":29,"line_end":29,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":1235,"byte_end":1238,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ## Minimum Supported Rust Version","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":1239,"byte_end":1276,"line_start":31,"line_end":31,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":1277,"byte_end":1280,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Rust **1.47** or higher.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":1281,"byte_end":1309,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":1310,"byte_end":1313,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Minimum supported Rust version may be changed in the future, but it will be","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":1314,"byte_end":1393,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ accompanied with a minor version bump.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":1394,"byte_end":1436,"line_start":36,"line_end":36,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":1437,"byte_end":1440,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [secp256k1]: https://en.bitcoin.it/wiki/Secp256k1","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":1441,"byte_end":1494,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ [ECDSA]: https://en.wikipedia.org/wiki/Elliptic_Curve_Digital_Signature_Algorithm","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":1495,"byte_end":1580,"line_start":39,"line_end":39,"column_start":1,"column_end":86}},{"value":"/ [ECDH]: https://en.wikipedia.org/wiki/Elliptic-curve_Diffie%E2%80%93Hellman","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":1581,"byte_end":1660,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"no_std","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":1662,"byte_end":1672,"line_start":42,"line_end":42,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":1953,"byte_end":1976,"line_start":49,"line_end":49,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, rust_2018_idioms, unused_qualifications)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":1977,"byte_end":2040,"line_start":50,"line_end":50,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1071},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":7717,"byte_end":7728,"line_start":19,"line_end":19,"column_start":12,"column_end":23},"name":"AffinePoint","qualname":"::arithmetic::affine::AffinePoint","value":"AffinePoint {  }","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074}],"decl_id":null,"docs":" A point on the secp256k1 curve in affine coordinates.\n","sig":null,"attributes":[{"value":"/ A point on the secp256k1 curve in affine coordinates.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":7564,"byte_end":7621,"line_start":16,"line_end":16,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":7906,"byte_end":7915,"line_start":27,"line_end":27,"column_start":12,"column_end":21},"name":"generator","qualname":"<AffinePoint>::generator","value":"pub fn generator() -> AffinePoint","parent":null,"children":[],"decl_id":null,"docs":" Returns the base point of SECP256k1.\n","sig":null,"attributes":[{"value":"/ Returns the base point of SECP256k1.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":7854,"byte_end":7894,"line_start":26,"line_end":26,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":8972,"byte_end":8980,"line_start":49,"line_end":49,"column_start":12,"column_end":20},"name":"identity","qualname":"<AffinePoint>::identity","value":"pub fn identity() -> AffinePoint","parent":null,"children":[],"decl_id":null,"docs":" Returns the identity of the group: the point at infinity.\n","sig":null,"attributes":[{"value":"/ Returns the identity of the group: the point at infinity.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":8899,"byte_end":8960,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":9198,"byte_end":9209,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"is_identity","qualname":"<AffinePoint>::is_identity","value":"pub fn is_identity(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Is this point the identity point?\n","sig":null,"attributes":[{"value":"/ Is this point the identity point?","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":9149,"byte_end":9186,"line_start":57,"line_end":57,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1218},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":17016,"byte_end":17028,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"FieldElement","qualname":"::arithmetic::field::FieldElement","value":"","parent":null,"children":[],"decl_id":null,"docs":" An element in the finite field used for curve coordinates.\n","sig":null,"attributes":[{"value":"/ An element in the finite field used for curve coordinates.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":16912,"byte_end":16974,"line_start":42,"line_end":42,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":17120,"byte_end":17124,"line_start":48,"line_end":48,"column_start":18,"column_end":22},"name":"zero","qualname":"<FieldElement>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the zero element.\n","sig":null,"attributes":[{"value":"/ Returns the zero element.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":17073,"byte_end":17102,"line_start":47,"line_end":47,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":17245,"byte_end":17248,"line_start":53,"line_end":53,"column_start":18,"column_end":21},"name":"one","qualname":"<FieldElement>::one","value":"pub const fn one() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplicative identity.\n","sig":null,"attributes":[{"value":"/ Returns the multiplicative identity.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":17187,"byte_end":17227,"line_start":52,"line_end":52,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":17475,"byte_end":17482,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<FieldElement>::is_zero","value":"pub fn is_zero(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Determine if this `FieldElement10x26` is zero.","sig":null,"attributes":[{"value":"/ Determine if this `FieldElement10x26` is zero.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":17310,"byte_end":17360,"line_start":57,"line_end":57,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":17365,"byte_end":17368,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":17373,"byte_end":17386,"line_start":59,"line_end":59,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":17391,"byte_end":17394,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ If zero, return `Choice(1)`.  Otherwise, return `Choice(0)`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":17399,"byte_end":17463,"line_start":61,"line_end":61,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":17738,"byte_end":17744,"line_start":71,"line_end":71,"column_start":12,"column_end":18},"name":"is_odd","qualname":"<FieldElement>::is_odd","value":"pub fn is_odd(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Determine if this `FieldElement10x26` is odd in the SEC1 sense: `self mod 2 == 1`.","sig":null,"attributes":[{"value":"/ Determine if this `FieldElement10x26` is odd in the SEC1 sense: `self mod 2 == 1`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":17538,"byte_end":17624,"line_start":66,"line_end":66,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":17629,"byte_end":17632,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":17637,"byte_end":17650,"line_start":68,"line_end":68,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":17655,"byte_end":17658,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ If odd, return `Choice(1)`.  Otherwise, return `Choice(0)`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":17663,"byte_end":17726,"line_start":70,"line_end":70,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":18288,"byte_end":18298,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<FieldElement>::from_bytes","value":"pub fn from_bytes(&FieldBytes) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to parse the given byte array as an SEC1-encoded field element.","sig":null,"attributes":[{"value":"/ Attempts to parse the given byte array as an SEC1-encoded field element.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":18086,"byte_end":18162,"line_start":81,"line_end":81,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":18167,"byte_end":18170,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Returns None if the byte array does not contain a big-endian integer in the range","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":18175,"byte_end":18260,"line_start":83,"line_end":83,"column_start":5,"column_end":90}},{"value":"/ [0, p).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":18265,"byte_end":18276,"line_start":84,"line_end":84,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":18468,"byte_end":18476,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<FieldElement>::to_bytes","value":"pub fn to_bytes(&Self) -> FieldBytes","parent":null,"children":[],"decl_id":null,"docs":" Returns the SEC1 encoding of this field element.\n","sig":null,"attributes":[{"value":"/ Returns the SEC1 encoding of this field element.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":18404,"byte_end":18456,"line_start":89,"line_end":89,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":18715,"byte_end":18721,"line_start":96,"line_end":96,"column_start":12,"column_end":18},"name":"negate","qualname":"<FieldElement>::negate","value":"pub fn negate(&Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns -self, treating it as a value of given magnitude.\n The provided magnitude must be equal or greater than the actual magnitude of `self`.\n","sig":null,"attributes":[{"value":"/ Returns -self, treating it as a value of given magnitude.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":18549,"byte_end":18610,"line_start":94,"line_end":94,"column_start":5,"column_end":66}},{"value":"/ The provided magnitude must be equal or greater than the actual magnitude of `self`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":18615,"byte_end":18703,"line_start":95,"line_end":95,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":18920,"byte_end":18929,"line_start":102,"line_end":102,"column_start":12,"column_end":21},"name":"normalize","qualname":"<FieldElement>::normalize","value":"pub fn normalize(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Fully normalizes the field element.\n Brings the magnitude to 1 and modulo reduces the value.\n","sig":null,"attributes":[{"value":"/ Fully normalizes the field element.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":18805,"byte_end":18844,"line_start":100,"line_end":100,"column_start":5,"column_end":44}},{"value":"/ Brings the magnitude to 1 and modulo reduces the value.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":18849,"byte_end":18908,"line_start":101,"line_end":101,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":19140,"byte_end":19154,"line_start":108,"line_end":108,"column_start":12,"column_end":26},"name":"normalize_weak","qualname":"<FieldElement>::normalize_weak","value":"pub fn normalize_weak(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Weakly normalizes the field element.\n Brings the magnitude to 1, but does not guarantee the value to be less than the modulus.\n","sig":null,"attributes":[{"value":"/ Weakly normalizes the field element.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":18991,"byte_end":19031,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/ Brings the magnitude to 1, but does not guarantee the value to be less than the modulus.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":19036,"byte_end":19128,"line_start":107,"line_end":107,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":19292,"byte_end":19310,"line_start":113,"line_end":113,"column_start":12,"column_end":30},"name":"normalizes_to_zero","qualname":"<FieldElement>::normalizes_to_zero","value":"pub fn normalizes_to_zero(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Checks if the field element becomes zero if normalized.\n","sig":null,"attributes":[{"value":"/ Checks if the field element becomes zero if normalized.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":19221,"byte_end":19280,"line_start":112,"line_end":112,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":19481,"byte_end":19491,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"mul_single","qualname":"<FieldElement>::mul_single","value":"pub fn mul_single(&Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiplies by a single-limb integer.\n Multiplies the magnitude by the same value.\n","sig":null,"attributes":[{"value":"/ Multiplies by a single-limb integer.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":19377,"byte_end":19417,"line_start":117,"line_end":117,"column_start":5,"column_end":45}},{"value":"/ Multiplies the magnitude by the same value.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":19422,"byte_end":19469,"line_start":118,"line_end":118,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":19629,"byte_end":19635,"line_start":125,"line_end":125,"column_start":12,"column_end":18},"name":"double","qualname":"<FieldElement>::double","value":"pub fn double(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns 2*self.\n Doubles the magnitude.\n","sig":null,"attributes":[{"value":"/ Returns 2*self.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":19567,"byte_end":19586,"line_start":123,"line_end":123,"column_start":5,"column_end":24}},{"value":"/ Doubles the magnitude.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":19591,"byte_end":19617,"line_start":124,"line_end":124,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":19862,"byte_end":19865,"line_start":132,"line_end":132,"column_start":12,"column_end":15},"name":"mul","qualname":"<FieldElement>::mul","value":"pub fn mul(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns self * rhs mod p\n Brings the magnitude to 1 (but doesn't normalize the result).\n The magnitudes of arguments should be <= 8.\n","sig":null,"attributes":[{"value":"/ Returns self * rhs mod p","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":19700,"byte_end":19728,"line_start":129,"line_end":129,"column_start":5,"column_end":33}},{"value":"/ Brings the magnitude to 1 (but doesn't normalize the result).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":19733,"byte_end":19798,"line_start":130,"line_end":130,"column_start":5,"column_end":70}},{"value":"/ The magnitudes of arguments should be <= 8.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":19803,"byte_end":19850,"line_start":131,"line_end":131,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":20098,"byte_end":20104,"line_start":139,"line_end":139,"column_start":12,"column_end":18},"name":"square","qualname":"<FieldElement>::square","value":"pub fn square(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns self * self\n Brings the magnitude to 1 (but doesn't normalize the result).\n The magnitudes of arguments should be <= 8.\n","sig":null,"attributes":[{"value":"/ Returns self * self","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":19941,"byte_end":19964,"line_start":136,"line_end":136,"column_start":5,"column_end":28}},{"value":"/ Brings the magnitude to 1 (but doesn't normalize the result).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":19969,"byte_end":20034,"line_start":137,"line_end":137,"column_start":5,"column_end":70}},{"value":"/ The magnitudes of arguments should be <= 8.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":20039,"byte_end":20086,"line_start":138,"line_end":138,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":20494,"byte_end":20500,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"name":"invert","qualname":"<FieldElement>::invert","value":"pub fn invert(&Self) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplicative inverse of self, if self is non-zero.\n The result has magnitude 1, but is not normalized.\n","sig":null,"attributes":[{"value":"/ Returns the multiplicative inverse of self, if self is non-zero.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":20355,"byte_end":20423,"line_start":152,"line_end":152,"column_start":5,"column_end":73}},{"value":"/ The result has magnitude 1, but is not normalized.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":20428,"byte_end":20482,"line_start":153,"line_end":153,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":21734,"byte_end":21738,"line_start":187,"line_end":187,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<FieldElement>::sqrt","value":"pub fn sqrt(&Self) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns the square root of self mod p, or `None` if no square root exists.\n The result has magnitude 1, but is not normalized.\n","sig":null,"attributes":[{"value":"/ Returns the square root of self mod p, or `None` if no square root exists.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":21585,"byte_end":21663,"line_start":185,"line_end":185,"column_start":5,"column_end":83}},{"value":"/ The result has magnitude 1, but is not normalized.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":21668,"byte_end":21722,"line_start":186,"line_end":186,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1227},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":42527,"byte_end":42542,"line_start":33,"line_end":33,"column_start":12,"column_end":27},"name":"ProjectivePoint","qualname":"::arithmetic::projective::ProjectivePoint","value":"ProjectivePoint {  }","parent":null,"children":[{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230}],"decl_id":null,"docs":" A point on the secp256k1 curve in projective coordinates.\n","sig":null,"attributes":[{"value":"/ A point on the secp256k1 curve in projective coordinates.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":42370,"byte_end":42431,"line_start":30,"line_end":30,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":43941,"byte_end":43949,"line_start":83,"line_end":83,"column_start":18,"column_end":26},"name":"identity","qualname":"<ProjectivePoint>::identity","value":"pub const fn identity() -> ProjectivePoint","parent":null,"children":[],"decl_id":null,"docs":" Returns the additive identity of SECP256k1, also known as the \"neutral element\" or\n \"point at infinity\".\n","sig":null,"attributes":[{"value":"/ Returns the additive identity of SECP256k1, also known as the \"neutral element\" or","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":43808,"byte_end":43894,"line_start":81,"line_end":81,"column_start":5,"column_end":91}},{"value":"/ \"point at infinity\".","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":43899,"byte_end":43923,"line_start":82,"line_end":82,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":44182,"byte_end":44191,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"generator","qualname":"<ProjectivePoint>::generator","value":"pub fn generator() -> ProjectivePoint","parent":null,"children":[],"decl_id":null,"docs":" Returns the base point of SECP256k1.\n","sig":null,"attributes":[{"value":"/ Returns the base point of SECP256k1.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":44130,"byte_end":44170,"line_start":91,"line_end":91,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":44363,"byte_end":44372,"line_start":97,"line_end":97,"column_start":12,"column_end":21},"name":"to_affine","qualname":"<ProjectivePoint>::to_affine","value":"pub fn to_affine(&Self) -> AffinePoint","parent":null,"children":[],"decl_id":null,"docs":" Returns the affine representation of this point, or `None` if it is the identity.\n","sig":null,"attributes":[{"value":"/ Returns the affine representation of this point, or `None` if it is the identity.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":44266,"byte_end":44351,"line_start":96,"line_end":96,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":48043,"byte_end":48049,"line_start":200,"line_end":200,"column_start":12,"column_end":18},"name":"double","qualname":"<ProjectivePoint>::double","value":"pub fn double(&Self) -> ProjectivePoint","parent":null,"children":[],"decl_id":null,"docs":" Doubles this point.\n","sig":null,"attributes":[{"value":"/ Doubles this point.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":47994,"byte_end":48017,"line_start":198,"line_end":198,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":48022,"byte_end":48031,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":49456,"byte_end":49468,"line_start":243,"line_end":243,"column_start":12,"column_end":24},"name":"endomorphism","qualname":"<ProjectivePoint>::endomorphism","value":"pub fn endomorphism(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates SECP256k1 endomorphism: `self * lambda`.\n","sig":null,"attributes":[{"value":"/ Calculates SECP256k1 endomorphism: `self * lambda`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":49389,"byte_end":49444,"line_start":242,"line_end":242,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1360},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11472403,"byte_end":11472413,"line_start":139,"line_end":139,"column_start":12,"column_end":22},"name":"Scalar4x64","qualname":"::arithmetic::scalar::scalar_4x64::Scalar4x64","value":"","parent":null,"children":[],"decl_id":null,"docs":" A scalar with arithmetic modulo curve order, represented as 4 64-bit limbs (little-endian).\n","sig":null,"attributes":[{"value":"/ A scalar with arithmetic modulo curve order, represented as 4 64-bit limbs (little-endian).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11472203,"byte_end":11472298,"line_start":136,"line_end":136,"column_start":1,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":1309},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11472494,"byte_end":11472498,"line_start":143,"line_end":143,"column_start":18,"column_end":22},"name":"zero","qualname":"<Scalar4x64>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the zero scalar.\n","sig":null,"attributes":[{"value":"/ Returns the zero scalar.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11472448,"byte_end":11472476,"line_start":142,"line_end":142,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1310},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11472607,"byte_end":11472610,"line_start":148,"line_end":148,"column_start":18,"column_end":21},"name":"one","qualname":"<Scalar4x64>::one","value":"pub const fn one() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplicative identity.\n","sig":null,"attributes":[{"value":"/ Returns the multiplicative identity.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11472549,"byte_end":11472589,"line_start":147,"line_end":147,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1311},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11472750,"byte_end":11472765,"line_start":153,"line_end":153,"column_start":12,"column_end":27},"name":"truncate_to_u32","qualname":"<Scalar4x64>::truncate_to_u32","value":"pub fn truncate_to_u32(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Truncates the scalar to a `u32` value. All the higher bits are discarded.\n","sig":null,"attributes":[{"value":"/ Truncates the scalar to a `u32` value. All the higher bits are discarded.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11472661,"byte_end":11472738,"line_start":152,"line_end":152,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11474470,"byte_end":11474480,"line_start":198,"line_end":198,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<Scalar4x64>::from_bytes","value":"pub fn from_bytes(&[u8; ]) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to parse the given byte array as an SEC1-encoded scalar.","sig":null,"attributes":[{"value":"/ Attempts to parse the given byte array as an SEC1-encoded scalar.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11474269,"byte_end":11474338,"line_start":194,"line_end":194,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11474343,"byte_end":11474346,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Returns None if the byte array does not contain a big-endian integer in the range","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11474351,"byte_end":11474436,"line_start":196,"line_end":196,"column_start":5,"column_end":90}},{"value":"/ [0, modulus).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11474441,"byte_end":11474458,"line_start":197,"line_end":197,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11475226,"byte_end":11475244,"line_start":214,"line_end":214,"column_start":12,"column_end":30},"name":"from_bytes_reduced","qualname":"<Scalar4x64>::from_bytes_reduced","value":"pub fn from_bytes_reduced(&[u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Parses the given byte array as a scalar.","sig":null,"attributes":[{"value":"/ Parses the given byte array as a scalar.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11475084,"byte_end":11475128,"line_start":211,"line_end":211,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11475133,"byte_end":11475136,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Subtracts the modulus when the byte array is larger than the modulus.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11475141,"byte_end":11475214,"line_start":213,"line_end":213,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11475908,"byte_end":11475916,"line_start":228,"line_end":228,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<Scalar4x64>::to_bytes","value":"pub fn to_bytes(&Self) -> FieldBytes","parent":null,"children":[],"decl_id":null,"docs":" Returns the SEC1 encoding of this scalar.\n","sig":null,"attributes":[{"value":"/ Returns the SEC1 encoding of this scalar.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11475851,"byte_end":11475896,"line_start":227,"line_end":227,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1319},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11476319,"byte_end":11476326,"line_start":238,"line_end":238,"column_start":12,"column_end":19},"name":"is_high","qualname":"<Scalar4x64>::is_high","value":"pub fn is_high(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Is this scalar greater than or equal to n / 2?\n","sig":null,"attributes":[{"value":"/ Is this scalar greater than or equal to n / 2?","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11476257,"byte_end":11476307,"line_start":237,"line_end":237,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11476501,"byte_end":11476508,"line_start":244,"line_end":244,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Scalar4x64>::is_zero","value":"pub fn is_zero(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Is this scalar equal to 0?\n","sig":null,"attributes":[{"value":"/ Is this scalar equal to 0?","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11476459,"byte_end":11476489,"line_start":243,"line_end":243,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11476697,"byte_end":11476703,"line_start":249,"line_end":249,"column_start":12,"column_end":18},"name":"is_odd","qualname":"<Scalar4x64>::is_odd","value":"pub fn is_odd(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" If odd, return `Choice(1)`.  Otherwise, return `Choice(0)`.\n","sig":null,"attributes":[{"value":"/ If odd, return `Choice(1)`.  Otherwise, return `Choice(0)`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11476622,"byte_end":11476685,"line_start":248,"line_end":248,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11476806,"byte_end":11476812,"line_start":254,"line_end":254,"column_start":12,"column_end":18},"name":"negate","qualname":"<Scalar4x64>::negate","value":"pub fn negate(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Negates the scalar.\n","sig":null,"attributes":[{"value":"/ Negates the scalar.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11476771,"byte_end":11476794,"line_start":253,"line_end":253,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11477005,"byte_end":11477008,"line_start":260,"line_end":260,"column_start":12,"column_end":15},"name":"add","qualname":"<Scalar4x64>::add","value":"pub fn add(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sums two scalars.\n","sig":null,"attributes":[{"value":"/ Sums two scalars.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11476972,"byte_end":11476993,"line_start":259,"line_end":259,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11477323,"byte_end":11477326,"line_start":267,"line_end":267,"column_start":12,"column_end":15},"name":"sub","qualname":"<Scalar4x64>::sub","value":"pub fn sub(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Subtracts one scalar from the other.\n","sig":null,"attributes":[{"value":"/ Subtracts one scalar from the other.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11477271,"byte_end":11477311,"line_start":266,"line_end":266,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11479452,"byte_end":11479455,"line_start":312,"line_end":312,"column_start":12,"column_end":15},"name":"mul","qualname":"<Scalar4x64>::mul","value":"pub fn mul(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiplies two scalars.\n","sig":null,"attributes":[{"value":"/ Multiplies two scalars.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11479413,"byte_end":11479440,"line_start":311,"line_end":311,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1329},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11480100,"byte_end":11480106,"line_start":327,"line_end":327,"column_start":12,"column_end":18},"name":"rshift","qualname":"<Scalar4x64>::rshift","value":"pub fn rshift(&Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Right shifts a scalar by given number of bits.\n Constant time in the scalar argument, but not in the shift argument.\n","sig":null,"attributes":[{"value":"/ Right shifts a scalar by given number of bits.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11479961,"byte_end":11480011,"line_start":325,"line_end":325,"column_start":5,"column_end":55}},{"value":"/ Constant time in the scalar argument, but not in the shift argument.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11480016,"byte_end":11480088,"line_start":326,"line_end":326,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11480968,"byte_end":11480987,"line_start":357,"line_end":357,"column_start":12,"column_end":31},"name":"conditional_add_bit","qualname":"<Scalar4x64>::conditional_add_bit","value":"pub fn conditional_add_bit(&Self, usize, Choice) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11481541,"byte_end":11481554,"line_start":373,"line_end":373,"column_start":12,"column_end":25},"name":"mul_shift_var","qualname":"<Scalar4x64>::mul_shift_var","value":"pub fn mul_shift_var(&Self, &Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":497},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":60598,"byte_end":60611,"line_start":38,"line_end":38,"column_start":10,"column_end":23},"name":"NonZeroScalar","qualname":"::arithmetic::scalar::NonZeroScalar","value":"elliptic_curve::NonZeroScalar<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" Non-zero scalar value.\n","sig":null,"attributes":[{"value":"/ Non-zero scalar value.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":60562,"byte_end":60588,"line_start":37,"line_end":37,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":498},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":60714,"byte_end":60724,"line_start":41,"line_end":41,"column_start":10,"column_end":20},"name":"ScalarBits","qualname":"::arithmetic::scalar::ScalarBits","value":"elliptic_curve::ScalarBits<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" secp256k1 field element serialized as bits.\n","sig":null,"attributes":[{"value":"/ secp256k1 field element serialized as bits.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":60657,"byte_end":60704,"line_start":40,"line_end":40,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1384},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":60926,"byte_end":60932,"line_start":46,"line_end":46,"column_start":12,"column_end":18},"name":"Scalar","qualname":"::arithmetic::scalar::Scalar","value":"","parent":null,"children":[],"decl_id":null,"docs":" An element in the finite field modulo curve order.\n","sig":null,"attributes":[{"value":"/ An element in the finite field modulo curve order.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":60767,"byte_end":60821,"line_start":43,"line_end":43,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":63797,"byte_end":63801,"line_start":161,"line_end":161,"column_start":18,"column_end":22},"name":"zero","qualname":"<Scalar>::zero","value":"pub const fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the zero scalar.\n","sig":null,"attributes":[{"value":"/ Returns the zero scalar.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":63751,"byte_end":63779,"line_start":160,"line_end":160,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":63916,"byte_end":63919,"line_start":166,"line_end":166,"column_start":18,"column_end":21},"name":"one","qualname":"<Scalar>::one","value":"pub const fn one() -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplicative identity.\n","sig":null,"attributes":[{"value":"/ Returns the multiplicative identity.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":63858,"byte_end":63898,"line_start":165,"line_end":165,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":64022,"byte_end":64029,"line_start":171,"line_end":171,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Scalar>::is_zero","value":"pub fn is_zero(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Checks if the scalar is zero.\n","sig":null,"attributes":[{"value":"/ Checks if the scalar is zero.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":63977,"byte_end":64010,"line_start":170,"line_end":170,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":64172,"byte_end":64187,"line_start":176,"line_end":176,"column_start":12,"column_end":27},"name":"truncate_to_u32","qualname":"<Scalar>::truncate_to_u32","value":"pub fn truncate_to_u32(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the scalar truncated to a 32-bit unsigned integer.\n","sig":null,"attributes":[{"value":"/ Returns the value of the scalar truncated to a 32-bit unsigned integer.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":64085,"byte_end":64160,"line_start":175,"line_end":175,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":64650,"byte_end":64668,"line_start":189,"line_end":189,"column_start":12,"column_end":30},"name":"from_bytes_reduced","qualname":"<Scalar>::from_bytes_reduced","value":"pub fn from_bytes_reduced(&FieldBytes) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Parses the given byte array as a scalar.","sig":null,"attributes":[{"value":"/ Parses the given byte array as a scalar.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":64508,"byte_end":64552,"line_start":186,"line_end":186,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":64557,"byte_end":64560,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Subtracts the modulus when the byte array is larger than the modulus.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":64565,"byte_end":64638,"line_start":188,"line_end":188,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":64828,"byte_end":64836,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<Scalar>::to_bytes","value":"pub fn to_bytes(&Self) -> FieldBytes","parent":null,"children":[],"decl_id":null,"docs":" Returns the SEC1 encoding of this scalar.\n","sig":null,"attributes":[{"value":"/ Returns the SEC1 encoding of this scalar.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":64771,"byte_end":64816,"line_start":193,"line_end":193,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":64959,"byte_end":64966,"line_start":199,"line_end":199,"column_start":12,"column_end":19},"name":"is_high","qualname":"<Scalar>::is_high","value":"pub fn is_high(&Self) -> Choice","parent":null,"children":[],"decl_id":null,"docs":" Is this scalar greater than or equal to n / 2?\n","sig":null,"attributes":[{"value":"/ Is this scalar greater than or equal to n / 2?","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":64897,"byte_end":64947,"line_start":198,"line_end":198,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":65057,"byte_end":65063,"line_start":204,"line_end":204,"column_start":12,"column_end":18},"name":"negate","qualname":"<Scalar>::negate","value":"pub fn negate(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Negates the scalar.\n","sig":null,"attributes":[{"value":"/ Negates the scalar.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":65022,"byte_end":65045,"line_start":203,"line_end":203,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":65161,"byte_end":65164,"line_start":209,"line_end":209,"column_start":12,"column_end":15},"name":"add","qualname":"<Scalar>::add","value":"pub fn add(&Self, &Scalar) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Modulo adds two scalars\n","sig":null,"attributes":[{"value":"/ Modulo adds two scalars","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":65122,"byte_end":65149,"line_start":208,"line_end":208,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":65303,"byte_end":65306,"line_start":214,"line_end":214,"column_start":12,"column_end":15},"name":"sub","qualname":"<Scalar>::sub","value":"pub fn sub(&Self, &Scalar) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Modulo subtracts one scalar from the other.\n","sig":null,"attributes":[{"value":"/ Modulo subtracts one scalar from the other.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":65244,"byte_end":65291,"line_start":213,"line_end":213,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":65432,"byte_end":65435,"line_start":219,"line_end":219,"column_start":12,"column_end":15},"name":"mul","qualname":"<Scalar>::mul","value":"pub fn mul(&Self, &Scalar) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Modulo multiplies two scalars.\n","sig":null,"attributes":[{"value":"/ Modulo multiplies two scalars.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":65386,"byte_end":65420,"line_start":218,"line_end":218,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":65557,"byte_end":65563,"line_start":224,"line_end":224,"column_start":12,"column_end":18},"name":"square","qualname":"<Scalar>::square","value":"pub fn square(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Modulo squares the scalar.\n","sig":null,"attributes":[{"value":"/ Modulo squares the scalar.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":65515,"byte_end":65545,"line_start":223,"line_end":223,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":65692,"byte_end":65698,"line_start":229,"line_end":229,"column_start":12,"column_end":18},"name":"rshift","qualname":"<Scalar>::rshift","value":"pub fn rshift(&Self, usize) -> Scalar","parent":null,"children":[],"decl_id":null,"docs":" Right shifts the scalar. Note: not constant-time in `shift`.\n","sig":null,"attributes":[{"value":"/ Right shifts the scalar. Note: not constant-time in `shift`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":65616,"byte_end":65680,"line_start":228,"line_end":228,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":66005,"byte_end":66011,"line_start":243,"line_end":243,"column_start":12,"column_end":18},"name":"invert","qualname":"<Scalar>::invert","value":"pub fn invert(&Self) -> CtOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Inverts the scalar.\n","sig":null,"attributes":[{"value":"/ Inverts the scalar.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":65970,"byte_end":65993,"line_start":242,"line_end":242,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":67958,"byte_end":67973,"line_start":301,"line_end":301,"column_start":12,"column_end":27},"name":"generate_biased","qualname":"<Scalar>::generate_biased","value":"pub fn generate_biased<impl CryptoRng + RngCore: CryptoRng +\n                       RngCore>(impl CryptoRng + RngCore) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a (nearly) uniformly-random scalar, generated in constant time.\n","sig":null,"attributes":[{"value":"/ Returns a (nearly) uniformly-random scalar, generated in constant time.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":67871,"byte_end":67946,"line_start":300,"line_end":300,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":68485,"byte_end":68501,"line_start":311,"line_end":311,"column_start":12,"column_end":28},"name":"generate_vartime","qualname":"<Scalar>::generate_vartime","value":"pub fn generate_vartime<impl RngCore: RngCore>(impl RngCore) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a uniformly-random scalar, generated using rejection sampling.\n","sig":null,"attributes":[{"value":"/ Returns a uniformly-random scalar, generated using rejection sampling.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":68332,"byte_end":68406,"line_start":309,"line_end":309,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":68942,"byte_end":68961,"line_start":324,"line_end":324,"column_start":12,"column_end":31},"name":"conditional_add_bit","qualname":"<Scalar>::conditional_add_bit","value":"pub fn conditional_add_bit(&Self, usize, Choice) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If `flag` evaluates to `true`, adds `(1 << bit)` to `self`.\n","sig":null,"attributes":[{"value":"/ If `flag` evaluates to `true`, adds `(1 << bit)` to `self`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":68867,"byte_end":68930,"line_start":323,"line_end":323,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":69243,"byte_end":69256,"line_start":331,"line_end":331,"column_start":12,"column_end":25},"name":"mul_shift_var","qualname":"<Scalar>::mul_shift_var","value":"pub fn mul_shift_var(&Self, &Scalar, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiplies `self` by `b` (without modulo reduction) divide the result by `2^shift`\n (rounding to the nearest integer).\n Variable time in `shift`.\n","sig":null,"attributes":[{"value":"/ Multiplies `self` by `b` (without modulo reduction) divide the result by `2^shift`","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":69068,"byte_end":69154,"line_start":328,"line_end":328,"column_start":5,"column_end":91}},{"value":"/ (rounding to the nearest integer).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":69159,"byte_end":69197,"line_start":329,"line_end":329,"column_start":5,"column_end":43}},{"value":"/ Variable time in `shift`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":69202,"byte_end":69231,"line_start":330,"line_end":330,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":635},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ecdh","qualname":"::ecdh","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645}],"decl_id":null,"docs":" Elliptic Curve Diffie-Hellman (Ephemeral) Support.","sig":null,"attributes":[{"value":"cfg(feature = \"ecdh\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":2090,"byte_end":2114,"line_start":55,"line_end":55,"column_start":1,"column_end":25}},{"value":"/ Elliptic Curve Diffie-Hellman (Ephemeral) Support.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":79629,"byte_end":79683,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":79684,"byte_end":79687,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains a high-level interface for performing ephemeral","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":79688,"byte_end":79760,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ Diffie-Hellman key exchanges using the secp256k1 elliptic curve.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":79761,"byte_end":79829,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":79830,"byte_end":79833,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":79834,"byte_end":79845,"line_start":6,"line_end":6,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":79846,"byte_end":79849,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This usage example is from the perspective of two participants in the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":79850,"byte_end":79923,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ exchange, nicknamed \"Alice\" and \"Bob\".","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":79924,"byte_end":79966,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":79967,"byte_end":79970,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":79971,"byte_end":79978,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use k256::{EncodedPoint, PublicKey, ecdh::EphemeralSecret};","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":79979,"byte_end":80042,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"/ use rand_core::OsRng; // requires 'getrandom' feature","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":80043,"byte_end":80100,"line_start":13,"line_end":13,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":80101,"byte_end":80104,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ // Alice","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":80105,"byte_end":80117,"line_start":15,"line_end":15,"column_start":1,"column_end":13}},{"value":"/ let alice_secret = EphemeralSecret::random(&mut OsRng);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":80118,"byte_end":80177,"line_start":16,"line_end":16,"column_start":1,"column_end":60}},{"value":"/ let alice_pk_bytes = EncodedPoint::from(alice_secret.public_key());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":80178,"byte_end":80249,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":80250,"byte_end":80253,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ // Bob","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":80254,"byte_end":80264,"line_start":19,"line_end":19,"column_start":1,"column_end":11}},{"value":"/ let bob_secret = EphemeralSecret::random(&mut OsRng);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":80265,"byte_end":80322,"line_start":20,"line_end":20,"column_start":1,"column_end":58}},{"value":"/ let bob_pk_bytes = EncodedPoint::from(bob_secret.public_key());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":80323,"byte_end":80390,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":80391,"byte_end":80394,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ // Alice decodes Bob's serialized public key and computes a shared secret from it","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":80395,"byte_end":80480,"line_start":23,"line_end":23,"column_start":1,"column_end":86}},{"value":"/ let bob_public = PublicKey::from_sec1_bytes(bob_pk_bytes.as_ref())","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":80481,"byte_end":80551,"line_start":24,"line_end":24,"column_start":1,"column_end":71}},{"value":"/     .expect(\"bob's public key is invalid!\"); // In real usage, don't panic, handle this!","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":80552,"byte_end":80644,"line_start":25,"line_end":25,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":80645,"byte_end":80648,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let alice_shared = alice_secret.diffie_hellman(&bob_public);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":80649,"byte_end":80713,"line_start":27,"line_end":27,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":80714,"byte_end":80717,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ // Bob deocdes Alice's serialized public key and computes the same shared secret","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":80718,"byte_end":80802,"line_start":29,"line_end":29,"column_start":1,"column_end":85}},{"value":"/ let alice_public = PublicKey::from_sec1_bytes(alice_pk_bytes.as_ref())","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":80803,"byte_end":80877,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/     .expect(\"alice's public key is invalid!\"); // In real usage, don't panic, handle this!","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":80878,"byte_end":80972,"line_start":31,"line_end":31,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":80973,"byte_end":80976,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let bob_shared = bob_secret.diffie_hellman(&alice_public);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":80977,"byte_end":81039,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":81040,"byte_end":81043,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ // Both participants arrive on the same shared secret","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":81044,"byte_end":81101,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(alice_shared.as_bytes(), bob_shared.as_bytes());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":81102,"byte_end":81165,"line_start":36,"line_end":36,"column_start":1,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":81166,"byte_end":81173,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":643},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":81270,"byte_end":81285,"line_start":42,"line_end":42,"column_start":10,"column_end":25},"name":"EphemeralSecret","qualname":"::ecdh::EphemeralSecret","value":"elliptic_curve::ecdh::EphemeralSecret<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" NIST P-256 Ephemeral Diffie-Hellman Secret.\n","sig":null,"attributes":[{"value":"/ NIST P-256 Ephemeral Diffie-Hellman Secret.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":81213,"byte_end":81260,"line_start":41,"line_end":41,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":644},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":81405,"byte_end":81417,"line_start":45,"line_end":45,"column_start":10,"column_end":22},"name":"SharedSecret","qualname":"::ecdh::SharedSecret","value":"elliptic_curve::ecdh::SharedSecret<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" Shared secret value computed via ECDH key agreement.\n","sig":null,"attributes":[{"value":"/ Shared secret value computed via ECDH key agreement.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":81339,"byte_end":81395,"line_start":44,"line_end":44,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":647},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ecdsa","qualname":"::ecdsa","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":750},{"krate":0,"index":759},{"krate":0,"index":903},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1021},{"krate":0,"index":1024},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1031}],"decl_id":null,"docs":" Elliptic Curve Digital Signature Algorithm (ECDSA).","sig":null,"attributes":[{"value":"cfg(feature = \"ecdsa-core\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":2178,"byte_end":2208,"line_start":59,"line_end":59,"column_start":1,"column_end":31}},{"value":"/ Elliptic Curve Digital Signature Algorithm (ECDSA).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":81607,"byte_end":81662,"line_start":1,"line_end":1,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":81663,"byte_end":81666,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains support for computing and verifying ECDSA signatures.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":81667,"byte_end":81745,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ To use it, you will need to enable one of the two following Cargo features:","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":81746,"byte_end":81825,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":81826,"byte_end":81829,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - `ecdsa-core`: provides only the [`Signature`] type (which represents an","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":81830,"byte_end":81907,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/   ECDSA/secp256k1 signature). Does not require the `arithmetic` feature.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":81908,"byte_end":81984,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/   This is useful for 3rd-party crates which wish to use the `Signature`","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":81985,"byte_end":82060,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/   type for interoperability purposes (particularly in conjunction with the","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":82061,"byte_end":82139,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/   [`signature::Signer`] trait). Example use cases for this include other","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":82140,"byte_end":82216,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/   software implementations of ECDSA/secp256k1 and wrappers for cloud KMS","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":82217,"byte_end":82293,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/   services or hardware devices (HSM or crypto hardware wallet).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":82294,"byte_end":82361,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/ - `ecdsa`: provides `ecdsa-core` features plus the [`SigningKey`] and","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":82362,"byte_end":82435,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/   [`VerifyingKey`] types which natively implement ECDSA/secp256k1 signing and","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":82436,"byte_end":82517,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/   verification.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":82518,"byte_end":82537,"line_start":15,"line_end":15,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":82538,"byte_end":82541,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Additionally, this crate contains support for computing ECDSA signatures","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":82542,"byte_end":82618,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ using either the SHA-256 (standard) or Keccak-256 (Ethereum) digest","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":82619,"byte_end":82690,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ functions, which are gated under the following Cargo features:","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":82691,"byte_end":82757,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":82758,"byte_end":82761,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - `sha256`: compute signatures using NIST's standard SHA-256 digest","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":82762,"byte_end":82833,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/   function. Unless you are computing signatures for Ethereum, this is","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":82834,"byte_end":82907,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   almost certainly what you want.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":82908,"byte_end":82945,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/ - `keccak256`: compute signatures using the Keccak-256 digest function,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":82946,"byte_end":83021,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/   an incompatible variant of the SHA-3 algorithm used exclusively by","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83022,"byte_end":83094,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/   Ethereum.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83095,"byte_end":83110,"line_start":26,"line_end":26,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83111,"byte_end":83114,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Most users of this library who want to sign/verify signatures will want to","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83115,"byte_end":83193,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ enable the `ecdsa` and `sha256` Cargo features.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83194,"byte_end":83245,"line_start":29,"line_end":29,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83246,"byte_end":83249,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ## Ethereum Support","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83250,"byte_end":83273,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83274,"byte_end":83277,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This crate natively supports Ethereum-style recoverable signatures.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83278,"byte_end":83349,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ Please see the toplevel documentation of the [`recoverable`] module","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83350,"byte_end":83421,"line_start":34,"line_end":34,"column_start":1,"column_end":72}},{"value":"/ for more information.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83422,"byte_end":83447,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83448,"byte_end":83451,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ## Signing/Verification Example","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83452,"byte_end":83487,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83488,"byte_end":83491,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ This example requires the `ecdsa` and `sha256` Cargo features are enabled:","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83492,"byte_end":83570,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83571,"byte_end":83574,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83575,"byte_end":83582,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"ecdsa\", feature = \"sha256\"))]","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83583,"byte_end":83639,"line_start":42,"line_end":42,"column_start":1,"column_end":57}},{"value":"/ # {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83640,"byte_end":83647,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use k256::{","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83648,"byte_end":83663,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/     ecdsa::{SigningKey, Signature, signature::Signer},","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83664,"byte_end":83722,"line_start":45,"line_end":45,"column_start":1,"column_end":59}},{"value":"/     SecretKey,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83723,"byte_end":83741,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/ };","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83742,"byte_end":83748,"line_start":47,"line_end":47,"column_start":1,"column_end":7}},{"value":"/ use rand_core::OsRng; // requires 'getrandom' feature","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83749,"byte_end":83806,"line_start":48,"line_end":48,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83807,"byte_end":83810,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // Signing","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83811,"byte_end":83825,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/ let signing_key = SigningKey::random(&mut OsRng); // Serialize with `::to_bytes()`","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83826,"byte_end":83912,"line_start":51,"line_end":51,"column_start":1,"column_end":87}},{"value":"/ let message = b\"ECDSA proves knowledge of a secret number in the context of a single message\";","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":83913,"byte_end":84011,"line_start":52,"line_end":52,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":84012,"byte_end":84015,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ // Note: the signature type must be annotated or otherwise inferrable as","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":84016,"byte_end":84092,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ // `Signer` has many impls of the `Signer` trait (for both regular and","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":84093,"byte_end":84167,"line_start":55,"line_end":55,"column_start":1,"column_end":75}},{"value":"/ // recoverable signature types).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":84168,"byte_end":84204,"line_start":56,"line_end":56,"column_start":1,"column_end":37}},{"value":"/ let signature: Signature = signing_key.sign(message);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":84205,"byte_end":84262,"line_start":57,"line_end":57,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":84263,"byte_end":84266,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Verification","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":84267,"byte_end":84286,"line_start":59,"line_end":59,"column_start":1,"column_end":20}},{"value":"/ use k256::{EncodedPoint, ecdsa::{VerifyingKey, signature::Verifier}};","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":84287,"byte_end":84360,"line_start":60,"line_end":60,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":84361,"byte_end":84364,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ let verify_key = VerifyingKey::from(&signing_key); // Serialize with `::to_encoded_point()`","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":84365,"byte_end":84460,"line_start":62,"line_end":62,"column_start":1,"column_end":96}},{"value":"/ assert!(verify_key.verify(message, &signature).is_ok());","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":84461,"byte_end":84521,"line_start":63,"line_end":63,"column_start":1,"column_end":61}},{"value":"/ # }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":84522,"byte_end":84529,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":84530,"byte_end":84537,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":648},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"recoverable","qualname":"::ecdsa::recoverable","value":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":654},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":677},{"krate":0,"index":680},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":696},{"krate":0,"index":699},{"krate":0,"index":702},{"krate":0,"index":705},{"krate":0,"index":708},{"krate":0,"index":711},{"krate":0,"index":714},{"krate":0,"index":1404},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":715},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":740},{"krate":0,"index":1411},{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1417},{"krate":0,"index":742},{"krate":0,"index":745},{"krate":0,"index":748}],"decl_id":null,"docs":" Ethereum-style \"recoverable signatures\".","sig":null,"attributes":[{"value":"/ Ethereum-style \"recoverable signatures\".","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":85913,"byte_end":85957,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":85958,"byte_end":85961,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ These signatures include an additional [`Id`] field which allows for","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":85962,"byte_end":86034,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ recovery of the [`VerifyingKey`] which can be used to verify them.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86035,"byte_end":86105,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86106,"byte_end":86109,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is helpful in cases where a hash/fingerprint of a [`VerifyingKey`]","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86110,"byte_end":86185,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ for a given signature in known in advance.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86186,"byte_end":86232,"line_start":7,"line_end":7,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86233,"byte_end":86236,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ## Signing/Recovery Example","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86237,"byte_end":86268,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86269,"byte_end":86272,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ NOTE: make sure to enable both the `ecdsa` and `keccak256` features of","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86273,"byte_end":86347,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ this crate for the example to work.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86348,"byte_end":86387,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86388,"byte_end":86391,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86392,"byte_end":86399,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"ecdsa\", feature = \"keccak256\"))]","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86400,"byte_end":86459,"line_start":15,"line_end":15,"column_start":1,"column_end":60}},{"value":"/ # {","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86460,"byte_end":86467,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ use k256::{","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86468,"byte_end":86483,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/     ecdsa::{SigningKey, recoverable, signature::Signer},","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86484,"byte_end":86544,"line_start":18,"line_end":18,"column_start":1,"column_end":61}},{"value":"/     EncodedPoint","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86545,"byte_end":86565,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"/ };","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86566,"byte_end":86572,"line_start":20,"line_end":20,"column_start":1,"column_end":7}},{"value":"/ use rand_core::OsRng; // requires 'getrandom' feature","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86573,"byte_end":86630,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86631,"byte_end":86634,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ // Signing","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86635,"byte_end":86649,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/ let signing_key = SigningKey::random(&mut OsRng); // Serialize with `::to_bytes()`","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86650,"byte_end":86736,"line_start":24,"line_end":24,"column_start":1,"column_end":87}},{"value":"/ let verify_key = signing_key.verify_key();","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86737,"byte_end":86783,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/ let message = b\"ECDSA proves knowledge of a secret number in the context of a single message\";","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86784,"byte_end":86882,"line_start":26,"line_end":26,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86883,"byte_end":86886,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Note: the signature type must be annotated or otherwise inferrable as","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86887,"byte_end":86963,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/ // `Signer` has many impls of the `Signer` trait (for both regular and","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":86964,"byte_end":87038,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"/ // recoverable signature types).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":87039,"byte_end":87075,"line_start":30,"line_end":30,"column_start":1,"column_end":37}},{"value":"/ let signature: recoverable::Signature = signing_key.sign(message);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":87076,"byte_end":87146,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ let recovered_key = signature.recover_verify_key(message).expect(\"couldn't recover pubkey\");","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":87147,"byte_end":87243,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":87244,"byte_end":87247,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(&verify_key, &recovered_key);","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":87248,"byte_end":87292,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/ # }","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":87293,"byte_end":87300,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":87301,"byte_end":87308,"line_start":36,"line_end":36,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":714},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":87911,"byte_end":87915,"line_start":61,"line_end":61,"column_start":11,"column_end":15},"name":"SIZE","qualname":"::ecdsa::recoverable::SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Size of an Ethereum-style recoverable signature in bytes\n","sig":null,"attributes":[{"value":"/ Size of an Ethereum-style recoverable signature in bytes","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":87840,"byte_end":87900,"line_start":60,"line_end":60,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1404},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":88322,"byte_end":88331,"line_start":73,"line_end":73,"column_start":12,"column_end":21},"name":"Signature","qualname":"::ecdsa::recoverable::Signature","value":"Signature {  }","parent":null,"children":[{"krate":0,"index":1405}],"decl_id":null,"docs":" Ethereum-style \"recoverable signatures\" which allow for the recovery of\n the signer's [`VerifyingKey`] from the signature itself.","sig":null,"attributes":[{"value":"/ Ethereum-style \"recoverable signatures\" which allow for the recovery of","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":87930,"byte_end":88005,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/ the signer's [`VerifyingKey`] from the signature itself.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":88006,"byte_end":88066,"line_start":64,"line_end":64,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":88067,"byte_end":88070,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ This format consists of [`Signature`] followed by a 1-byte recovery [`Id`]","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":88071,"byte_end":88149,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ (65-bytes total):","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":88150,"byte_end":88171,"line_start":67,"line_end":67,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":88172,"byte_end":88175,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ - `r`: 32-byte integer, big endian","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":88176,"byte_end":88214,"line_start":69,"line_end":69,"column_start":1,"column_end":39}},{"value":"/ - `s`: 32-byte integer, big endian","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":88215,"byte_end":88253,"line_start":70,"line_end":70,"column_start":1,"column_end":39}},{"value":"/ - `v`: 1-byte recovery [`Id`]","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":88254,"byte_end":88287,"line_start":71,"line_end":71,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":88645,"byte_end":88648,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<Signature>::new","value":"pub fn new(&super::Signature, Id) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new recoverable ECDSA/secp256k1 signature from a regular\n fixed-size signature and an associated recovery [`Id`].","sig":null,"attributes":[{"value":"/ Create a new recoverable ECDSA/secp256k1 signature from a regular","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":88381,"byte_end":88450,"line_start":78,"line_end":78,"column_start":5,"column_end":74}},{"value":"/ fixed-size signature and an associated recovery [`Id`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":88455,"byte_end":88514,"line_start":79,"line_end":79,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":88519,"byte_end":88522,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This is an \"unchecked\" conversion and assumes the provided [`Id`]","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":88527,"byte_end":88596,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ is valid for this signature.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":88601,"byte_end":88633,"line_start":82,"line_end":82,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":89023,"byte_end":89034,"line_start":94,"line_end":94,"column_start":12,"column_end":23},"name":"recovery_id","qualname":"<Signature>::recovery_id","value":"pub fn recovery_id(Self) -> Id","parent":null,"children":[],"decl_id":null,"docs":" Get the recovery [`Id`] for this signature\n","sig":null,"attributes":[{"value":"/ Get the recovery [`Id`] for this signature","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":88965,"byte_end":89011,"line_start":93,"line_end":93,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":90135,"byte_end":90161,"line_start":121,"line_end":121,"column_start":12,"column_end":38},"name":"from_digest_trial_recovery","qualname":"<Signature>::from_digest_trial_recovery","value":"pub fn from_digest_trial_recovery<D>(&VerifyingKey, D, &super::Signature)\n-> Result<Self, Error> where D: Clone + Digest<OutputSize = U32>","parent":null,"children":[],"decl_id":null,"docs":" Given a public key, message digest, and signature, use trial recovery\n to determine if a suitable recovery ID exists, or return an error\n otherwise.\n","sig":null,"attributes":[{"value":"/ Given a public key, message digest, and signature, use trial recovery","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":89874,"byte_end":89947,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/ to determine if a suitable recovery ID exists, or return an error","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":89952,"byte_end":90021,"line_start":117,"line_end":117,"column_start":5,"column_end":74}},{"value":"/ otherwise.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":90026,"byte_end":90040,"line_start":118,"line_end":118,"column_start":5,"column_end":19}},{"value":"cfg(feature = \"ecdsa\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":90045,"byte_end":90070,"line_start":119,"line_end":119,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":91678,"byte_end":91708,"line_start":162,"line_end":162,"column_start":12,"column_end":42},"name":"recover_verify_key_from_digest","qualname":"<Signature>::recover_verify_key_from_digest","value":"pub fn recover_verify_key_from_digest<D>(&Self, D)\n-> Result<VerifyingKey, Error> where D: Digest<OutputSize = U32>","parent":null,"children":[],"decl_id":null,"docs":" Recover the public key used to create the given signature as a\n [`VerifyingKey`] from the provided precomputed [`Digest`].\n","sig":null,"attributes":[{"value":"/ Recover the public key used to create the given signature as a","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":91450,"byte_end":91516,"line_start":158,"line_end":158,"column_start":5,"column_end":71}},{"value":"/ [`VerifyingKey`] from the provided precomputed [`Digest`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":91521,"byte_end":91583,"line_start":159,"line_end":159,"column_start":5,"column_end":67}},{"value":"cfg(feature = \"ecdsa\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":91588,"byte_end":91613,"line_start":160,"line_end":160,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":92190,"byte_end":92226,"line_start":174,"line_end":174,"column_start":12,"column_end":48},"name":"recover_verify_key_from_digest_bytes","qualname":"<Signature>::recover_verify_key_from_digest_bytes","value":"pub fn recover_verify_key_from_digest_bytes(&Self, &FieldBytes)\n-> Result<VerifyingKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Recover the public key used to create the given signature as a\n [`VerifyingKey`] from the raw bytes of a message digest.\n","sig":null,"attributes":[{"value":"/ Recover the public key used to create the given signature as a","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":91903,"byte_end":91969,"line_start":169,"line_end":169,"column_start":5,"column_end":71}},{"value":"/ [`VerifyingKey`] from the raw bytes of a message digest.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":91974,"byte_end":92034,"line_start":170,"line_end":170,"column_start":5,"column_end":65}},{"value":"cfg(feature = \"ecdsa\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":92039,"byte_end":92064,"line_start":171,"line_end":171,"column_start":5,"column_end":30}},{"value":"allow(non_snake_case, clippy :: many_single_char_names)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":92122,"byte_end":92178,"line_start":173,"line_end":173,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":93132,"byte_end":93133,"line_start":200,"line_end":200,"column_start":12,"column_end":13},"name":"r","qualname":"<Signature>::r","value":"pub fn r(&Self) -> NonZeroScalar","parent":null,"children":[],"decl_id":null,"docs":" Parse the `r` component of this signature to a [`NonZeroScalar`]\n","sig":null,"attributes":[{"value":"/ Parse the `r` component of this signature to a [`NonZeroScalar`]","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":92969,"byte_end":93037,"line_start":197,"line_end":197,"column_start":5,"column_end":73}},{"value":"cfg(feature = \"ecdsa\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":93042,"byte_end":93067,"line_start":198,"line_end":198,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":93507,"byte_end":93508,"line_start":208,"line_end":208,"column_start":12,"column_end":13},"name":"s","qualname":"<Signature>::s","value":"pub fn s(&Self) -> NonZeroScalar","parent":null,"children":[],"decl_id":null,"docs":" Parse the `s` component of this signature to a [`NonZeroScalar`]\n","sig":null,"attributes":[{"value":"/ Parse the `s` component of this signature to a [`NonZeroScalar`]","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":93344,"byte_end":93412,"line_start":205,"line_end":205,"column_start":5,"column_end":73}},{"value":"cfg(feature = \"ecdsa\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":93417,"byte_end":93442,"line_start":206,"line_end":206,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1411},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":95689,"byte_end":95691,"line_start":279,"line_end":279,"column_start":12,"column_end":14},"name":"Id","qualname":"::ecdsa::recoverable::Id","value":"","parent":null,"children":[],"decl_id":null,"docs":" Identifier used to compute a [`VerifyingKey`] from a [`Signature`].","sig":null,"attributes":[{"value":"/ Identifier used to compute a [`VerifyingKey`] from a [`Signature`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":95059,"byte_end":95130,"line_start":267,"line_end":267,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":95131,"byte_end":95134,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ In practice these values are always either `0` or `1`, and indicate","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":95135,"byte_end":95206,"line_start":269,"line_end":269,"column_start":1,"column_end":72}},{"value":"/ whether or not the y-coordinate of the original [`VerifyingKey`] is odd.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":95207,"byte_end":95283,"line_start":270,"line_end":270,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":95284,"byte_end":95287,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ While values `2` and `3` are also defined to capture whether `r`","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":95288,"byte_end":95356,"line_start":272,"line_end":272,"column_start":1,"column_end":69}},{"value":"/ overflowed the curve's order, this crate does *not* support them.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":95357,"byte_end":95426,"line_start":273,"line_end":273,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":95427,"byte_end":95430,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ There is a vanishingly small chance of these values occurring outside","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":95431,"byte_end":95504,"line_start":275,"line_end":275,"column_start":1,"column_end":74}},{"value":"/ of contrived examples, so for simplicity's sake handling these values","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":95505,"byte_end":95578,"line_start":276,"line_end":276,"column_start":1,"column_end":74}},{"value":"/ is unsupported and will return an `Error` when parsing the `Id`.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":95579,"byte_end":95647,"line_start":277,"line_end":277,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":95784,"byte_end":95787,"line_start":283,"line_end":283,"column_start":12,"column_end":15},"name":"new","qualname":"<Id>::new","value":"pub fn new(u8) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Id`] from the given byte value\n","sig":null,"attributes":[{"value":"/ Create a new [`Id`] from the given byte value","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":95723,"byte_end":95772,"line_start":282,"line_end":282,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":853},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":101093,"byte_end":101103,"line_start":31,"line_end":31,"column_start":12,"column_end":22},"name":"SigningKey","qualname":"::ecdsa::sign::SigningKey","value":"SigningKey {  }","parent":null,"children":[{"krate":0,"index":854}],"decl_id":null,"docs":" ECDSA/secp256k1 signing key\n","sig":null,"attributes":[{"value":"/ ECDSA/secp256k1 signing key","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":101001,"byte_end":101032,"line_start":29,"line_end":29,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":101251,"byte_end":101257,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"random","qualname":"<SigningKey>::random","value":"pub fn random<impl CryptoRng + RngCore: CryptoRng +\n              RngCore>(impl CryptoRng + RngCore) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate a cryptographically random [`SigningKey`].\n","sig":null,"attributes":[{"value":"/ Generate a cryptographically random [`SigningKey`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":101184,"byte_end":101239,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":101457,"byte_end":101467,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<SigningKey>::from_bytes","value":"pub fn from_bytes(&[u8]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Initialize [`SigningKey`] from a raw scalar value (big endian).\n","sig":null,"attributes":[{"value":"/ Initialize [`SigningKey`] from a raw scalar value (big endian).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":101378,"byte_end":101445,"line_start":44,"line_end":44,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":101717,"byte_end":101727,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"verify_key","qualname":"<SigningKey>::verify_key","value":"pub fn verify_key(&Self) -> VerifyingKey","parent":null,"children":[],"decl_id":null,"docs":" Get the [`VerifyingKey`] which corresponds to this [`SigningKey`]\n","sig":null,"attributes":[{"value":"/ Get the [`VerifyingKey`] which corresponds to this [`SigningKey`]","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":101636,"byte_end":101705,"line_start":51,"line_end":51,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":101927,"byte_end":101935,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<SigningKey>::to_bytes","value":"pub fn to_bytes(&Self) -> FieldBytes","parent":null,"children":[],"decl_id":null,"docs":" Serialize this [`SigningKey`] as bytes\n","sig":null,"attributes":[{"value":"/ Serialize this [`SigningKey`] as bytes","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":101873,"byte_end":101915,"line_start":58,"line_end":58,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1419},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":108816,"byte_end":108828,"line_start":24,"line_end":24,"column_start":12,"column_end":24},"name":"VerifyingKey","qualname":"::ecdsa::verify::VerifyingKey","value":"VerifyingKey {  }","parent":null,"children":[{"krate":0,"index":1420}],"decl_id":null,"docs":" ECDSA/secp256k1 verification key (i.e. public key)\n","sig":null,"attributes":[{"value":"/ ECDSA/secp256k1 verification key (i.e. public key)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":108662,"byte_end":108716,"line_start":21,"line_end":21,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":109022,"byte_end":109037,"line_start":31,"line_end":31,"column_start":12,"column_end":27},"name":"from_sec1_bytes","qualname":"<VerifyingKey>::from_sec1_bytes","value":"pub fn from_sec1_bytes(&[u8]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Initialize [`VerifyingKey`] from a SEC1-encoded public key.\n","sig":null,"attributes":[{"value":"/ Initialize [`VerifyingKey`] from a SEC1-encoded public key.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":108947,"byte_end":109010,"line_start":30,"line_end":30,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":109322,"byte_end":109340,"line_start":37,"line_end":37,"column_start":12,"column_end":30},"name":"from_encoded_point","qualname":"<VerifyingKey>::from_encoded_point","value":"pub fn from_encoded_point(&EncodedPoint) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Initialize [`VerifyingKey`] from a SEC1 [`EncodedPoint`].\n","sig":null,"attributes":[{"value":"/ Initialize [`VerifyingKey`] from a SEC1 [`EncodedPoint`].","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":109184,"byte_end":109245,"line_start":35,"line_end":35,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":109638,"byte_end":109646,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<VerifyingKey>::to_bytes","value":"pub fn to_bytes(&Self) -> CompressedPoint","parent":null,"children":[],"decl_id":null,"docs":" Serialize this [`VerifyingKey`] as a SEC1-encoded bytestring\n (with point compression applied)\n","sig":null,"attributes":[{"value":"/ Serialize this [`VerifyingKey`] as a SEC1-encoded bytestring","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":109521,"byte_end":109585,"line_start":42,"line_end":42,"column_start":5,"column_end":69}},{"value":"/ (with point compression applied)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":109590,"byte_end":109626,"line_start":43,"line_end":43,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1027},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":85077,"byte_end":85086,"line_start":92,"line_end":92,"column_start":10,"column_end":19},"name":"Signature","qualname":"::ecdsa::Signature","value":"ecdsa_core::Signature<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" ECDSA/secp256k1 signature (fixed-size)\n","sig":null,"attributes":[{"value":"/ ECDSA/secp256k1 signature (fixed-size)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":85025,"byte_end":85067,"line_start":91,"line_end":91,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":85183,"byte_end":85195,"line_start":95,"line_end":95,"column_start":10,"column_end":22},"name":"DerSignature","qualname":"::ecdsa::DerSignature","value":"ecdsa_core::der::Signature<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" ECDSA/secp256k1 signature (ASN.1 DER encoded)\n","sig":null,"attributes":[{"value":"/ ECDSA/secp256k1 signature (ASN.1 DER encoded)","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":85124,"byte_end":85173,"line_start":94,"line_end":94,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1432},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":3306,"byte_end":3315,"line_start":97,"line_end":97,"column_start":12,"column_end":21},"name":"Secp256k1","qualname":"::Secp256k1","value":"","parent":null,"children":[],"decl_id":null,"docs":" K-256 (secp256k1) elliptic curve.","sig":null,"attributes":[{"value":"/ K-256 (secp256k1) elliptic curve.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":2800,"byte_end":2837,"line_start":85,"line_end":85,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":2838,"byte_end":2841,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Specified in Certicom's SECG in \"SEC 2: Recommended Elliptic Curve Domain Parameters\":","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":2842,"byte_end":2932,"line_start":87,"line_end":87,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":2933,"byte_end":2936,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ <https://www.secg.org/sec2-v2.pdf>","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":2937,"byte_end":2975,"line_start":89,"line_end":89,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":2976,"byte_end":2979,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ The curve's equation is `y² = x³ + 7` over a ~256-bit prime field.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":2980,"byte_end":3052,"line_start":91,"line_end":91,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":3053,"byte_end":3056,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ It's primarily notable for usage in Bitcoin and other cryptocurrencies,","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":3057,"byte_end":3132,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/ particularly in conjunction with the Elliptic Curve Digital Signature","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":3133,"byte_end":3206,"line_start":94,"line_end":94,"column_start":1,"column_end":74}},{"value":"/ Algorithm (ECDSA).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":3207,"byte_end":3229,"line_start":95,"line_end":95,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":1064},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":4630,"byte_end":4645,"line_start":151,"line_end":151,"column_start":10,"column_end":25},"name":"CompressedPoint","qualname":"::CompressedPoint","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Compressed SEC1-encoded secp256k1 (K-256) point.\n","sig":null,"attributes":[{"value":"/ Compressed SEC1-encoded secp256k1 (K-256) point.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":4568,"byte_end":4620,"line_start":150,"line_end":150,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":1066},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":4812,"byte_end":4822,"line_start":156,"line_end":156,"column_start":10,"column_end":20},"name":"FieldBytes","qualname":"::FieldBytes","value":"elliptic_curve::FieldBytes<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" secp256k1 (K-256) field element serialized as bytes.","sig":null,"attributes":[{"value":"/ secp256k1 (K-256) field element serialized as bytes.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":4659,"byte_end":4715,"line_start":153,"line_end":153,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":4716,"byte_end":4719,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Byte array containing a serialized field element value (base field or scalar).","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":4720,"byte_end":4802,"line_start":155,"line_end":155,"column_start":1,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":1067},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":4922,"byte_end":4934,"line_start":159,"line_end":159,"column_start":10,"column_end":22},"name":"EncodedPoint","qualname":"::EncodedPoint","value":"elliptic_curve::sec1::EncodedPoint<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" SEC1-encoded secp256k1 (K-256) curve point.\n","sig":null,"attributes":[{"value":"/ SEC1-encoded secp256k1 (K-256) curve point.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":4865,"byte_end":4912,"line_start":158,"line_end":158,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1068},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":5059,"byte_end":5068,"line_start":163,"line_end":163,"column_start":10,"column_end":19},"name":"PublicKey","qualname":"::PublicKey","value":"elliptic_curve::PublicKey<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" secp256k1 (K-256) public key.\n","sig":null,"attributes":[{"value":"/ secp256k1 (K-256) public key.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":4985,"byte_end":5018,"line_start":161,"line_end":161,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"arithmetic\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":5019,"byte_end":5049,"line_start":162,"line_end":162,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":1069},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":5232,"byte_end":5241,"line_start":168,"line_end":168,"column_start":10,"column_end":19},"name":"SecretKey","qualname":"::SecretKey","value":"elliptic_curve::SecretKey<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" secp256k1 (K-256) secret key.\n","sig":null,"attributes":[{"value":"/ secp256k1 (K-256) secret key.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":5110,"byte_end":5143,"line_start":165,"line_end":165,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"zeroize\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":5144,"byte_end":5171,"line_start":166,"line_end":166,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":1070},"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":5419,"byte_end":5430,"line_start":173,"line_end":173,"column_start":10,"column_end":21},"name":"SecretBytes","qualname":"::SecretBytes","value":"elliptic_curve::SecretBytes<Secp256k1>","parent":null,"children":[],"decl_id":null,"docs":" Bytes containing a secp256k1 secret scalar.\n","sig":null,"attributes":[{"value":"/ Bytes containing a secp256k1 secret scalar.","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":5283,"byte_end":5330,"line_start":170,"line_end":170,"column_start":1,"column_end":48}},{"value":"cfg(feature = \"zeroize\")","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":5331,"byte_end":5358,"line_start":171,"line_end":171,"column_start":1,"column_end":28}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":7836,"byte_end":7847,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":9293,"byte_end":9304,"line_start":63,"line_end":63,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":9687,"byte_end":9698,"line_start":73,"line_end":73,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":9955,"byte_end":9966,"line_start":81,"line_end":81,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":10049,"byte_end":10060,"line_start":87,"line_end":87,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":10165,"byte_end":10176,"line_start":93,"line_end":93,"column_start":13,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":10217,"byte_end":10228,"line_start":95,"line_end":95,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":10920,"byte_end":10931,"line_start":118,"line_end":118,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":12298,"byte_end":12309,"line_start":153,"line_end":153,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":12696,"byte_end":12708,"line_start":167,"line_end":167,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":12909,"byte_end":12920,"line_start":174,"line_end":174,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":13095,"byte_end":13106,"line_start":182,"line_end":182,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":13372,"byte_end":13383,"line_start":195,"line_end":195,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field/field_5x52.rs","byte_start":11443867,"byte_end":11443883,"line_start":18,"line_end":18,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field/field_5x52.rs","byte_start":11460333,"byte_end":11460349,"line_start":458,"line_end":458,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field/field_5x52.rs","byte_start":11460442,"byte_end":11460458,"line_start":464,"line_end":464,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field/field_5x52.rs","byte_start":11460986,"byte_end":11461002,"line_start":480,"line_end":480,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field/field_5x52.rs","byte_start":11461314,"byte_end":11461330,"line_start":491,"line_end":491,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field/field_impl.rs","byte_start":11462258,"byte_end":11462274,"line_start":27,"line_end":27,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1185},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field/field_impl.rs","byte_start":11465441,"byte_end":11465457,"line_start":132,"line_end":132,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field/field_impl.rs","byte_start":11465550,"byte_end":11465566,"line_start":138,"line_end":138,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field/field_impl.rs","byte_start":11466259,"byte_end":11466275,"line_start":156,"line_end":156,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field/field_impl.rs","byte_start":11466603,"byte_end":11466619,"line_start":166,"line_end":166,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":17054,"byte_end":17066,"line_start":46,"line_end":46,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":23503,"byte_end":23515,"line_start":230,"line_end":230,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":23625,"byte_end":23637,"line_start":236,"line_end":236,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":23730,"byte_end":23742,"line_start":242,"line_end":242,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":23925,"byte_end":23937,"line_start":248,"line_end":248,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":24244,"byte_end":24256,"line_start":262,"line_end":262,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":24436,"byte_end":24448,"line_start":270,"line_end":270,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":24756,"byte_end":24768,"line_start":284,"line_end":284,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":24948,"byte_end":24960,"line_start":292,"line_end":292,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":25097,"byte_end":25109,"line_start":299,"line_end":299,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/mul.rs","byte_start":36397,"byte_end":36408,"line_start":75,"line_end":75,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/mul.rs","byte_start":36608,"byte_end":36619,"line_start":85,"line_end":85,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/mul.rs","byte_start":40771,"byte_end":40786,"line_start":206,"line_end":206,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/mul.rs","byte_start":41119,"byte_end":41134,"line_start":222,"line_end":222,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/mul.rs","byte_start":41298,"byte_end":41313,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/mul.rs","byte_start":41439,"byte_end":41454,"line_start":236,"line_end":236,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":42311,"byte_end":42320,"line_start":26,"line_end":26,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":42638,"byte_end":42653,"line_start":39,"line_end":39,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":42947,"byte_end":42962,"line_start":50,"line_end":50,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":43139,"byte_end":43154,"line_start":56,"line_end":56,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":43505,"byte_end":43520,"line_start":66,"line_end":66,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":43648,"byte_end":43663,"line_start":72,"line_end":72,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":43761,"byte_end":43776,"line_start":78,"line_end":78,"column_start":13,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":43786,"byte_end":43801,"line_start":80,"line_end":80,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":49625,"byte_end":49640,"line_start":252,"line_end":252,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":50113,"byte_end":50128,"line_start":277,"line_end":277,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":50275,"byte_end":50290,"line_start":285,"line_end":285,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":50584,"byte_end":50599,"line_start":299,"line_end":299,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":50784,"byte_end":50799,"line_start":307,"line_end":307,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":50989,"byte_end":51004,"line_start":315,"line_end":315,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":51156,"byte_end":51171,"line_start":321,"line_end":321,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":51312,"byte_end":51327,"line_start":327,"line_end":327,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":51708,"byte_end":51723,"line_start":343,"line_end":343,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":51911,"byte_end":51926,"line_start":351,"line_end":351,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":52076,"byte_end":52091,"line_start":357,"line_end":357,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":52221,"byte_end":52236,"line_start":363,"line_end":363,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":52403,"byte_end":52418,"line_start":369,"line_end":369,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":52559,"byte_end":52574,"line_start":375,"line_end":375,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":52959,"byte_end":52974,"line_start":391,"line_end":391,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":53164,"byte_end":53179,"line_start":399,"line_end":399,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":53331,"byte_end":53346,"line_start":405,"line_end":405,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":53487,"byte_end":53502,"line_start":411,"line_end":411,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":53883,"byte_end":53898,"line_start":427,"line_end":427,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":54086,"byte_end":54101,"line_start":435,"line_end":435,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":54251,"byte_end":54266,"line_start":441,"line_end":441,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":54396,"byte_end":54411,"line_start":447,"line_end":447,"column_start":14,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11472431,"byte_end":11472441,"line_start":141,"line_end":141,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1314},{"krate":0,"index":1316},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1329},{"krate":0,"index":1331},{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11483182,"byte_end":11483192,"line_start":429,"line_end":429,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1335}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11483285,"byte_end":11483295,"line_start":435,"line_end":435,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1337}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11483396,"byte_end":11483406,"line_start":441,"line_end":441,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11483514,"byte_end":11483524,"line_start":447,"line_end":447,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1341}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11483695,"byte_end":11483705,"line_start":453,"line_end":453,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1343}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11483955,"byte_end":11483965,"line_start":462,"line_end":462,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11484131,"byte_end":11484145,"line_start":471,"line_end":471,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1347},{"krate":0,"index":1350}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":60962,"byte_end":60968,"line_start":48,"line_end":48,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":62174,"byte_end":62180,"line_start":94,"line_end":94,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":1394},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":63550,"byte_end":63556,"line_start":147,"line_end":147,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":63651,"byte_end":63657,"line_start":153,"line_end":153,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":63738,"byte_end":63744,"line_start":159,"line_end":159,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":69467,"byte_end":69473,"line_start":338,"line_end":338,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":69745,"byte_end":69751,"line_start":349,"line_end":349,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":70031,"byte_end":70037,"line_start":365,"line_end":365,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":70214,"byte_end":70220,"line_start":371,"line_end":371,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":70330,"byte_end":70336,"line_start":377,"line_end":377,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":70434,"byte_end":70440,"line_start":383,"line_end":383,"column_start":13,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":70458,"byte_end":70464,"line_start":385,"line_end":385,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":70685,"byte_end":70691,"line_start":401,"line_end":401,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":71122,"byte_end":71128,"line_start":425,"line_end":425,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":71273,"byte_end":71279,"line_start":433,"line_end":433,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":71404,"byte_end":71410,"line_start":439,"line_end":439,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":71529,"byte_end":71535,"line_start":445,"line_end":445,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":71821,"byte_end":71827,"line_start":461,"line_end":461,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":71972,"byte_end":71978,"line_start":469,"line_end":469,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":72103,"byte_end":72109,"line_start":475,"line_end":475,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":72227,"byte_end":72233,"line_start":481,"line_end":481,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":602},{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":72519,"byte_end":72525,"line_start":497,"line_end":497,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":72670,"byte_end":72676,"line_start":505,"line_end":505,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":72801,"byte_end":72807,"line_start":511,"line_end":511,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":72927,"byte_end":72937,"line_start":517,"line_end":517,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":73040,"byte_end":73050,"line_start":523,"line_end":523,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":73149,"byte_end":73159,"line_start":529,"line_end":529,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":73281,"byte_end":73287,"line_start":536,"line_end":536,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":81496,"byte_end":81508,"line_start":47,"line_end":47,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":88365,"byte_end":88374,"line_start":77,"line_end":77,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":716},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":721},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":93761,"byte_end":93770,"line_start":214,"line_end":214,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":93885,"byte_end":93894,"line_start":220,"line_end":220,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":93977,"byte_end":93986,"line_start":226,"line_end":226,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":94215,"byte_end":94224,"line_start":233,"line_end":233,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":94321,"byte_end":94330,"line_start":236,"line_end":236,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":94448,"byte_end":94457,"line_start":242,"line_end":242,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":738},{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":94825,"byte_end":94834,"line_start":256,"line_end":256,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":95714,"byte_end":95716,"line_start":281,"line_end":281,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":743},{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":96070,"byte_end":96072,"line_start":297,"line_end":297,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/normalize.rs","byte_start":98074,"byte_end":98080,"line_start":8,"line_end":8,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":101167,"byte_end":101177,"line_start":36,"line_end":36,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":858},{"krate":0,"index":861},{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":102086,"byte_end":102096,"line_start":65,"line_end":65,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":102388,"byte_end":102398,"line_start":76,"line_end":76,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":102697,"byte_end":102707,"line_start":86,"line_end":86,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":103030,"byte_end":103040,"line_start":96,"line_end":96,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":103695,"byte_end":103705,"line_start":112,"line_end":112,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":104123,"byte_end":104133,"line_start":126,"line_end":126,"column_start":63,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":104957,"byte_end":104967,"line_start":151,"line_end":151,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":105091,"byte_end":105101,"line_start":157,"line_end":157,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":105225,"byte_end":105234,"line_start":163,"line_end":163,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":105351,"byte_end":105360,"line_start":169,"line_end":169,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":105485,"byte_end":105497,"line_start":175,"line_end":175,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":105624,"byte_end":105636,"line_start":181,"line_end":181,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":105766,"byte_end":105776,"line_start":187,"line_end":187,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":105945,"byte_end":105955,"line_start":195,"line_end":195,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":106102,"byte_end":106108,"line_start":201,"line_end":201,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":108928,"byte_end":108940,"line_start":29,"line_end":29,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":967},{"krate":0,"index":969},{"krate":0,"index":971}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":109864,"byte_end":109876,"line_start":52,"line_end":52,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":110138,"byte_end":110150,"line_start":62,"line_end":62,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":110392,"byte_end":110404,"line_start":71,"line_end":71,"column_start":55,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":110662,"byte_end":110674,"line_start":81,"line_end":81,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":110828,"byte_end":110840,"line_start":89,"line_end":89,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":110968,"byte_end":110977,"line_start":95,"line_end":95,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":111109,"byte_end":111118,"line_start":101,"line_end":101,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":111258,"byte_end":111270,"line_start":107,"line_end":107,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":111458,"byte_end":111470,"line_start":113,"line_end":113,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":111616,"byte_end":111628,"line_start":119,"line_end":119,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":111783,"byte_end":111795,"line_start":125,"line_end":125,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":111987,"byte_end":111998,"line_start":133,"line_end":133,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":85360,"byte_end":85369,"line_start":99,"line_end":99,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":3349,"byte_end":3358,"line_start":99,"line_end":99,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":3801,"byte_end":3810,"line_start":121,"line_end":121,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1058},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":4052,"byte_end":4061,"line_start":132,"line_end":132,"column_start":45,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":4121,"byte_end":4130,"line_start":134,"line_end":134,"column_start":56,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":2171,"byte_end":2175,"line_start":57,"line_end":57,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":635}},{"kind":"Mod","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":2271,"byte_end":2276,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":647}},{"kind":"Mod","span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":84547,"byte_end":84558,"line_start":67,"line_end":67,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":648}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":7836,"byte_end":7847,"line_start":25,"line_end":25,"column_start":6,"column_end":17},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":9293,"byte_end":9304,"line_start":63,"line_end":63,"column_start":34,"column_end":45},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1071},"to":{"krate":5,"index":66}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":9687,"byte_end":9698,"line_start":73,"line_end":73,"column_start":25,"column_end":36},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1071},"to":{"krate":5,"index":58}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":9955,"byte_end":9966,"line_start":81,"line_end":81,"column_start":18,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1071},"to":{"krate":1,"index":2810}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":10049,"byte_end":10060,"line_start":87,"line_end":87,"column_start":20,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1071},"to":{"krate":1,"index":2487}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":10165,"byte_end":10176,"line_start":93,"line_end":93,"column_start":13,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1071},"to":{"krate":1,"index":2492}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":10217,"byte_end":10228,"line_start":95,"line_end":95,"column_start":37,"column_end":48},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1071},"to":{"krate":4,"index":207}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":10920,"byte_end":10931,"line_start":118,"line_end":118,"column_start":38,"column_end":49},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1071},"to":{"krate":4,"index":175}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":12298,"byte_end":12309,"line_start":153,"line_end":153,"column_start":36,"column_end":47},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1071},"to":{"krate":4,"index":178}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":12696,"byte_end":12708,"line_start":167,"line_end":167,"column_start":28,"column_end":40},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1067},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":12909,"byte_end":12920,"line_start":174,"line_end":174,"column_start":29,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1071},"to":{"krate":1,"index":2909}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":13095,"byte_end":13106,"line_start":182,"line_end":182,"column_start":14,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1071},"to":{"krate":1,"index":2926}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/affine.rs","byte_start":13372,"byte_end":13383,"line_start":195,"line_end":195,"column_start":18,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1071},"to":{"krate":31,"index":44}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field/field_5x52.rs","byte_start":11443867,"byte_end":11443883,"line_start":18,"line_end":18,"column_start":6,"column_end":22},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field/field_5x52.rs","byte_start":11460333,"byte_end":11460349,"line_start":458,"line_end":458,"column_start":18,"column_end":34},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1144},"to":{"krate":1,"index":2810}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field/field_5x52.rs","byte_start":11460442,"byte_end":11460458,"line_start":464,"line_end":464,"column_start":34,"column_end":50},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1144},"to":{"krate":5,"index":66}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field/field_5x52.rs","byte_start":11460986,"byte_end":11461002,"line_start":480,"line_end":480,"column_start":25,"column_end":41},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1144},"to":{"krate":5,"index":58}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field/field_5x52.rs","byte_start":11461314,"byte_end":11461330,"line_start":491,"line_end":491,"column_start":18,"column_end":34},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1144},"to":{"krate":31,"index":44}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field/field_impl.rs","byte_start":11462258,"byte_end":11462274,"line_start":27,"line_end":27,"column_start":6,"column_end":22},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field/field_impl.rs","byte_start":11465441,"byte_end":11465457,"line_start":132,"line_end":132,"column_start":18,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1209},"to":{"krate":1,"index":2810}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field/field_impl.rs","byte_start":11465550,"byte_end":11465566,"line_start":138,"line_end":138,"column_start":34,"column_end":50},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1209},"to":{"krate":5,"index":66}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field/field_impl.rs","byte_start":11466259,"byte_end":11466275,"line_start":156,"line_end":156,"column_start":25,"column_end":41},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1209},"to":{"krate":5,"index":58}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field/field_impl.rs","byte_start":11466603,"byte_end":11466619,"line_start":166,"line_end":166,"column_start":18,"column_end":34},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1209},"to":{"krate":31,"index":44}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":17054,"byte_end":17066,"line_start":46,"line_end":46,"column_start":6,"column_end":18},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":23503,"byte_end":23515,"line_start":230,"line_end":230,"column_start":20,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1218},"to":{"krate":1,"index":2487}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":23625,"byte_end":23637,"line_start":236,"line_end":236,"column_start":18,"column_end":30},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1218},"to":{"krate":1,"index":2810}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":23730,"byte_end":23742,"line_start":242,"line_end":242,"column_start":34,"column_end":46},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1218},"to":{"krate":5,"index":66}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":23925,"byte_end":23937,"line_start":248,"line_end":248,"column_start":25,"column_end":37},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1218},"to":{"krate":5,"index":58}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":24244,"byte_end":24256,"line_start":262,"line_end":262,"column_start":29,"column_end":41},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1218},"to":{"krate":1,"index":2899}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":24436,"byte_end":24448,"line_start":270,"line_end":270,"column_start":34,"column_end":46},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1218},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":24756,"byte_end":24768,"line_start":284,"line_end":284,"column_start":29,"column_end":41},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1218},"to":{"krate":1,"index":2909}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":24948,"byte_end":24960,"line_start":292,"line_end":292,"column_start":34,"column_end":46},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1218},"to":{"krate":1,"index":2938}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/field.rs","byte_start":25097,"byte_end":25109,"line_start":299,"line_end":299,"column_start":18,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1218},"to":{"krate":31,"index":44}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/mul.rs","byte_start":36397,"byte_end":36408,"line_start":75,"line_end":75,"column_start":33,"column_end":44},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":209},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/mul.rs","byte_start":36608,"byte_end":36619,"line_start":85,"line_end":85,"column_start":6,"column_end":17},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/mul.rs","byte_start":40771,"byte_end":40786,"line_start":206,"line_end":206,"column_start":22,"column_end":37},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2909}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/mul.rs","byte_start":41119,"byte_end":41134,"line_start":222,"line_end":222,"column_start":23,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2909}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/mul.rs","byte_start":41298,"byte_end":41313,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2938}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/mul.rs","byte_start":41439,"byte_end":41454,"line_start":236,"line_end":236,"column_start":29,"column_end":44},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2938}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":42311,"byte_end":42320,"line_start":26,"line_end":26,"column_start":31,"column_end":40},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1432},"to":{"krate":4,"index":457}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":42638,"byte_end":42653,"line_start":39,"line_end":39,"column_start":28,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":42947,"byte_end":42962,"line_start":50,"line_end":50,"column_start":38,"column_end":53},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1227},"to":{"krate":4,"index":175}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":43139,"byte_end":43154,"line_start":56,"line_end":56,"column_start":34,"column_end":49},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1227},"to":{"krate":5,"index":66}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":43505,"byte_end":43520,"line_start":66,"line_end":66,"column_start":25,"column_end":40},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1227},"to":{"krate":5,"index":58}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":43648,"byte_end":43663,"line_start":72,"line_end":72,"column_start":20,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2487}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":43761,"byte_end":43776,"line_start":78,"line_end":78,"column_start":13,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2492}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":43786,"byte_end":43801,"line_start":80,"line_end":80,"column_start":6,"column_end":21},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":49625,"byte_end":49640,"line_start":252,"line_end":252,"column_start":16,"column_end":31},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1227},"to":{"krate":33,"index":173}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":50113,"byte_end":50128,"line_start":277,"line_end":277,"column_start":16,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1227},"to":{"krate":33,"index":182}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":50275,"byte_end":50290,"line_start":285,"line_end":285,"column_start":18,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2810}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":50584,"byte_end":50599,"line_start":299,"line_end":299,"column_start":31,"column_end":46},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2899}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":50784,"byte_end":50799,"line_start":307,"line_end":307,"column_start":32,"column_end":47},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2899}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":50989,"byte_end":51004,"line_start":315,"line_end":315,"column_start":37,"column_end":52},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":51156,"byte_end":51171,"line_start":321,"line_end":321,"column_start":38,"column_end":53},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":51312,"byte_end":51327,"line_start":327,"line_end":327,"column_start":27,"column_end":42},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2899}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":51708,"byte_end":51723,"line_start":343,"line_end":343,"column_start":28,"column_end":43},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2899}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":51911,"byte_end":51926,"line_start":351,"line_end":351,"column_start":33,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":52076,"byte_end":52091,"line_start":357,"line_end":357,"column_start":34,"column_end":49},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":52221,"byte_end":52236,"line_start":363,"line_end":363,"column_start":14,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":7029}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":52403,"byte_end":52418,"line_start":369,"line_end":369,"column_start":39,"column_end":54},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":7029}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":52559,"byte_end":52574,"line_start":375,"line_end":375,"column_start":31,"column_end":46},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2904}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":52959,"byte_end":52974,"line_start":391,"line_end":391,"column_start":32,"column_end":47},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2904}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":53164,"byte_end":53179,"line_start":399,"line_end":399,"column_start":37,"column_end":52},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2934}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":53331,"byte_end":53346,"line_start":405,"line_end":405,"column_start":38,"column_end":53},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2934}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":53487,"byte_end":53502,"line_start":411,"line_end":411,"column_start":27,"column_end":42},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2904}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":53883,"byte_end":53898,"line_start":427,"line_end":427,"column_start":28,"column_end":43},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2904}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":54086,"byte_end":54101,"line_start":435,"line_end":435,"column_start":33,"column_end":48},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2934}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":54251,"byte_end":54266,"line_start":441,"line_end":441,"column_start":34,"column_end":49},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2934}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/projective.rs","byte_start":54396,"byte_end":54411,"line_start":447,"line_end":447,"column_start":14,"column_end":29},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1227},"to":{"krate":1,"index":2926}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11472431,"byte_end":11472441,"line_start":141,"line_end":141,"column_start":6,"column_end":16},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11483182,"byte_end":11483192,"line_start":429,"line_end":429,"column_start":18,"column_end":28},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1360},"to":{"krate":31,"index":44}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11483285,"byte_end":11483295,"line_start":435,"line_end":435,"column_start":20,"column_end":30},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1360},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11483396,"byte_end":11483406,"line_start":441,"line_end":441,"column_start":20,"column_end":30},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1360},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11483514,"byte_end":11483524,"line_start":447,"line_end":447,"column_start":34,"column_end":44},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1360},"to":{"krate":5,"index":66}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11483695,"byte_end":11483705,"line_start":453,"line_end":453,"column_start":25,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1360},"to":{"krate":5,"index":58}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11483955,"byte_end":11483965,"line_start":462,"line_end":462,"column_start":27,"column_end":37},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":498},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar/scalar_4x64.rs","byte_start":11484131,"byte_end":11484145,"line_start":471,"line_end":471,"column_start":6,"column_end":20},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":60962,"byte_end":60968,"line_start":48,"line_end":48,"column_start":16,"column_end":22},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1384},"to":{"krate":21,"index":63}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":62174,"byte_end":62180,"line_start":94,"line_end":94,"column_start":21,"column_end":27},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1384},"to":{"krate":21,"index":82}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":63550,"byte_end":63556,"line_start":147,"line_end":147,"column_start":20,"column_end":26},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1384},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":63651,"byte_end":63657,"line_start":153,"line_end":153,"column_start":20,"column_end":26},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1384},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":63738,"byte_end":63744,"line_start":159,"line_end":159,"column_start":6,"column_end":12},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":69467,"byte_end":69473,"line_start":338,"line_end":338,"column_start":32,"column_end":38},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1384},"to":{"krate":34,"index":156}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":69745,"byte_end":69751,"line_start":349,"line_end":349,"column_start":21,"column_end":27},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1384},"to":{"krate":1,"index":2976}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":70031,"byte_end":70037,"line_start":365,"line_end":365,"column_start":34,"column_end":40},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1384},"to":{"krate":5,"index":66}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":70214,"byte_end":70220,"line_start":371,"line_end":371,"column_start":25,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1384},"to":{"krate":5,"index":58}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":70330,"byte_end":70336,"line_start":377,"line_end":377,"column_start":20,"column_end":26},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1384},"to":{"krate":1,"index":2487}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":70434,"byte_end":70440,"line_start":383,"line_end":383,"column_start":13,"column_end":19},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1384},"to":{"krate":1,"index":2492}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":70458,"byte_end":70464,"line_start":385,"line_end":385,"column_start":14,"column_end":20},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1384},"to":{"krate":1,"index":2926}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":70685,"byte_end":70691,"line_start":401,"line_end":401,"column_start":22,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1384},"to":{"krate":1,"index":2899}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":71122,"byte_end":71128,"line_start":425,"line_end":425,"column_start":23,"column_end":29},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1384},"to":{"krate":1,"index":2899}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":71273,"byte_end":71279,"line_start":433,"line_end":433,"column_start":28,"column_end":34},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1384},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":71404,"byte_end":71410,"line_start":439,"line_end":439,"column_start":29,"column_end":35},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1384},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":71529,"byte_end":71535,"line_start":445,"line_end":445,"column_start":22,"column_end":28},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1384},"to":{"krate":1,"index":2904}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":71821,"byte_end":71827,"line_start":461,"line_end":461,"column_start":23,"column_end":29},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1384},"to":{"krate":1,"index":2904}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":71972,"byte_end":71978,"line_start":469,"line_end":469,"column_start":28,"column_end":34},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1384},"to":{"krate":1,"index":2934}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":72103,"byte_end":72109,"line_start":475,"line_end":475,"column_start":29,"column_end":35},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1384},"to":{"krate":1,"index":2934}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":72227,"byte_end":72233,"line_start":481,"line_end":481,"column_start":22,"column_end":28},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1384},"to":{"krate":1,"index":2909}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":72519,"byte_end":72525,"line_start":497,"line_end":497,"column_start":23,"column_end":29},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1384},"to":{"krate":1,"index":2909}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":72670,"byte_end":72676,"line_start":505,"line_end":505,"column_start":28,"column_end":34},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1384},"to":{"krate":1,"index":2938}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":72801,"byte_end":72807,"line_start":511,"line_end":511,"column_start":29,"column_end":35},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1384},"to":{"krate":1,"index":2938}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":72927,"byte_end":72937,"line_start":517,"line_end":517,"column_start":24,"column_end":34},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":498},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":73040,"byte_end":73050,"line_start":523,"line_end":523,"column_start":23,"column_end":33},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1066},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":73149,"byte_end":73159,"line_start":529,"line_end":529,"column_start":24,"column_end":34},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1066},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/arithmetic/scalar.rs","byte_start":73281,"byte_end":73287,"line_start":536,"line_end":536,"column_start":18,"column_end":24},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1384},"to":{"krate":31,"index":44}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdh.rs","byte_start":81496,"byte_end":81508,"line_start":47,"line_end":47,"column_start":29,"column_end":41},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":644},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":88365,"byte_end":88374,"line_start":77,"line_end":77,"column_start":6,"column_end":15},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":93761,"byte_end":93770,"line_start":214,"line_end":214,"column_start":43,"column_end":52},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1404},"to":{"krate":36,"index":60}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":93885,"byte_end":93894,"line_start":220,"line_end":220,"column_start":22,"column_end":31},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1404},"to":{"krate":1,"index":2729}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":93977,"byte_end":93986,"line_start":226,"line_end":226,"column_start":16,"column_end":25},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1404},"to":{"krate":1,"index":8805}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":94215,"byte_end":94224,"line_start":233,"line_end":233,"column_start":13,"column_end":22},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1404},"to":{"krate":1,"index":2492}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":94321,"byte_end":94330,"line_start":236,"line_end":236,"column_start":20,"column_end":29},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1404},"to":{"krate":1,"index":2487}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":94448,"byte_end":94457,"line_start":242,"line_end":242,"column_start":25,"column_end":34},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1404},"to":{"krate":1,"index":2745}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":94825,"byte_end":94834,"line_start":256,"line_end":256,"column_start":33,"column_end":42},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1027},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":95714,"byte_end":95716,"line_start":281,"line_end":281,"column_start":6,"column_end":8},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/recoverable.rs","byte_start":96070,"byte_end":96072,"line_start":297,"line_end":297,"column_start":22,"column_end":24},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1411},"to":{"krate":1,"index":2745}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/normalize.rs","byte_start":98074,"byte_end":98080,"line_start":8,"line_end":8,"column_start":23,"column_end":29},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1384},"to":{"krate":34,"index":627}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":101167,"byte_end":101177,"line_start":36,"line_end":36,"column_start":6,"column_end":16},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":102086,"byte_end":102096,"line_start":65,"line_end":65,"column_start":34,"column_end":44},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":853},"to":{"krate":36,"index":83}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":102388,"byte_end":102398,"line_start":76,"line_end":76,"column_start":33,"column_end":43},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":853},"to":{"krate":36,"index":92}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":102697,"byte_end":102707,"line_start":86,"line_end":86,"column_start":40,"column_end":50},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":853},"to":{"krate":36,"index":87}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":103030,"byte_end":103040,"line_start":96,"line_end":96,"column_start":53,"column_end":63},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":853},"to":{"krate":36,"index":87}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":103695,"byte_end":103705,"line_start":112,"line_end":112,"column_start":50,"column_end":60},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":853},"to":{"krate":36,"index":98}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":104123,"byte_end":104133,"line_start":126,"line_end":126,"column_start":63,"column_end":73},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":853},"to":{"krate":36,"index":98}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":104957,"byte_end":104967,"line_start":151,"line_end":151,"column_start":26,"column_end":36},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":853},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":105091,"byte_end":105101,"line_start":157,"line_end":157,"column_start":27,"column_end":37},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":853},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":105225,"byte_end":105234,"line_start":163,"line_end":163,"column_start":27,"column_end":36},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1069},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":105351,"byte_end":105360,"line_start":169,"line_end":169,"column_start":28,"column_end":37},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1069},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":105485,"byte_end":105497,"line_start":175,"line_end":175,"column_start":27,"column_end":39},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1419},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":105624,"byte_end":105636,"line_start":181,"line_end":181,"column_start":28,"column_end":40},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1419},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":105766,"byte_end":105776,"line_start":187,"line_end":187,"column_start":30,"column_end":40},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":853},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":105945,"byte_end":105955,"line_start":195,"line_end":195,"column_start":31,"column_end":41},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":853},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/sign.rs","byte_start":106102,"byte_end":106108,"line_start":201,"line_end":201,"column_start":46,"column_end":52},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1384},"to":{"krate":34,"index":141}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":108928,"byte_end":108940,"line_start":29,"line_end":29,"column_start":6,"column_end":18},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":109864,"byte_end":109876,"line_start":52,"line_end":52,"column_start":36,"column_end":48},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1419},"to":{"krate":36,"index":116}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":110138,"byte_end":110150,"line_start":62,"line_end":62,"column_start":42,"column_end":54},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1419},"to":{"krate":36,"index":119}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":110392,"byte_end":110404,"line_start":71,"line_end":71,"column_start":55,"column_end":67},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1419},"to":{"krate":36,"index":119}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":110662,"byte_end":110674,"line_start":81,"line_end":81,"column_start":26,"column_end":38},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1419},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":110828,"byte_end":110840,"line_start":89,"line_end":89,"column_start":27,"column_end":39},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1419},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":110968,"byte_end":110977,"line_start":95,"line_end":95,"column_start":29,"column_end":38},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1068},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":111109,"byte_end":111118,"line_start":101,"line_end":101,"column_start":30,"column_end":39},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1068},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":111258,"byte_end":111270,"line_start":107,"line_end":107,"column_start":29,"column_end":41},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1419},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":111458,"byte_end":111470,"line_start":113,"line_end":113,"column_start":30,"column_end":42},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1067},"to":{"krate":1,"index":2738}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":111616,"byte_end":111628,"line_start":119,"line_end":119,"column_start":36,"column_end":48},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1419},"to":{"krate":4,"index":178}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":111783,"byte_end":111795,"line_start":125,"line_end":125,"column_start":33,"column_end":45},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1419},"to":{"krate":1,"index":2745}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa/verify.rs","byte_start":111987,"byte_end":111998,"line_start":133,"line_end":133,"column_start":37,"column_end":48},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1071},"to":{"krate":34,"index":151}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/ecdsa.rs","byte_start":85360,"byte_end":85369,"line_start":99,"line_end":99,"column_start":46,"column_end":55},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1432},"to":{"krate":34,"index":154}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":3349,"byte_end":3358,"line_start":99,"line_end":99,"column_start":32,"column_end":41},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1432},"to":{"krate":4,"index":885}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":3801,"byte_end":3810,"line_start":121,"line_end":121,"column_start":32,"column_end":41},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1432},"to":{"krate":4,"index":229}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":4052,"byte_end":4061,"line_start":132,"line_end":132,"column_start":45,"column_end":54},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1432},"to":{"krate":4,"index":204}},{"span":{"file_name":"/Users/julia/.cargo/registry/src/github.com-1ecc6299db9ec823/k256-0.8.1/src/lib.rs","byte_start":4121,"byte_end":4130,"line_start":134,"line_end":134,"column_start":56,"column_end":65},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1432},"to":{"krate":4,"index":205}}]}